'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSetMultiplicador"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSetMultiplicador
    Inherits Global.System.Data.DataSet
    
    Private tablesag_registro_senasa As sag_registro_senasaDataTable
    
    Private tablesag_registro_senasa1 As sag_registro_senasa1DataTable
    
    Private tablesag_registro_multiplicador As sag_registro_multiplicadorDataTable
    
    Private tablesag_registro_lote As sag_registro_loteDataTable
    
    Private tablevista_multi_lote As vista_multi_loteDataTable
    
    Private tablevista_acta_lote_multi As vista_acta_lote_multiDataTable
    
    Private tablevista_ficha_informe As vista_ficha_informeDataTable
    
    Private tablevista_acta_lote_multi_germ As vista_acta_lote_multi_germDataTable
    
    Private tablevista_inventario As vista_inventarioDataTable
    
    Private tablevista_inventario_informe As vista_inventario_informeDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("sag_registro_senasa")) Is Nothing) Then
                MyBase.Tables.Add(New sag_registro_senasaDataTable(ds.Tables("sag_registro_senasa")))
            End If
            If (Not (ds.Tables("sag_registro_senasa1")) Is Nothing) Then
                MyBase.Tables.Add(New sag_registro_senasa1DataTable(ds.Tables("sag_registro_senasa1")))
            End If
            If (Not (ds.Tables("sag_registro_multiplicador")) Is Nothing) Then
                MyBase.Tables.Add(New sag_registro_multiplicadorDataTable(ds.Tables("sag_registro_multiplicador")))
            End If
            If (Not (ds.Tables("sag_registro_lote")) Is Nothing) Then
                MyBase.Tables.Add(New sag_registro_loteDataTable(ds.Tables("sag_registro_lote")))
            End If
            If (Not (ds.Tables("vista_multi_lote")) Is Nothing) Then
                MyBase.Tables.Add(New vista_multi_loteDataTable(ds.Tables("vista_multi_lote")))
            End If
            If (Not (ds.Tables("vista_acta_lote_multi")) Is Nothing) Then
                MyBase.Tables.Add(New vista_acta_lote_multiDataTable(ds.Tables("vista_acta_lote_multi")))
            End If
            If (Not (ds.Tables("vista_ficha_informe")) Is Nothing) Then
                MyBase.Tables.Add(New vista_ficha_informeDataTable(ds.Tables("vista_ficha_informe")))
            End If
            If (Not (ds.Tables("vista_acta_lote_multi_germ")) Is Nothing) Then
                MyBase.Tables.Add(New vista_acta_lote_multi_germDataTable(ds.Tables("vista_acta_lote_multi_germ")))
            End If
            If (Not (ds.Tables("vista_inventario")) Is Nothing) Then
                MyBase.Tables.Add(New vista_inventarioDataTable(ds.Tables("vista_inventario")))
            End If
            If (Not (ds.Tables("vista_inventario_informe")) Is Nothing) Then
                MyBase.Tables.Add(New vista_inventario_informeDataTable(ds.Tables("vista_inventario_informe")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property sag_registro_senasa() As sag_registro_senasaDataTable
        Get
            Return Me.tablesag_registro_senasa
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property sag_registro_senasa1() As sag_registro_senasa1DataTable
        Get
            Return Me.tablesag_registro_senasa1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property sag_registro_multiplicador() As sag_registro_multiplicadorDataTable
        Get
            Return Me.tablesag_registro_multiplicador
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property sag_registro_lote() As sag_registro_loteDataTable
        Get
            Return Me.tablesag_registro_lote
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vista_multi_lote() As vista_multi_loteDataTable
        Get
            Return Me.tablevista_multi_lote
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vista_acta_lote_multi() As vista_acta_lote_multiDataTable
        Get
            Return Me.tablevista_acta_lote_multi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vista_ficha_informe() As vista_ficha_informeDataTable
        Get
            Return Me.tablevista_ficha_informe
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vista_acta_lote_multi_germ() As vista_acta_lote_multi_germDataTable
        Get
            Return Me.tablevista_acta_lote_multi_germ
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vista_inventario() As vista_inventarioDataTable
        Get
            Return Me.tablevista_inventario
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vista_inventario_informe() As vista_inventario_informeDataTable
        Get
            Return Me.tablevista_inventario_informe
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSetMultiplicador = CType(MyBase.Clone,DataSetMultiplicador)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("sag_registro_senasa")) Is Nothing) Then
                MyBase.Tables.Add(New sag_registro_senasaDataTable(ds.Tables("sag_registro_senasa")))
            End If
            If (Not (ds.Tables("sag_registro_senasa1")) Is Nothing) Then
                MyBase.Tables.Add(New sag_registro_senasa1DataTable(ds.Tables("sag_registro_senasa1")))
            End If
            If (Not (ds.Tables("sag_registro_multiplicador")) Is Nothing) Then
                MyBase.Tables.Add(New sag_registro_multiplicadorDataTable(ds.Tables("sag_registro_multiplicador")))
            End If
            If (Not (ds.Tables("sag_registro_lote")) Is Nothing) Then
                MyBase.Tables.Add(New sag_registro_loteDataTable(ds.Tables("sag_registro_lote")))
            End If
            If (Not (ds.Tables("vista_multi_lote")) Is Nothing) Then
                MyBase.Tables.Add(New vista_multi_loteDataTable(ds.Tables("vista_multi_lote")))
            End If
            If (Not (ds.Tables("vista_acta_lote_multi")) Is Nothing) Then
                MyBase.Tables.Add(New vista_acta_lote_multiDataTable(ds.Tables("vista_acta_lote_multi")))
            End If
            If (Not (ds.Tables("vista_ficha_informe")) Is Nothing) Then
                MyBase.Tables.Add(New vista_ficha_informeDataTable(ds.Tables("vista_ficha_informe")))
            End If
            If (Not (ds.Tables("vista_acta_lote_multi_germ")) Is Nothing) Then
                MyBase.Tables.Add(New vista_acta_lote_multi_germDataTable(ds.Tables("vista_acta_lote_multi_germ")))
            End If
            If (Not (ds.Tables("vista_inventario")) Is Nothing) Then
                MyBase.Tables.Add(New vista_inventarioDataTable(ds.Tables("vista_inventario")))
            End If
            If (Not (ds.Tables("vista_inventario_informe")) Is Nothing) Then
                MyBase.Tables.Add(New vista_inventario_informeDataTable(ds.Tables("vista_inventario_informe")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablesag_registro_senasa = CType(MyBase.Tables("sag_registro_senasa"),sag_registro_senasaDataTable)
        If (initTable = true) Then
            If (Not (Me.tablesag_registro_senasa) Is Nothing) Then
                Me.tablesag_registro_senasa.InitVars
            End If
        End If
        Me.tablesag_registro_senasa1 = CType(MyBase.Tables("sag_registro_senasa1"),sag_registro_senasa1DataTable)
        If (initTable = true) Then
            If (Not (Me.tablesag_registro_senasa1) Is Nothing) Then
                Me.tablesag_registro_senasa1.InitVars
            End If
        End If
        Me.tablesag_registro_multiplicador = CType(MyBase.Tables("sag_registro_multiplicador"),sag_registro_multiplicadorDataTable)
        If (initTable = true) Then
            If (Not (Me.tablesag_registro_multiplicador) Is Nothing) Then
                Me.tablesag_registro_multiplicador.InitVars
            End If
        End If
        Me.tablesag_registro_lote = CType(MyBase.Tables("sag_registro_lote"),sag_registro_loteDataTable)
        If (initTable = true) Then
            If (Not (Me.tablesag_registro_lote) Is Nothing) Then
                Me.tablesag_registro_lote.InitVars
            End If
        End If
        Me.tablevista_multi_lote = CType(MyBase.Tables("vista_multi_lote"),vista_multi_loteDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevista_multi_lote) Is Nothing) Then
                Me.tablevista_multi_lote.InitVars
            End If
        End If
        Me.tablevista_acta_lote_multi = CType(MyBase.Tables("vista_acta_lote_multi"),vista_acta_lote_multiDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevista_acta_lote_multi) Is Nothing) Then
                Me.tablevista_acta_lote_multi.InitVars
            End If
        End If
        Me.tablevista_ficha_informe = CType(MyBase.Tables("vista_ficha_informe"),vista_ficha_informeDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevista_ficha_informe) Is Nothing) Then
                Me.tablevista_ficha_informe.InitVars
            End If
        End If
        Me.tablevista_acta_lote_multi_germ = CType(MyBase.Tables("vista_acta_lote_multi_germ"),vista_acta_lote_multi_germDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevista_acta_lote_multi_germ) Is Nothing) Then
                Me.tablevista_acta_lote_multi_germ.InitVars
            End If
        End If
        Me.tablevista_inventario = CType(MyBase.Tables("vista_inventario"),vista_inventarioDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevista_inventario) Is Nothing) Then
                Me.tablevista_inventario.InitVars
            End If
        End If
        Me.tablevista_inventario_informe = CType(MyBase.Tables("vista_inventario_informe"),vista_inventario_informeDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevista_inventario_informe) Is Nothing) Then
                Me.tablevista_inventario_informe.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSetMultiplicador"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSetMultiplicador.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablesag_registro_senasa = New sag_registro_senasaDataTable()
        MyBase.Tables.Add(Me.tablesag_registro_senasa)
        Me.tablesag_registro_senasa1 = New sag_registro_senasa1DataTable()
        MyBase.Tables.Add(Me.tablesag_registro_senasa1)
        Me.tablesag_registro_multiplicador = New sag_registro_multiplicadorDataTable()
        MyBase.Tables.Add(Me.tablesag_registro_multiplicador)
        Me.tablesag_registro_lote = New sag_registro_loteDataTable()
        MyBase.Tables.Add(Me.tablesag_registro_lote)
        Me.tablevista_multi_lote = New vista_multi_loteDataTable()
        MyBase.Tables.Add(Me.tablevista_multi_lote)
        Me.tablevista_acta_lote_multi = New vista_acta_lote_multiDataTable()
        MyBase.Tables.Add(Me.tablevista_acta_lote_multi)
        Me.tablevista_ficha_informe = New vista_ficha_informeDataTable()
        MyBase.Tables.Add(Me.tablevista_ficha_informe)
        Me.tablevista_acta_lote_multi_germ = New vista_acta_lote_multi_germDataTable()
        MyBase.Tables.Add(Me.tablevista_acta_lote_multi_germ)
        Me.tablevista_inventario = New vista_inventarioDataTable()
        MyBase.Tables.Add(Me.tablevista_inventario)
        Me.tablevista_inventario_informe = New vista_inventario_informeDataTable()
        MyBase.Tables.Add(Me.tablevista_inventario_informe)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializesag_registro_senasa() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializesag_registro_senasa1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializesag_registro_multiplicador() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializesag_registro_lote() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializevista_multi_lote() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializevista_acta_lote_multi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializevista_ficha_informe() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializevista_acta_lote_multi_germ() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializevista_inventario() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializevista_inventario_informe() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSetMultiplicador = New DataSetMultiplicador()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub sag_registro_senasaRowChangeEventHandler(ByVal sender As Object, ByVal e As sag_registro_senasaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub sag_registro_senasa1RowChangeEventHandler(ByVal sender As Object, ByVal e As sag_registro_senasa1RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub sag_registro_multiplicadorRowChangeEventHandler(ByVal sender As Object, ByVal e As sag_registro_multiplicadorRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub sag_registro_loteRowChangeEventHandler(ByVal sender As Object, ByVal e As sag_registro_loteRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub vista_multi_loteRowChangeEventHandler(ByVal sender As Object, ByVal e As vista_multi_loteRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub vista_acta_lote_multiRowChangeEventHandler(ByVal sender As Object, ByVal e As vista_acta_lote_multiRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub vista_ficha_informeRowChangeEventHandler(ByVal sender As Object, ByVal e As vista_ficha_informeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub vista_acta_lote_multi_germRowChangeEventHandler(ByVal sender As Object, ByVal e As vista_acta_lote_multi_germRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub vista_inventarioRowChangeEventHandler(ByVal sender As Object, ByVal e As vista_inventarioRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub vista_inventario_informeRowChangeEventHandler(ByVal sender As Object, ByVal e As vista_inventario_informeRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class sag_registro_senasaDataTable
        Inherits Global.System.Data.TypedTableBase(Of sag_registro_senasaRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnnombre_productor As Global.System.Data.DataColumn
        
        Private columnrepresentante_legar As Global.System.Data.DataColumn
        
        Private columnidentidad_productor As Global.System.Data.DataColumn
        
        Private columnextendida As Global.System.Data.DataColumn
        
        Private columnresidencia_productor As Global.System.Data.DataColumn
        
        Private columntelefono_productor As Global.System.Data.DataColumn
        
        Private columnno_registro_productor As Global.System.Data.DataColumn
        
        Private columnnombre_multiplicador As Global.System.Data.DataColumn
        
        Private columncedula_multiplicador As Global.System.Data.DataColumn
        
        Private columntelefono_multiplicador As Global.System.Data.DataColumn
        
        Private columnnombre_finca As Global.System.Data.DataColumn
        
        Private columnnombre_persona_finca As Global.System.Data.DataColumn
        
        Private columndepartamento As Global.System.Data.DataColumn
        
        Private columnmunicipio As Global.System.Data.DataColumn
        
        Private columnaldea As Global.System.Data.DataColumn
        
        Private columncaserio As Global.System.Data.DataColumn
        
        Private columnnombre_lote As Global.System.Data.DataColumn
        
        Private columncroquis As Global.System.Data.DataColumn
        
        Private columncultivo As Global.System.Data.DataColumn
        
        Private columncategoria As Global.System.Data.DataColumn
        
        Private columnvariedad As Global.System.Data.DataColumn
        
        Private columnproductor As Global.System.Data.DataColumn
        
        Private columnno_lote As Global.System.Data.DataColumn
        
        Private columnfecha_analisis As Global.System.Data.DataColumn
        
        Private columnano_produ As Global.System.Data.DataColumn
        
        Private columncategoria_2 As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columncultivo_2 As Global.System.Data.DataColumn
        
        Private columnvariedad_2 As Global.System.Data.DataColumn
        
        Private columnsuperficie_sembrar As Global.System.Data.DataColumn
        
        Private columnfecha_aproxi_siembra As Global.System.Data.DataColumn
        
        Private columnfecha_aproxi_cosecha As Global.System.Data.DataColumn
        
        Private columnproduc_estima_ha As Global.System.Data.DataColumn
        
        Private columndestino As Global.System.Data.DataColumn
        
        Private columncertificado_origen_semilla As Global.System.Data.DataColumn
        
        Private columnfactura_comercio As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "sag_registro_senasa"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property representante_legarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrepresentante_legar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property identidad_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidentidad_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property extendidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnextendida
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property residencia_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnresidencia_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property telefono_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_registro_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_registro_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cedula_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncedula_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property telefono_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_fincaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_finca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_persona_fincaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_persona_finca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property departamentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndepartamento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property municipioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmunicipio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property aldeaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaldea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property caserioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncaserio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_loteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_lote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property croquisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncroquis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cultivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncultivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property categoriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategoria
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property variedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvariedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproductor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_loteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_lote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_analisisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_analisis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ano_produColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnano_produ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property categoria_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncategoria_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cultivo_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncultivo_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property variedad_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnvariedad_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property superficie_sembrarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsuperficie_sembrar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_aproxi_siembraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_aproxi_siembra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_aproxi_cosechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_aproxi_cosecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property produc_estima_haColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproduc_estima_ha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property destinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndestino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property certificado_origen_semillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncertificado_origen_semilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property factura_comercioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfactura_comercio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As sag_registro_senasaRow
            Get
                Return CType(Me.Rows(index),sag_registro_senasaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_senasaRowChanging As sag_registro_senasaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_senasaRowChanged As sag_registro_senasaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_senasaRowDeleting As sag_registro_senasaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_senasaRowDeleted As sag_registro_senasaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addsag_registro_senasaRow(ByVal row As sag_registro_senasaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addsag_registro_senasaRow( _
                    ByVal nombre_productor As String,  _
                    ByVal representante_legar As String,  _
                    ByVal identidad_productor As String,  _
                    ByVal extendida As Date,  _
                    ByVal residencia_productor As String,  _
                    ByVal telefono_productor As String,  _
                    ByVal no_registro_productor As String,  _
                    ByVal nombre_multiplicador As String,  _
                    ByVal cedula_multiplicador As String,  _
                    ByVal telefono_multiplicador As String,  _
                    ByVal nombre_finca As String,  _
                    ByVal nombre_persona_finca As String,  _
                    ByVal departamento As String,  _
                    ByVal municipio As String,  _
                    ByVal aldea As String,  _
                    ByVal caserio As String,  _
                    ByVal nombre_lote As String,  _
                    ByVal croquis() As Byte,  _
                    ByVal cultivo As String,  _
                    ByVal categoria As String,  _
                    ByVal variedad As String,  _
                    ByVal productor As String,  _
                    ByVal no_lote As String,  _
                    ByVal fecha_analisis As Date,  _
                    ByVal ano_produ As String,  _
                    ByVal categoria_2 As String,  _
                    ByVal tipo As String,  _
                    ByVal cultivo_2 As String,  _
                    ByVal variedad_2 As String,  _
                    ByVal superficie_sembrar As Decimal,  _
                    ByVal fecha_aproxi_siembra As Date,  _
                    ByVal fecha_aproxi_cosecha As Date,  _
                    ByVal produc_estima_ha As Decimal,  _
                    ByVal destino As String,  _
                    ByVal certificado_origen_semilla() As Byte,  _
                    ByVal factura_comercio() As Byte,  _
                    ByVal estado As String) As sag_registro_senasaRow
            Dim rowsag_registro_senasaRow As sag_registro_senasaRow = CType(Me.NewRow,sag_registro_senasaRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, nombre_productor, representante_legar, identidad_productor, extendida, residencia_productor, telefono_productor, no_registro_productor, nombre_multiplicador, cedula_multiplicador, telefono_multiplicador, nombre_finca, nombre_persona_finca, departamento, municipio, aldea, caserio, nombre_lote, croquis, cultivo, categoria, variedad, productor, no_lote, fecha_analisis, ano_produ, categoria_2, tipo, cultivo_2, variedad_2, superficie_sembrar, fecha_aproxi_siembra, fecha_aproxi_cosecha, produc_estima_ha, destino, certificado_origen_semilla, factura_comercio, estado}
            rowsag_registro_senasaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowsag_registro_senasaRow)
            Return rowsag_registro_senasaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As sag_registro_senasaRow
            Return CType(Me.Rows.Find(New Object() {Id}),sag_registro_senasaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As sag_registro_senasaDataTable = CType(MyBase.Clone,sag_registro_senasaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New sag_registro_senasaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnnombre_productor = MyBase.Columns("nombre_productor")
            Me.columnrepresentante_legar = MyBase.Columns("representante_legar")
            Me.columnidentidad_productor = MyBase.Columns("identidad_productor")
            Me.columnextendida = MyBase.Columns("extendida")
            Me.columnresidencia_productor = MyBase.Columns("residencia_productor")
            Me.columntelefono_productor = MyBase.Columns("telefono_productor")
            Me.columnno_registro_productor = MyBase.Columns("no_registro_productor")
            Me.columnnombre_multiplicador = MyBase.Columns("nombre_multiplicador")
            Me.columncedula_multiplicador = MyBase.Columns("cedula_multiplicador")
            Me.columntelefono_multiplicador = MyBase.Columns("telefono_multiplicador")
            Me.columnnombre_finca = MyBase.Columns("nombre_finca")
            Me.columnnombre_persona_finca = MyBase.Columns("nombre_persona_finca")
            Me.columndepartamento = MyBase.Columns("departamento")
            Me.columnmunicipio = MyBase.Columns("municipio")
            Me.columnaldea = MyBase.Columns("aldea")
            Me.columncaserio = MyBase.Columns("caserio")
            Me.columnnombre_lote = MyBase.Columns("nombre_lote")
            Me.columncroquis = MyBase.Columns("croquis")
            Me.columncultivo = MyBase.Columns("cultivo")
            Me.columncategoria = MyBase.Columns("categoria")
            Me.columnvariedad = MyBase.Columns("variedad")
            Me.columnproductor = MyBase.Columns("productor")
            Me.columnno_lote = MyBase.Columns("no_lote")
            Me.columnfecha_analisis = MyBase.Columns("fecha_analisis")
            Me.columnano_produ = MyBase.Columns("ano_produ")
            Me.columncategoria_2 = MyBase.Columns("categoria_2")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columncultivo_2 = MyBase.Columns("cultivo_2")
            Me.columnvariedad_2 = MyBase.Columns("variedad_2")
            Me.columnsuperficie_sembrar = MyBase.Columns("superficie_sembrar")
            Me.columnfecha_aproxi_siembra = MyBase.Columns("fecha_aproxi_siembra")
            Me.columnfecha_aproxi_cosecha = MyBase.Columns("fecha_aproxi_cosecha")
            Me.columnproduc_estima_ha = MyBase.Columns("produc_estima_ha")
            Me.columndestino = MyBase.Columns("destino")
            Me.columncertificado_origen_semilla = MyBase.Columns("certificado_origen_semilla")
            Me.columnfactura_comercio = MyBase.Columns("factura_comercio")
            Me.columnestado = MyBase.Columns("estado")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnnombre_productor = New Global.System.Data.DataColumn("nombre_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_productor)
            Me.columnrepresentante_legar = New Global.System.Data.DataColumn("representante_legar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrepresentante_legar)
            Me.columnidentidad_productor = New Global.System.Data.DataColumn("identidad_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidentidad_productor)
            Me.columnextendida = New Global.System.Data.DataColumn("extendida", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextendida)
            Me.columnresidencia_productor = New Global.System.Data.DataColumn("residencia_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnresidencia_productor)
            Me.columntelefono_productor = New Global.System.Data.DataColumn("telefono_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono_productor)
            Me.columnno_registro_productor = New Global.System.Data.DataColumn("no_registro_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_registro_productor)
            Me.columnnombre_multiplicador = New Global.System.Data.DataColumn("nombre_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_multiplicador)
            Me.columncedula_multiplicador = New Global.System.Data.DataColumn("cedula_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncedula_multiplicador)
            Me.columntelefono_multiplicador = New Global.System.Data.DataColumn("telefono_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono_multiplicador)
            Me.columnnombre_finca = New Global.System.Data.DataColumn("nombre_finca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_finca)
            Me.columnnombre_persona_finca = New Global.System.Data.DataColumn("nombre_persona_finca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_persona_finca)
            Me.columndepartamento = New Global.System.Data.DataColumn("departamento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndepartamento)
            Me.columnmunicipio = New Global.System.Data.DataColumn("municipio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmunicipio)
            Me.columnaldea = New Global.System.Data.DataColumn("aldea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaldea)
            Me.columncaserio = New Global.System.Data.DataColumn("caserio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncaserio)
            Me.columnnombre_lote = New Global.System.Data.DataColumn("nombre_lote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_lote)
            Me.columncroquis = New Global.System.Data.DataColumn("croquis", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncroquis)
            Me.columncultivo = New Global.System.Data.DataColumn("cultivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncultivo)
            Me.columncategoria = New Global.System.Data.DataColumn("categoria", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategoria)
            Me.columnvariedad = New Global.System.Data.DataColumn("variedad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvariedad)
            Me.columnproductor = New Global.System.Data.DataColumn("productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproductor)
            Me.columnno_lote = New Global.System.Data.DataColumn("no_lote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_lote)
            Me.columnfecha_analisis = New Global.System.Data.DataColumn("fecha_analisis", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_analisis)
            Me.columnano_produ = New Global.System.Data.DataColumn("ano_produ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnano_produ)
            Me.columncategoria_2 = New Global.System.Data.DataColumn("categoria_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategoria_2)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columncultivo_2 = New Global.System.Data.DataColumn("cultivo_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncultivo_2)
            Me.columnvariedad_2 = New Global.System.Data.DataColumn("variedad_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvariedad_2)
            Me.columnsuperficie_sembrar = New Global.System.Data.DataColumn("superficie_sembrar", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsuperficie_sembrar)
            Me.columnfecha_aproxi_siembra = New Global.System.Data.DataColumn("fecha_aproxi_siembra", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_aproxi_siembra)
            Me.columnfecha_aproxi_cosecha = New Global.System.Data.DataColumn("fecha_aproxi_cosecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_aproxi_cosecha)
            Me.columnproduc_estima_ha = New Global.System.Data.DataColumn("produc_estima_ha", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproduc_estima_ha)
            Me.columndestino = New Global.System.Data.DataColumn("destino", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndestino)
            Me.columncertificado_origen_semilla = New Global.System.Data.DataColumn("certificado_origen_semilla", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncertificado_origen_semilla)
            Me.columnfactura_comercio = New Global.System.Data.DataColumn("factura_comercio", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfactura_comercio)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnnombre_productor.MaxLength = 100
            Me.columnrepresentante_legar.MaxLength = 100
            Me.columnidentidad_productor.MaxLength = 100
            Me.columnresidencia_productor.MaxLength = 100
            Me.columntelefono_productor.MaxLength = 20
            Me.columnno_registro_productor.MaxLength = 8
            Me.columnnombre_multiplicador.MaxLength = 100
            Me.columncedula_multiplicador.MaxLength = 100
            Me.columntelefono_multiplicador.MaxLength = 100
            Me.columnnombre_finca.MaxLength = 100
            Me.columnnombre_persona_finca.MaxLength = 100
            Me.columndepartamento.MaxLength = 100
            Me.columnmunicipio.MaxLength = 100
            Me.columnaldea.MaxLength = 100
            Me.columncaserio.MaxLength = 100
            Me.columnnombre_lote.MaxLength = 100
            Me.columncultivo.MaxLength = 100
            Me.columncategoria.MaxLength = 100
            Me.columnvariedad.MaxLength = 100
            Me.columnproductor.MaxLength = 100
            Me.columnno_lote.MaxLength = 100
            Me.columnano_produ.MaxLength = 20
            Me.columncategoria_2.MaxLength = 100
            Me.columntipo.MaxLength = 100
            Me.columncultivo_2.MaxLength = 30
            Me.columnvariedad_2.MaxLength = 100
            Me.columndestino.MaxLength = 50
            Me.columnestado.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newsag_registro_senasaRow() As sag_registro_senasaRow
            Return CType(Me.NewRow,sag_registro_senasaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New sag_registro_senasaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(sag_registro_senasaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.sag_registro_senasaRowChangedEvent) Is Nothing) Then
                RaiseEvent sag_registro_senasaRowChanged(Me, New sag_registro_senasaRowChangeEvent(CType(e.Row,sag_registro_senasaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.sag_registro_senasaRowChangingEvent) Is Nothing) Then
                RaiseEvent sag_registro_senasaRowChanging(Me, New sag_registro_senasaRowChangeEvent(CType(e.Row,sag_registro_senasaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.sag_registro_senasaRowDeletedEvent) Is Nothing) Then
                RaiseEvent sag_registro_senasaRowDeleted(Me, New sag_registro_senasaRowChangeEvent(CType(e.Row,sag_registro_senasaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.sag_registro_senasaRowDeletingEvent) Is Nothing) Then
                RaiseEvent sag_registro_senasaRowDeleting(Me, New sag_registro_senasaRowChangeEvent(CType(e.Row,sag_registro_senasaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removesag_registro_senasaRow(ByVal row As sag_registro_senasaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetMultiplicador = New DataSetMultiplicador()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "sag_registro_senasaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class sag_registro_senasa1DataTable
        Inherits Global.System.Data.TypedTableBase(Of sag_registro_senasa1Row)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnnombre_productor As Global.System.Data.DataColumn
        
        Private columnrepresentante_legal As Global.System.Data.DataColumn
        
        Private columnidentidad_productor As Global.System.Data.DataColumn
        
        Private columnextendida As Global.System.Data.DataColumn
        
        Private columnresidencia_productor As Global.System.Data.DataColumn
        
        Private columntelefono_productor As Global.System.Data.DataColumn
        
        Private columnno_registro_productor As Global.System.Data.DataColumn
        
        Private columnnombre_multiplicador As Global.System.Data.DataColumn
        
        Private columncedula_multiplicador As Global.System.Data.DataColumn
        
        Private columntelefono_multiplicador As Global.System.Data.DataColumn
        
        Private columnnombre_finca As Global.System.Data.DataColumn
        
        Private columnnombre_persona_finca As Global.System.Data.DataColumn
        
        Private columndepartamento As Global.System.Data.DataColumn
        
        Private columnmunicipio As Global.System.Data.DataColumn
        
        Private columnaldea As Global.System.Data.DataColumn
        
        Private columncaserio As Global.System.Data.DataColumn
        
        Private columnnombre_lote As Global.System.Data.DataColumn
        
        Private columncroquis As Global.System.Data.DataColumn
        
        Private columntipo_cultivo As Global.System.Data.DataColumn
        
        Private columnvariedad As Global.System.Data.DataColumn
        
        Private columnproductor As Global.System.Data.DataColumn
        
        Private columnno_lote As Global.System.Data.DataColumn
        
        Private columnfecha_analisis As Global.System.Data.DataColumn
        
        Private columnano_produ As Global.System.Data.DataColumn
        
        Private columncategoria_semilla As Global.System.Data.DataColumn
        
        Private columntipo_semilla As Global.System.Data.DataColumn
        
        Private columncultivo_semilla As Global.System.Data.DataColumn
        
        Private columnvariedad_maiz As Global.System.Data.DataColumn
        
        Private columnvariedad_frijol As Global.System.Data.DataColumn
        
        Private columnsuperficie_hectarea As Global.System.Data.DataColumn
        
        Private columnfecha_aprox_siembra As Global.System.Data.DataColumn
        
        Private columnfecha_aprox_cosecha As Global.System.Data.DataColumn
        
        Private columnproduccion_est_hectareas As Global.System.Data.DataColumn
        
        Private columndestino As Global.System.Data.DataColumn
        
        Private columncertificado_origen_semilla As Global.System.Data.DataColumn
        
        Private columnfactura_comercio As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        Private columncategoria_origen As Global.System.Data.DataColumn
        
        Private columnfecha_acta As Global.System.Data.DataColumn
        
        Private columnporcentaje_humedad As Global.System.Data.DataColumn
        
        Private columnno_sacos As Global.System.Data.DataColumn
        
        Private columnpeso_humedo_QQ As Global.System.Data.DataColumn
        
        Private columnpeso_materia_prima_QQ_porce_humedad As Global.System.Data.DataColumn
        
        Private columnsemilla_QQ_oro As Global.System.Data.DataColumn
        
        Private columnsemilla_QQ_consumo As Global.System.Data.DataColumn
        
        Private columnsemilla_QQ_basura As Global.System.Data.DataColumn
        
        Private columnsemilla_QQ_total As Global.System.Data.DataColumn
        
        Private columnobservaciones As Global.System.Data.DataColumn
        
        Private columntara As Global.System.Data.DataColumn
        
        Private columnpeso_neto As Global.System.Data.DataColumn
        
        Private columnciclo_acta As Global.System.Data.DataColumn
        
        Private columnpeso_lb As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "sag_registro_senasa1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property representante_legalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrepresentante_legal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property identidad_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidentidad_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property extendidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnextendida
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property residencia_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnresidencia_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property telefono_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_registro_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_registro_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cedula_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncedula_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property telefono_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_fincaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_finca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_persona_fincaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_persona_finca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property departamentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndepartamento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property municipioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmunicipio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property aldeaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaldea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property caserioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncaserio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_loteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_lote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property croquisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncroquis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipo_cultivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo_cultivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property variedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvariedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproductor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_loteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_lote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_analisisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_analisis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ano_produColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnano_produ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property categoria_semillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategoria_semilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipo_semillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo_semilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cultivo_semillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncultivo_semilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property variedad_maizColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvariedad_maiz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property variedad_frijolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvariedad_frijol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property superficie_hectareaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsuperficie_hectarea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_aprox_siembraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_aprox_siembra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_aprox_cosechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_aprox_cosecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property produccion_est_hectareasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproduccion_est_hectareas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property destinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndestino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property certificado_origen_semillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncertificado_origen_semilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property factura_comercioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfactura_comercio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property categoria_origenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategoria_origen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_actaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_acta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property porcentaje_humedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnporcentaje_humedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_sacosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_sacos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property peso_humedo_QQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpeso_humedo_QQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property peso_materia_prima_QQ_porce_humedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpeso_materia_prima_QQ_porce_humedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_QQ_oroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_QQ_oro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_QQ_consumoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_QQ_consumo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_QQ_basuraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_QQ_basura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_QQ_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_QQ_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property observacionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobservaciones
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property taraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntara
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property peso_netoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpeso_neto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ciclo_actaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnciclo_acta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property peso_lbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpeso_lb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As sag_registro_senasa1Row
            Get
                Return CType(Me.Rows(index),sag_registro_senasa1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_senasa1RowChanging As sag_registro_senasa1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_senasa1RowChanged As sag_registro_senasa1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_senasa1RowDeleting As sag_registro_senasa1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_senasa1RowDeleted As sag_registro_senasa1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addsag_registro_senasa1Row(ByVal row As sag_registro_senasa1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addsag_registro_senasa1Row( _
                    ByVal nombre_productor As String,  _
                    ByVal representante_legal As String,  _
                    ByVal identidad_productor As String,  _
                    ByVal extendida As Date,  _
                    ByVal residencia_productor As String,  _
                    ByVal telefono_productor As String,  _
                    ByVal no_registro_productor As String,  _
                    ByVal nombre_multiplicador As String,  _
                    ByVal cedula_multiplicador As String,  _
                    ByVal telefono_multiplicador As String,  _
                    ByVal nombre_finca As String,  _
                    ByVal nombre_persona_finca As String,  _
                    ByVal departamento As String,  _
                    ByVal municipio As String,  _
                    ByVal aldea As String,  _
                    ByVal caserio As String,  _
                    ByVal nombre_lote As String,  _
                    ByVal croquis() As Byte,  _
                    ByVal tipo_cultivo As String,  _
                    ByVal variedad As String,  _
                    ByVal productor As String,  _
                    ByVal no_lote As String,  _
                    ByVal fecha_analisis As Date,  _
                    ByVal ano_produ As String,  _
                    ByVal categoria_semilla As String,  _
                    ByVal tipo_semilla As String,  _
                    ByVal cultivo_semilla As String,  _
                    ByVal variedad_maiz As String,  _
                    ByVal variedad_frijol As String,  _
                    ByVal superficie_hectarea As Decimal,  _
                    ByVal fecha_aprox_siembra As Date,  _
                    ByVal fecha_aprox_cosecha As Date,  _
                    ByVal produccion_est_hectareas As Decimal,  _
                    ByVal destino As String,  _
                    ByVal certificado_origen_semilla() As Byte,  _
                    ByVal factura_comercio() As Byte,  _
                    ByVal estado As String,  _
                    ByVal categoria_origen As String,  _
                    ByVal fecha_acta As Date,  _
                    ByVal porcentaje_humedad As Decimal,  _
                    ByVal no_sacos As Integer,  _
                    ByVal peso_humedo_QQ As Decimal,  _
                    ByVal peso_materia_prima_QQ_porce_humedad As Decimal,  _
                    ByVal semilla_QQ_oro As Decimal,  _
                    ByVal semilla_QQ_consumo As Decimal,  _
                    ByVal semilla_QQ_basura As Decimal,  _
                    ByVal semilla_QQ_total As Decimal,  _
                    ByVal observaciones As String,  _
                    ByVal tara As Decimal,  _
                    ByVal peso_neto As Decimal,  _
                    ByVal ciclo_acta As String,  _
                    ByVal peso_lb As Decimal) As sag_registro_senasa1Row
            Dim rowsag_registro_senasa1Row As sag_registro_senasa1Row = CType(Me.NewRow,sag_registro_senasa1Row)
            Dim columnValuesArray() As Object = New Object() {Nothing, nombre_productor, representante_legal, identidad_productor, extendida, residencia_productor, telefono_productor, no_registro_productor, nombre_multiplicador, cedula_multiplicador, telefono_multiplicador, nombre_finca, nombre_persona_finca, departamento, municipio, aldea, caserio, nombre_lote, croquis, tipo_cultivo, variedad, productor, no_lote, fecha_analisis, ano_produ, categoria_semilla, tipo_semilla, cultivo_semilla, variedad_maiz, variedad_frijol, superficie_hectarea, fecha_aprox_siembra, fecha_aprox_cosecha, produccion_est_hectareas, destino, certificado_origen_semilla, factura_comercio, estado, categoria_origen, fecha_acta, porcentaje_humedad, no_sacos, peso_humedo_QQ, peso_materia_prima_QQ_porce_humedad, semilla_QQ_oro, semilla_QQ_consumo, semilla_QQ_basura, semilla_QQ_total, observaciones, tara, peso_neto, ciclo_acta, peso_lb}
            rowsag_registro_senasa1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowsag_registro_senasa1Row)
            Return rowsag_registro_senasa1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As sag_registro_senasa1Row
            Return CType(Me.Rows.Find(New Object() {Id}),sag_registro_senasa1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As sag_registro_senasa1DataTable = CType(MyBase.Clone,sag_registro_senasa1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New sag_registro_senasa1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnnombre_productor = MyBase.Columns("nombre_productor")
            Me.columnrepresentante_legal = MyBase.Columns("representante_legal")
            Me.columnidentidad_productor = MyBase.Columns("identidad_productor")
            Me.columnextendida = MyBase.Columns("extendida")
            Me.columnresidencia_productor = MyBase.Columns("residencia_productor")
            Me.columntelefono_productor = MyBase.Columns("telefono_productor")
            Me.columnno_registro_productor = MyBase.Columns("no_registro_productor")
            Me.columnnombre_multiplicador = MyBase.Columns("nombre_multiplicador")
            Me.columncedula_multiplicador = MyBase.Columns("cedula_multiplicador")
            Me.columntelefono_multiplicador = MyBase.Columns("telefono_multiplicador")
            Me.columnnombre_finca = MyBase.Columns("nombre_finca")
            Me.columnnombre_persona_finca = MyBase.Columns("nombre_persona_finca")
            Me.columndepartamento = MyBase.Columns("departamento")
            Me.columnmunicipio = MyBase.Columns("municipio")
            Me.columnaldea = MyBase.Columns("aldea")
            Me.columncaserio = MyBase.Columns("caserio")
            Me.columnnombre_lote = MyBase.Columns("nombre_lote")
            Me.columncroquis = MyBase.Columns("croquis")
            Me.columntipo_cultivo = MyBase.Columns("tipo_cultivo")
            Me.columnvariedad = MyBase.Columns("variedad")
            Me.columnproductor = MyBase.Columns("productor")
            Me.columnno_lote = MyBase.Columns("no_lote")
            Me.columnfecha_analisis = MyBase.Columns("fecha_analisis")
            Me.columnano_produ = MyBase.Columns("ano_produ")
            Me.columncategoria_semilla = MyBase.Columns("categoria_semilla")
            Me.columntipo_semilla = MyBase.Columns("tipo_semilla")
            Me.columncultivo_semilla = MyBase.Columns("cultivo_semilla")
            Me.columnvariedad_maiz = MyBase.Columns("variedad_maiz")
            Me.columnvariedad_frijol = MyBase.Columns("variedad_frijol")
            Me.columnsuperficie_hectarea = MyBase.Columns("superficie_hectarea")
            Me.columnfecha_aprox_siembra = MyBase.Columns("fecha_aprox_siembra")
            Me.columnfecha_aprox_cosecha = MyBase.Columns("fecha_aprox_cosecha")
            Me.columnproduccion_est_hectareas = MyBase.Columns("produccion_est_hectareas")
            Me.columndestino = MyBase.Columns("destino")
            Me.columncertificado_origen_semilla = MyBase.Columns("certificado_origen_semilla")
            Me.columnfactura_comercio = MyBase.Columns("factura_comercio")
            Me.columnestado = MyBase.Columns("estado")
            Me.columncategoria_origen = MyBase.Columns("categoria_origen")
            Me.columnfecha_acta = MyBase.Columns("fecha_acta")
            Me.columnporcentaje_humedad = MyBase.Columns("porcentaje_humedad")
            Me.columnno_sacos = MyBase.Columns("no_sacos")
            Me.columnpeso_humedo_QQ = MyBase.Columns("peso_humedo_QQ")
            Me.columnpeso_materia_prima_QQ_porce_humedad = MyBase.Columns("peso_materia_prima_QQ_porce_humedad")
            Me.columnsemilla_QQ_oro = MyBase.Columns("semilla_QQ_oro")
            Me.columnsemilla_QQ_consumo = MyBase.Columns("semilla_QQ_consumo")
            Me.columnsemilla_QQ_basura = MyBase.Columns("semilla_QQ_basura")
            Me.columnsemilla_QQ_total = MyBase.Columns("semilla_QQ_total")
            Me.columnobservaciones = MyBase.Columns("observaciones")
            Me.columntara = MyBase.Columns("tara")
            Me.columnpeso_neto = MyBase.Columns("peso_neto")
            Me.columnciclo_acta = MyBase.Columns("ciclo_acta")
            Me.columnpeso_lb = MyBase.Columns("peso_lb")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnnombre_productor = New Global.System.Data.DataColumn("nombre_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_productor)
            Me.columnrepresentante_legal = New Global.System.Data.DataColumn("representante_legal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrepresentante_legal)
            Me.columnidentidad_productor = New Global.System.Data.DataColumn("identidad_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidentidad_productor)
            Me.columnextendida = New Global.System.Data.DataColumn("extendida", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextendida)
            Me.columnresidencia_productor = New Global.System.Data.DataColumn("residencia_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnresidencia_productor)
            Me.columntelefono_productor = New Global.System.Data.DataColumn("telefono_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono_productor)
            Me.columnno_registro_productor = New Global.System.Data.DataColumn("no_registro_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_registro_productor)
            Me.columnnombre_multiplicador = New Global.System.Data.DataColumn("nombre_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_multiplicador)
            Me.columncedula_multiplicador = New Global.System.Data.DataColumn("cedula_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncedula_multiplicador)
            Me.columntelefono_multiplicador = New Global.System.Data.DataColumn("telefono_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono_multiplicador)
            Me.columnnombre_finca = New Global.System.Data.DataColumn("nombre_finca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_finca)
            Me.columnnombre_persona_finca = New Global.System.Data.DataColumn("nombre_persona_finca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_persona_finca)
            Me.columndepartamento = New Global.System.Data.DataColumn("departamento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndepartamento)
            Me.columnmunicipio = New Global.System.Data.DataColumn("municipio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmunicipio)
            Me.columnaldea = New Global.System.Data.DataColumn("aldea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaldea)
            Me.columncaserio = New Global.System.Data.DataColumn("caserio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncaserio)
            Me.columnnombre_lote = New Global.System.Data.DataColumn("nombre_lote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_lote)
            Me.columncroquis = New Global.System.Data.DataColumn("croquis", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncroquis)
            Me.columntipo_cultivo = New Global.System.Data.DataColumn("tipo_cultivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo_cultivo)
            Me.columnvariedad = New Global.System.Data.DataColumn("variedad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvariedad)
            Me.columnproductor = New Global.System.Data.DataColumn("productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproductor)
            Me.columnno_lote = New Global.System.Data.DataColumn("no_lote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_lote)
            Me.columnfecha_analisis = New Global.System.Data.DataColumn("fecha_analisis", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_analisis)
            Me.columnano_produ = New Global.System.Data.DataColumn("ano_produ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnano_produ)
            Me.columncategoria_semilla = New Global.System.Data.DataColumn("categoria_semilla", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategoria_semilla)
            Me.columntipo_semilla = New Global.System.Data.DataColumn("tipo_semilla", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo_semilla)
            Me.columncultivo_semilla = New Global.System.Data.DataColumn("cultivo_semilla", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncultivo_semilla)
            Me.columnvariedad_maiz = New Global.System.Data.DataColumn("variedad_maiz", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvariedad_maiz)
            Me.columnvariedad_frijol = New Global.System.Data.DataColumn("variedad_frijol", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvariedad_frijol)
            Me.columnsuperficie_hectarea = New Global.System.Data.DataColumn("superficie_hectarea", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsuperficie_hectarea)
            Me.columnfecha_aprox_siembra = New Global.System.Data.DataColumn("fecha_aprox_siembra", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_aprox_siembra)
            Me.columnfecha_aprox_cosecha = New Global.System.Data.DataColumn("fecha_aprox_cosecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_aprox_cosecha)
            Me.columnproduccion_est_hectareas = New Global.System.Data.DataColumn("produccion_est_hectareas", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproduccion_est_hectareas)
            Me.columndestino = New Global.System.Data.DataColumn("destino", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndestino)
            Me.columncertificado_origen_semilla = New Global.System.Data.DataColumn("certificado_origen_semilla", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncertificado_origen_semilla)
            Me.columnfactura_comercio = New Global.System.Data.DataColumn("factura_comercio", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfactura_comercio)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columncategoria_origen = New Global.System.Data.DataColumn("categoria_origen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategoria_origen)
            Me.columnfecha_acta = New Global.System.Data.DataColumn("fecha_acta", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_acta)
            Me.columnporcentaje_humedad = New Global.System.Data.DataColumn("porcentaje_humedad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnporcentaje_humedad)
            Me.columnno_sacos = New Global.System.Data.DataColumn("no_sacos", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_sacos)
            Me.columnpeso_humedo_QQ = New Global.System.Data.DataColumn("peso_humedo_QQ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpeso_humedo_QQ)
            Me.columnpeso_materia_prima_QQ_porce_humedad = New Global.System.Data.DataColumn("peso_materia_prima_QQ_porce_humedad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpeso_materia_prima_QQ_porce_humedad)
            Me.columnsemilla_QQ_oro = New Global.System.Data.DataColumn("semilla_QQ_oro", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_QQ_oro)
            Me.columnsemilla_QQ_consumo = New Global.System.Data.DataColumn("semilla_QQ_consumo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_QQ_consumo)
            Me.columnsemilla_QQ_basura = New Global.System.Data.DataColumn("semilla_QQ_basura", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_QQ_basura)
            Me.columnsemilla_QQ_total = New Global.System.Data.DataColumn("semilla_QQ_total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_QQ_total)
            Me.columnobservaciones = New Global.System.Data.DataColumn("observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobservaciones)
            Me.columntara = New Global.System.Data.DataColumn("tara", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntara)
            Me.columnpeso_neto = New Global.System.Data.DataColumn("peso_neto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpeso_neto)
            Me.columnciclo_acta = New Global.System.Data.DataColumn("ciclo_acta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnciclo_acta)
            Me.columnpeso_lb = New Global.System.Data.DataColumn("peso_lb", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpeso_lb)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnnombre_productor.MaxLength = 100
            Me.columnrepresentante_legal.MaxLength = 100
            Me.columnidentidad_productor.MaxLength = 100
            Me.columnresidencia_productor.MaxLength = 100
            Me.columntelefono_productor.MaxLength = 20
            Me.columnno_registro_productor.MaxLength = 8
            Me.columnnombre_multiplicador.MaxLength = 100
            Me.columncedula_multiplicador.MaxLength = 100
            Me.columntelefono_multiplicador.MaxLength = 100
            Me.columnnombre_finca.MaxLength = 100
            Me.columnnombre_persona_finca.MaxLength = 100
            Me.columndepartamento.MaxLength = 100
            Me.columnmunicipio.MaxLength = 100
            Me.columnaldea.MaxLength = 100
            Me.columncaserio.MaxLength = 100
            Me.columnnombre_lote.MaxLength = 100
            Me.columntipo_cultivo.MaxLength = 100
            Me.columnvariedad.MaxLength = 100
            Me.columnproductor.MaxLength = 100
            Me.columnno_lote.MaxLength = 100
            Me.columnano_produ.MaxLength = 20
            Me.columncategoria_semilla.MaxLength = 100
            Me.columntipo_semilla.MaxLength = 100
            Me.columncultivo_semilla.MaxLength = 30
            Me.columnvariedad_maiz.MaxLength = 100
            Me.columnvariedad_frijol.MaxLength = 100
            Me.columndestino.MaxLength = 50
            Me.columnestado.MaxLength = 2
            Me.columncategoria_origen.MaxLength = 100
            Me.columnobservaciones.MaxLength = 2000
            Me.columnciclo_acta.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newsag_registro_senasa1Row() As sag_registro_senasa1Row
            Return CType(Me.NewRow,sag_registro_senasa1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New sag_registro_senasa1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(sag_registro_senasa1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.sag_registro_senasa1RowChangedEvent) Is Nothing) Then
                RaiseEvent sag_registro_senasa1RowChanged(Me, New sag_registro_senasa1RowChangeEvent(CType(e.Row,sag_registro_senasa1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.sag_registro_senasa1RowChangingEvent) Is Nothing) Then
                RaiseEvent sag_registro_senasa1RowChanging(Me, New sag_registro_senasa1RowChangeEvent(CType(e.Row,sag_registro_senasa1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.sag_registro_senasa1RowDeletedEvent) Is Nothing) Then
                RaiseEvent sag_registro_senasa1RowDeleted(Me, New sag_registro_senasa1RowChangeEvent(CType(e.Row,sag_registro_senasa1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.sag_registro_senasa1RowDeletingEvent) Is Nothing) Then
                RaiseEvent sag_registro_senasa1RowDeleting(Me, New sag_registro_senasa1RowChangeEvent(CType(e.Row,sag_registro_senasa1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removesag_registro_senasa1Row(ByVal row As sag_registro_senasa1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetMultiplicador = New DataSetMultiplicador()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "sag_registro_senasa1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class sag_registro_multiplicadorDataTable
        Inherits Global.System.Data.TypedTableBase(Of sag_registro_multiplicadorRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnnombre_productor As Global.System.Data.DataColumn
        
        Private columnrepresentante_legal As Global.System.Data.DataColumn
        
        Private columnidentidad_productor As Global.System.Data.DataColumn
        
        Private columnextendida As Global.System.Data.DataColumn
        
        Private columnresidencia_productor As Global.System.Data.DataColumn
        
        Private columntelefono_productor As Global.System.Data.DataColumn
        
        Private columnno_registro_productor As Global.System.Data.DataColumn
        
        Private columnnombre_multiplicador As Global.System.Data.DataColumn
        
        Private columncedula_multiplicador As Global.System.Data.DataColumn
        
        Private columntelefono_multiplicador As Global.System.Data.DataColumn
        
        Private columnnombre_finca As Global.System.Data.DataColumn
        
        Private columnnombre_persona_finca As Global.System.Data.DataColumn
        
        Private columndepartamento As Global.System.Data.DataColumn
        
        Private columnmunicipio As Global.System.Data.DataColumn
        
        Private columnaldea As Global.System.Data.DataColumn
        
        Private columncaserio As Global.System.Data.DataColumn
        
        Private columnnombre_lote As Global.System.Data.DataColumn
        
        Private columncroquis As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "sag_registro_multiplicador"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property representante_legalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrepresentante_legal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property identidad_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidentidad_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property extendidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnextendida
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property residencia_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnresidencia_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property telefono_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_registro_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_registro_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cedula_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncedula_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property telefono_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_fincaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_finca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_persona_fincaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_persona_finca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property departamentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndepartamento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property municipioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmunicipio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property aldeaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaldea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property caserioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncaserio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_loteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_lote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property croquisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncroquis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As sag_registro_multiplicadorRow
            Get
                Return CType(Me.Rows(index),sag_registro_multiplicadorRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_multiplicadorRowChanging As sag_registro_multiplicadorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_multiplicadorRowChanged As sag_registro_multiplicadorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_multiplicadorRowDeleting As sag_registro_multiplicadorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_multiplicadorRowDeleted As sag_registro_multiplicadorRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addsag_registro_multiplicadorRow(ByVal row As sag_registro_multiplicadorRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addsag_registro_multiplicadorRow( _
                    ByVal nombre_productor As String,  _
                    ByVal representante_legal As String,  _
                    ByVal identidad_productor As String,  _
                    ByVal extendida As Date,  _
                    ByVal residencia_productor As String,  _
                    ByVal telefono_productor As String,  _
                    ByVal no_registro_productor As String,  _
                    ByVal nombre_multiplicador As String,  _
                    ByVal cedula_multiplicador As String,  _
                    ByVal telefono_multiplicador As String,  _
                    ByVal nombre_finca As String,  _
                    ByVal nombre_persona_finca As String,  _
                    ByVal departamento As String,  _
                    ByVal municipio As String,  _
                    ByVal aldea As String,  _
                    ByVal caserio As String,  _
                    ByVal nombre_lote As String,  _
                    ByVal croquis() As Byte,  _
                    ByVal estado As String) As sag_registro_multiplicadorRow
            Dim rowsag_registro_multiplicadorRow As sag_registro_multiplicadorRow = CType(Me.NewRow,sag_registro_multiplicadorRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, nombre_productor, representante_legal, identidad_productor, extendida, residencia_productor, telefono_productor, no_registro_productor, nombre_multiplicador, cedula_multiplicador, telefono_multiplicador, nombre_finca, nombre_persona_finca, departamento, municipio, aldea, caserio, nombre_lote, croquis, estado}
            rowsag_registro_multiplicadorRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowsag_registro_multiplicadorRow)
            Return rowsag_registro_multiplicadorRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As sag_registro_multiplicadorRow
            Return CType(Me.Rows.Find(New Object() {Id}),sag_registro_multiplicadorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As sag_registro_multiplicadorDataTable = CType(MyBase.Clone,sag_registro_multiplicadorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New sag_registro_multiplicadorDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnnombre_productor = MyBase.Columns("nombre_productor")
            Me.columnrepresentante_legal = MyBase.Columns("representante_legal")
            Me.columnidentidad_productor = MyBase.Columns("identidad_productor")
            Me.columnextendida = MyBase.Columns("extendida")
            Me.columnresidencia_productor = MyBase.Columns("residencia_productor")
            Me.columntelefono_productor = MyBase.Columns("telefono_productor")
            Me.columnno_registro_productor = MyBase.Columns("no_registro_productor")
            Me.columnnombre_multiplicador = MyBase.Columns("nombre_multiplicador")
            Me.columncedula_multiplicador = MyBase.Columns("cedula_multiplicador")
            Me.columntelefono_multiplicador = MyBase.Columns("telefono_multiplicador")
            Me.columnnombre_finca = MyBase.Columns("nombre_finca")
            Me.columnnombre_persona_finca = MyBase.Columns("nombre_persona_finca")
            Me.columndepartamento = MyBase.Columns("departamento")
            Me.columnmunicipio = MyBase.Columns("municipio")
            Me.columnaldea = MyBase.Columns("aldea")
            Me.columncaserio = MyBase.Columns("caserio")
            Me.columnnombre_lote = MyBase.Columns("nombre_lote")
            Me.columncroquis = MyBase.Columns("croquis")
            Me.columnestado = MyBase.Columns("estado")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnnombre_productor = New Global.System.Data.DataColumn("nombre_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_productor)
            Me.columnrepresentante_legal = New Global.System.Data.DataColumn("representante_legal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrepresentante_legal)
            Me.columnidentidad_productor = New Global.System.Data.DataColumn("identidad_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidentidad_productor)
            Me.columnextendida = New Global.System.Data.DataColumn("extendida", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextendida)
            Me.columnresidencia_productor = New Global.System.Data.DataColumn("residencia_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnresidencia_productor)
            Me.columntelefono_productor = New Global.System.Data.DataColumn("telefono_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono_productor)
            Me.columnno_registro_productor = New Global.System.Data.DataColumn("no_registro_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_registro_productor)
            Me.columnnombre_multiplicador = New Global.System.Data.DataColumn("nombre_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_multiplicador)
            Me.columncedula_multiplicador = New Global.System.Data.DataColumn("cedula_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncedula_multiplicador)
            Me.columntelefono_multiplicador = New Global.System.Data.DataColumn("telefono_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono_multiplicador)
            Me.columnnombre_finca = New Global.System.Data.DataColumn("nombre_finca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_finca)
            Me.columnnombre_persona_finca = New Global.System.Data.DataColumn("nombre_persona_finca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_persona_finca)
            Me.columndepartamento = New Global.System.Data.DataColumn("departamento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndepartamento)
            Me.columnmunicipio = New Global.System.Data.DataColumn("municipio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmunicipio)
            Me.columnaldea = New Global.System.Data.DataColumn("aldea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaldea)
            Me.columncaserio = New Global.System.Data.DataColumn("caserio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncaserio)
            Me.columnnombre_lote = New Global.System.Data.DataColumn("nombre_lote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_lote)
            Me.columncroquis = New Global.System.Data.DataColumn("croquis", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncroquis)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnnombre_productor.MaxLength = 100
            Me.columnrepresentante_legal.MaxLength = 100
            Me.columnidentidad_productor.MaxLength = 100
            Me.columnresidencia_productor.MaxLength = 100
            Me.columntelefono_productor.MaxLength = 20
            Me.columnno_registro_productor.MaxLength = 8
            Me.columnnombre_multiplicador.MaxLength = 100
            Me.columncedula_multiplicador.MaxLength = 100
            Me.columntelefono_multiplicador.MaxLength = 100
            Me.columnnombre_finca.MaxLength = 100
            Me.columnnombre_persona_finca.MaxLength = 100
            Me.columndepartamento.MaxLength = 100
            Me.columnmunicipio.MaxLength = 100
            Me.columnaldea.MaxLength = 100
            Me.columncaserio.MaxLength = 100
            Me.columnnombre_lote.MaxLength = 100
            Me.columnestado.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newsag_registro_multiplicadorRow() As sag_registro_multiplicadorRow
            Return CType(Me.NewRow,sag_registro_multiplicadorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New sag_registro_multiplicadorRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(sag_registro_multiplicadorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.sag_registro_multiplicadorRowChangedEvent) Is Nothing) Then
                RaiseEvent sag_registro_multiplicadorRowChanged(Me, New sag_registro_multiplicadorRowChangeEvent(CType(e.Row,sag_registro_multiplicadorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.sag_registro_multiplicadorRowChangingEvent) Is Nothing) Then
                RaiseEvent sag_registro_multiplicadorRowChanging(Me, New sag_registro_multiplicadorRowChangeEvent(CType(e.Row,sag_registro_multiplicadorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.sag_registro_multiplicadorRowDeletedEvent) Is Nothing) Then
                RaiseEvent sag_registro_multiplicadorRowDeleted(Me, New sag_registro_multiplicadorRowChangeEvent(CType(e.Row,sag_registro_multiplicadorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.sag_registro_multiplicadorRowDeletingEvent) Is Nothing) Then
                RaiseEvent sag_registro_multiplicadorRowDeleting(Me, New sag_registro_multiplicadorRowChangeEvent(CType(e.Row,sag_registro_multiplicadorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removesag_registro_multiplicadorRow(ByVal row As sag_registro_multiplicadorRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetMultiplicador = New DataSetMultiplicador()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "sag_registro_multiplicadorDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class sag_registro_loteDataTable
        Inherits Global.System.Data.TypedTableBase(Of sag_registro_loteRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnnombre_productor As Global.System.Data.DataColumn
        
        Private columnrepresentante_legal As Global.System.Data.DataColumn
        
        Private columnidentidad_productor As Global.System.Data.DataColumn
        
        Private columnextendida As Global.System.Data.DataColumn
        
        Private columnresidencia_productor As Global.System.Data.DataColumn
        
        Private columntelefono_productor As Global.System.Data.DataColumn
        
        Private columnno_registro_productor As Global.System.Data.DataColumn
        
        Private columnnombre_multiplicador As Global.System.Data.DataColumn
        
        Private columncedula_multiplicador As Global.System.Data.DataColumn
        
        Private columntelefono_multiplicador As Global.System.Data.DataColumn
        
        Private columnnombre_finca As Global.System.Data.DataColumn
        
        Private columnnombre_persona_finca As Global.System.Data.DataColumn
        
        Private columndepartamento As Global.System.Data.DataColumn
        
        Private columnmunicipio As Global.System.Data.DataColumn
        
        Private columnaldea As Global.System.Data.DataColumn
        
        Private columncaserio As Global.System.Data.DataColumn
        
        Private columnnombre_lote As Global.System.Data.DataColumn
        
        Private columncategoria_origen As Global.System.Data.DataColumn
        
        Private columntipo_cultivo As Global.System.Data.DataColumn
        
        Private columnvariedad As Global.System.Data.DataColumn
        
        Private columnproductor As Global.System.Data.DataColumn
        
        Private columnno_lote As Global.System.Data.DataColumn
        
        Private columnfecha_analisis As Global.System.Data.DataColumn
        
        Private columnano_produ As Global.System.Data.DataColumn
        
        Private columncategoria_semilla As Global.System.Data.DataColumn
        
        Private columntipo_semilla As Global.System.Data.DataColumn
        
        Private columncultivo_semilla As Global.System.Data.DataColumn
        
        Private columnvariedad_maiz As Global.System.Data.DataColumn
        
        Private columnvariedad_frijol As Global.System.Data.DataColumn
        
        Private columnsuperficie_hectarea As Global.System.Data.DataColumn
        
        Private columnfecha_aprox_siembra As Global.System.Data.DataColumn
        
        Private columnfecha_aprox_cosecha As Global.System.Data.DataColumn
        
        Private columnproduccion_est_hectareas As Global.System.Data.DataColumn
        
        Private columndestino As Global.System.Data.DataColumn
        
        Private columncertificado_origen_semilla As Global.System.Data.DataColumn
        
        Private columnfactura_comercio As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "sag_registro_lote"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property representante_legalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrepresentante_legal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property identidad_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidentidad_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property extendidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnextendida
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property residencia_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnresidencia_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property telefono_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_registro_productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_registro_productor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cedula_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncedula_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property telefono_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_fincaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_finca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_persona_fincaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_persona_finca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property departamentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndepartamento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property municipioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmunicipio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property aldeaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaldea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property caserioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncaserio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_loteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_lote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property categoria_origenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategoria_origen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipo_cultivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo_cultivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property variedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvariedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property productorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproductor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_loteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_lote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_analisisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_analisis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ano_produColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnano_produ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property categoria_semillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategoria_semilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipo_semillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo_semilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cultivo_semillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncultivo_semilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property variedad_maizColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvariedad_maiz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property variedad_frijolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvariedad_frijol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property superficie_hectareaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsuperficie_hectarea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_aprox_siembraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_aprox_siembra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_aprox_cosechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_aprox_cosecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property produccion_est_hectareasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproduccion_est_hectareas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property destinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndestino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property certificado_origen_semillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncertificado_origen_semilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property factura_comercioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfactura_comercio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As sag_registro_loteRow
            Get
                Return CType(Me.Rows(index),sag_registro_loteRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_loteRowChanging As sag_registro_loteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_loteRowChanged As sag_registro_loteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_loteRowDeleting As sag_registro_loteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event sag_registro_loteRowDeleted As sag_registro_loteRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addsag_registro_loteRow(ByVal row As sag_registro_loteRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addsag_registro_loteRow( _
                    ByVal nombre_productor As String,  _
                    ByVal representante_legal As String,  _
                    ByVal identidad_productor As String,  _
                    ByVal extendida As Date,  _
                    ByVal residencia_productor As String,  _
                    ByVal telefono_productor As String,  _
                    ByVal no_registro_productor As String,  _
                    ByVal nombre_multiplicador As String,  _
                    ByVal cedula_multiplicador As String,  _
                    ByVal telefono_multiplicador As String,  _
                    ByVal nombre_finca As String,  _
                    ByVal nombre_persona_finca As String,  _
                    ByVal departamento As String,  _
                    ByVal municipio As String,  _
                    ByVal aldea As String,  _
                    ByVal caserio As String,  _
                    ByVal nombre_lote As String,  _
                    ByVal categoria_origen As String,  _
                    ByVal tipo_cultivo As String,  _
                    ByVal variedad As String,  _
                    ByVal productor As String,  _
                    ByVal no_lote As String,  _
                    ByVal fecha_analisis As Date,  _
                    ByVal ano_produ As String,  _
                    ByVal categoria_semilla As String,  _
                    ByVal tipo_semilla As String,  _
                    ByVal cultivo_semilla As String,  _
                    ByVal variedad_maiz As String,  _
                    ByVal variedad_frijol As String,  _
                    ByVal superficie_hectarea As Decimal,  _
                    ByVal fecha_aprox_siembra As Date,  _
                    ByVal fecha_aprox_cosecha As Date,  _
                    ByVal produccion_est_hectareas As Decimal,  _
                    ByVal destino As String,  _
                    ByVal certificado_origen_semilla() As Byte,  _
                    ByVal factura_comercio() As Byte,  _
                    ByVal estado As String) As sag_registro_loteRow
            Dim rowsag_registro_loteRow As sag_registro_loteRow = CType(Me.NewRow,sag_registro_loteRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, nombre_productor, representante_legal, identidad_productor, extendida, residencia_productor, telefono_productor, no_registro_productor, nombre_multiplicador, cedula_multiplicador, telefono_multiplicador, nombre_finca, nombre_persona_finca, departamento, municipio, aldea, caserio, nombre_lote, categoria_origen, tipo_cultivo, variedad, productor, no_lote, fecha_analisis, ano_produ, categoria_semilla, tipo_semilla, cultivo_semilla, variedad_maiz, variedad_frijol, superficie_hectarea, fecha_aprox_siembra, fecha_aprox_cosecha, produccion_est_hectareas, destino, certificado_origen_semilla, factura_comercio, estado}
            rowsag_registro_loteRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowsag_registro_loteRow)
            Return rowsag_registro_loteRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As sag_registro_loteRow
            Return CType(Me.Rows.Find(New Object() {Id}),sag_registro_loteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As sag_registro_loteDataTable = CType(MyBase.Clone,sag_registro_loteDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New sag_registro_loteDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnnombre_productor = MyBase.Columns("nombre_productor")
            Me.columnrepresentante_legal = MyBase.Columns("representante_legal")
            Me.columnidentidad_productor = MyBase.Columns("identidad_productor")
            Me.columnextendida = MyBase.Columns("extendida")
            Me.columnresidencia_productor = MyBase.Columns("residencia_productor")
            Me.columntelefono_productor = MyBase.Columns("telefono_productor")
            Me.columnno_registro_productor = MyBase.Columns("no_registro_productor")
            Me.columnnombre_multiplicador = MyBase.Columns("nombre_multiplicador")
            Me.columncedula_multiplicador = MyBase.Columns("cedula_multiplicador")
            Me.columntelefono_multiplicador = MyBase.Columns("telefono_multiplicador")
            Me.columnnombre_finca = MyBase.Columns("nombre_finca")
            Me.columnnombre_persona_finca = MyBase.Columns("nombre_persona_finca")
            Me.columndepartamento = MyBase.Columns("departamento")
            Me.columnmunicipio = MyBase.Columns("municipio")
            Me.columnaldea = MyBase.Columns("aldea")
            Me.columncaserio = MyBase.Columns("caserio")
            Me.columnnombre_lote = MyBase.Columns("nombre_lote")
            Me.columncategoria_origen = MyBase.Columns("categoria_origen")
            Me.columntipo_cultivo = MyBase.Columns("tipo_cultivo")
            Me.columnvariedad = MyBase.Columns("variedad")
            Me.columnproductor = MyBase.Columns("productor")
            Me.columnno_lote = MyBase.Columns("no_lote")
            Me.columnfecha_analisis = MyBase.Columns("fecha_analisis")
            Me.columnano_produ = MyBase.Columns("ano_produ")
            Me.columncategoria_semilla = MyBase.Columns("categoria_semilla")
            Me.columntipo_semilla = MyBase.Columns("tipo_semilla")
            Me.columncultivo_semilla = MyBase.Columns("cultivo_semilla")
            Me.columnvariedad_maiz = MyBase.Columns("variedad_maiz")
            Me.columnvariedad_frijol = MyBase.Columns("variedad_frijol")
            Me.columnsuperficie_hectarea = MyBase.Columns("superficie_hectarea")
            Me.columnfecha_aprox_siembra = MyBase.Columns("fecha_aprox_siembra")
            Me.columnfecha_aprox_cosecha = MyBase.Columns("fecha_aprox_cosecha")
            Me.columnproduccion_est_hectareas = MyBase.Columns("produccion_est_hectareas")
            Me.columndestino = MyBase.Columns("destino")
            Me.columncertificado_origen_semilla = MyBase.Columns("certificado_origen_semilla")
            Me.columnfactura_comercio = MyBase.Columns("factura_comercio")
            Me.columnestado = MyBase.Columns("estado")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnnombre_productor = New Global.System.Data.DataColumn("nombre_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_productor)
            Me.columnrepresentante_legal = New Global.System.Data.DataColumn("representante_legal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrepresentante_legal)
            Me.columnidentidad_productor = New Global.System.Data.DataColumn("identidad_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidentidad_productor)
            Me.columnextendida = New Global.System.Data.DataColumn("extendida", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextendida)
            Me.columnresidencia_productor = New Global.System.Data.DataColumn("residencia_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnresidencia_productor)
            Me.columntelefono_productor = New Global.System.Data.DataColumn("telefono_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono_productor)
            Me.columnno_registro_productor = New Global.System.Data.DataColumn("no_registro_productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_registro_productor)
            Me.columnnombre_multiplicador = New Global.System.Data.DataColumn("nombre_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_multiplicador)
            Me.columncedula_multiplicador = New Global.System.Data.DataColumn("cedula_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncedula_multiplicador)
            Me.columntelefono_multiplicador = New Global.System.Data.DataColumn("telefono_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono_multiplicador)
            Me.columnnombre_finca = New Global.System.Data.DataColumn("nombre_finca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_finca)
            Me.columnnombre_persona_finca = New Global.System.Data.DataColumn("nombre_persona_finca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_persona_finca)
            Me.columndepartamento = New Global.System.Data.DataColumn("departamento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndepartamento)
            Me.columnmunicipio = New Global.System.Data.DataColumn("municipio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmunicipio)
            Me.columnaldea = New Global.System.Data.DataColumn("aldea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaldea)
            Me.columncaserio = New Global.System.Data.DataColumn("caserio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncaserio)
            Me.columnnombre_lote = New Global.System.Data.DataColumn("nombre_lote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_lote)
            Me.columncategoria_origen = New Global.System.Data.DataColumn("categoria_origen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategoria_origen)
            Me.columntipo_cultivo = New Global.System.Data.DataColumn("tipo_cultivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo_cultivo)
            Me.columnvariedad = New Global.System.Data.DataColumn("variedad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvariedad)
            Me.columnproductor = New Global.System.Data.DataColumn("productor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproductor)
            Me.columnno_lote = New Global.System.Data.DataColumn("no_lote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_lote)
            Me.columnfecha_analisis = New Global.System.Data.DataColumn("fecha_analisis", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_analisis)
            Me.columnano_produ = New Global.System.Data.DataColumn("ano_produ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnano_produ)
            Me.columncategoria_semilla = New Global.System.Data.DataColumn("categoria_semilla", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategoria_semilla)
            Me.columntipo_semilla = New Global.System.Data.DataColumn("tipo_semilla", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo_semilla)
            Me.columncultivo_semilla = New Global.System.Data.DataColumn("cultivo_semilla", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncultivo_semilla)
            Me.columnvariedad_maiz = New Global.System.Data.DataColumn("variedad_maiz", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvariedad_maiz)
            Me.columnvariedad_frijol = New Global.System.Data.DataColumn("variedad_frijol", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvariedad_frijol)
            Me.columnsuperficie_hectarea = New Global.System.Data.DataColumn("superficie_hectarea", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsuperficie_hectarea)
            Me.columnfecha_aprox_siembra = New Global.System.Data.DataColumn("fecha_aprox_siembra", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_aprox_siembra)
            Me.columnfecha_aprox_cosecha = New Global.System.Data.DataColumn("fecha_aprox_cosecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_aprox_cosecha)
            Me.columnproduccion_est_hectareas = New Global.System.Data.DataColumn("produccion_est_hectareas", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproduccion_est_hectareas)
            Me.columndestino = New Global.System.Data.DataColumn("destino", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndestino)
            Me.columncertificado_origen_semilla = New Global.System.Data.DataColumn("certificado_origen_semilla", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncertificado_origen_semilla)
            Me.columnfactura_comercio = New Global.System.Data.DataColumn("factura_comercio", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfactura_comercio)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnnombre_productor.MaxLength = 100
            Me.columnrepresentante_legal.MaxLength = 100
            Me.columnidentidad_productor.MaxLength = 100
            Me.columnresidencia_productor.MaxLength = 100
            Me.columntelefono_productor.MaxLength = 20
            Me.columnno_registro_productor.MaxLength = 8
            Me.columnnombre_multiplicador.MaxLength = 100
            Me.columncedula_multiplicador.MaxLength = 100
            Me.columntelefono_multiplicador.MaxLength = 100
            Me.columnnombre_finca.MaxLength = 100
            Me.columnnombre_persona_finca.MaxLength = 100
            Me.columndepartamento.MaxLength = 100
            Me.columnmunicipio.MaxLength = 100
            Me.columnaldea.MaxLength = 100
            Me.columncaserio.MaxLength = 100
            Me.columnnombre_lote.MaxLength = 100
            Me.columncategoria_origen.MaxLength = 100
            Me.columntipo_cultivo.MaxLength = 100
            Me.columnvariedad.MaxLength = 100
            Me.columnproductor.MaxLength = 100
            Me.columnno_lote.MaxLength = 100
            Me.columnano_produ.MaxLength = 20
            Me.columncategoria_semilla.MaxLength = 100
            Me.columntipo_semilla.MaxLength = 100
            Me.columncultivo_semilla.MaxLength = 30
            Me.columnvariedad_maiz.MaxLength = 100
            Me.columnvariedad_frijol.MaxLength = 100
            Me.columndestino.MaxLength = 50
            Me.columnestado.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newsag_registro_loteRow() As sag_registro_loteRow
            Return CType(Me.NewRow,sag_registro_loteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New sag_registro_loteRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(sag_registro_loteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.sag_registro_loteRowChangedEvent) Is Nothing) Then
                RaiseEvent sag_registro_loteRowChanged(Me, New sag_registro_loteRowChangeEvent(CType(e.Row,sag_registro_loteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.sag_registro_loteRowChangingEvent) Is Nothing) Then
                RaiseEvent sag_registro_loteRowChanging(Me, New sag_registro_loteRowChangeEvent(CType(e.Row,sag_registro_loteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.sag_registro_loteRowDeletedEvent) Is Nothing) Then
                RaiseEvent sag_registro_loteRowDeleted(Me, New sag_registro_loteRowChangeEvent(CType(e.Row,sag_registro_loteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.sag_registro_loteRowDeletingEvent) Is Nothing) Then
                RaiseEvent sag_registro_loteRowDeleting(Me, New sag_registro_loteRowChangeEvent(CType(e.Row,sag_registro_loteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removesag_registro_loteRow(ByVal row As sag_registro_loteRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetMultiplicador = New DataSetMultiplicador()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "sag_registro_loteDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vista_multi_loteDataTable
        Inherits Global.System.Data.TypedTableBase(Of vista_multi_loteRow)
        
        Private columnID_MULTI As Global.System.Data.DataColumn
        
        Private columnNOMBRE_PRODUCTOR As Global.System.Data.DataColumn
        
        Private columnREPRESENTANTE_LEGAL As Global.System.Data.DataColumn
        
        Private columnIDENTIDAD_PRODUCTOR As Global.System.Data.DataColumn
        
        Private columnEXTENDIDA As Global.System.Data.DataColumn
        
        Private columnRESIDENCIA_PRODUCTOR As Global.System.Data.DataColumn
        
        Private columnTELEFONO_PRODUCTOR As Global.System.Data.DataColumn
        
        Private columnNO_REGISTRO_PRODUCTOR As Global.System.Data.DataColumn
        
        Private columnNOMBRE_MULTIPLICADOR As Global.System.Data.DataColumn
        
        Private columnCEDULA_MULTIPLICADOR As Global.System.Data.DataColumn
        
        Private columnTELEFONO_MULTIPLICADOR As Global.System.Data.DataColumn
        
        Private columnNOMBRE_FINCA As Global.System.Data.DataColumn
        
        Private columnNOMBRE_PERSONA_FINCA As Global.System.Data.DataColumn
        
        Private columnDEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnMUNICIPIO As Global.System.Data.DataColumn
        
        Private columnALDEA As Global.System.Data.DataColumn
        
        Private columnCASERIO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_LOTE As Global.System.Data.DataColumn
        
        Private columnESTADO_MULTI As Global.System.Data.DataColumn
        
        Private columnID_LOTE As Global.System.Data.DataColumn
        
        Private columnCATEGORIA_ORIGEN As Global.System.Data.DataColumn
        
        Private columnTIPO_CULTIVO As Global.System.Data.DataColumn
        
        Private columnVARIEDAD As Global.System.Data.DataColumn
        
        Private columnPRODUCTOR As Global.System.Data.DataColumn
        
        Private columnNO_LOTE As Global.System.Data.DataColumn
        
        Private columnFECHA_ANALISIS As Global.System.Data.DataColumn
        
        Private columnANO_PRODU As Global.System.Data.DataColumn
        
        Private columnCATEGORIA_SEMILLA As Global.System.Data.DataColumn
        
        Private columnTIPO_SEMILLA As Global.System.Data.DataColumn
        
        Private columnCULTIVO_SEMILLA As Global.System.Data.DataColumn
        
        Private columnVARIEDAD_MAIZ As Global.System.Data.DataColumn
        
        Private columnVARIEDAD_FRIJOL As Global.System.Data.DataColumn
        
        Private columnSUPERFICIE_HECTAREA As Global.System.Data.DataColumn
        
        Private columnFECHA_APROX_SIEMBRA As Global.System.Data.DataColumn
        
        Private columnFECHA_APROX_COSECHA As Global.System.Data.DataColumn
        
        Private columnPRODUCCION_EST_HECTAREAS As Global.System.Data.DataColumn
        
        Private columnDESTINO As Global.System.Data.DataColumn
        
        Private columnCERTIFICADO_ORIGEN_SEMILLA As Global.System.Data.DataColumn
        
        Private columnFACTURA_COMERCIO As Global.System.Data.DataColumn
        
        Private columnESTADO_LOTE As Global.System.Data.DataColumn
        
        Private columnID2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vista_multi_lote"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_MULTIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_MULTI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOMBRE_PRODUCTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_PRODUCTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property REPRESENTANTE_LEGALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPRESENTANTE_LEGAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDENTIDAD_PRODUCTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDENTIDAD_PRODUCTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXTENDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RESIDENCIA_PRODUCTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESIDENCIA_PRODUCTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TELEFONO_PRODUCTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_PRODUCTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NO_REGISTRO_PRODUCTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_REGISTRO_PRODUCTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOMBRE_MULTIPLICADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_MULTIPLICADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CEDULA_MULTIPLICADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCEDULA_MULTIPLICADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TELEFONO_MULTIPLICADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_MULTIPLICADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOMBRE_FINCAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_FINCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOMBRE_PERSONA_FINCAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_PERSONA_FINCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ALDEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALDEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CASERIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASERIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOMBRE_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ESTADO_MULTIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_MULTI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CATEGORIA_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORIA_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIPO_CULTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CULTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VARIEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVARIEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PRODUCTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NO_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FECHA_ANALISISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ANALISIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ANO_PRODUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANO_PRODU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CATEGORIA_SEMILLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORIA_SEMILLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIPO_SEMILLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_SEMILLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CULTIVO_SEMILLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCULTIVO_SEMILLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VARIEDAD_MAIZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVARIEDAD_MAIZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VARIEDAD_FRIJOLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVARIEDAD_FRIJOL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPERFICIE_HECTAREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPERFICIE_HECTAREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FECHA_APROX_SIEMBRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_APROX_SIEMBRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FECHA_APROX_COSECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_APROX_COSECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PRODUCCION_EST_HECTAREASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCCION_EST_HECTAREAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DESTINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESTINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CERTIFICADO_ORIGEN_SEMILLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICADO_ORIGEN_SEMILLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FACTURA_COMERCIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFACTURA_COMERCIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ESTADO_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnID2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vista_multi_loteRow
            Get
                Return CType(Me.Rows(index),vista_multi_loteRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_multi_loteRowChanging As vista_multi_loteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_multi_loteRowChanged As vista_multi_loteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_multi_loteRowDeleting As vista_multi_loteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_multi_loteRowDeleted As vista_multi_loteRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addvista_multi_loteRow(ByVal row As vista_multi_loteRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addvista_multi_loteRow( _
                    ByVal ID_MULTI As Integer,  _
                    ByVal NOMBRE_PRODUCTOR As String,  _
                    ByVal REPRESENTANTE_LEGAL As String,  _
                    ByVal IDENTIDAD_PRODUCTOR As String,  _
                    ByVal EXTENDIDA As String,  _
                    ByVal RESIDENCIA_PRODUCTOR As String,  _
                    ByVal TELEFONO_PRODUCTOR As String,  _
                    ByVal NO_REGISTRO_PRODUCTOR As String,  _
                    ByVal NOMBRE_MULTIPLICADOR As String,  _
                    ByVal CEDULA_MULTIPLICADOR As String,  _
                    ByVal TELEFONO_MULTIPLICADOR As String,  _
                    ByVal NOMBRE_FINCA As String,  _
                    ByVal NOMBRE_PERSONA_FINCA As String,  _
                    ByVal DEPARTAMENTO As String,  _
                    ByVal MUNICIPIO As String,  _
                    ByVal ALDEA As String,  _
                    ByVal CASERIO As String,  _
                    ByVal NOMBRE_LOTE As String,  _
                    ByVal ESTADO_MULTI As String,  _
                    ByVal ID_LOTE As Integer,  _
                    ByVal CATEGORIA_ORIGEN As String,  _
                    ByVal TIPO_CULTIVO As String,  _
                    ByVal VARIEDAD As String,  _
                    ByVal PRODUCTOR As String,  _
                    ByVal NO_LOTE As String,  _
                    ByVal FECHA_ANALISIS As Date,  _
                    ByVal ANO_PRODU As String,  _
                    ByVal CATEGORIA_SEMILLA As String,  _
                    ByVal TIPO_SEMILLA As String,  _
                    ByVal CULTIVO_SEMILLA As String,  _
                    ByVal VARIEDAD_MAIZ As String,  _
                    ByVal VARIEDAD_FRIJOL As String,  _
                    ByVal SUPERFICIE_HECTAREA As Decimal,  _
                    ByVal FECHA_APROX_SIEMBRA As Date,  _
                    ByVal FECHA_APROX_COSECHA As Date,  _
                    ByVal PRODUCCION_EST_HECTAREAS As Decimal,  _
                    ByVal DESTINO As String,  _
                    ByVal CERTIFICADO_ORIGEN_SEMILLA() As Byte,  _
                    ByVal FACTURA_COMERCIO() As Byte,  _
                    ByVal ESTADO_LOTE As String,  _
                    ByVal ID2 As Integer) As vista_multi_loteRow
            Dim rowvista_multi_loteRow As vista_multi_loteRow = CType(Me.NewRow,vista_multi_loteRow)
            Dim columnValuesArray() As Object = New Object() {ID_MULTI, NOMBRE_PRODUCTOR, REPRESENTANTE_LEGAL, IDENTIDAD_PRODUCTOR, EXTENDIDA, RESIDENCIA_PRODUCTOR, TELEFONO_PRODUCTOR, NO_REGISTRO_PRODUCTOR, NOMBRE_MULTIPLICADOR, CEDULA_MULTIPLICADOR, TELEFONO_MULTIPLICADOR, NOMBRE_FINCA, NOMBRE_PERSONA_FINCA, DEPARTAMENTO, MUNICIPIO, ALDEA, CASERIO, NOMBRE_LOTE, ESTADO_MULTI, ID_LOTE, CATEGORIA_ORIGEN, TIPO_CULTIVO, VARIEDAD, PRODUCTOR, NO_LOTE, FECHA_ANALISIS, ANO_PRODU, CATEGORIA_SEMILLA, TIPO_SEMILLA, CULTIVO_SEMILLA, VARIEDAD_MAIZ, VARIEDAD_FRIJOL, SUPERFICIE_HECTAREA, FECHA_APROX_SIEMBRA, FECHA_APROX_COSECHA, PRODUCCION_EST_HECTAREAS, DESTINO, CERTIFICADO_ORIGEN_SEMILLA, FACTURA_COMERCIO, ESTADO_LOTE, ID2}
            rowvista_multi_loteRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvista_multi_loteRow)
            Return rowvista_multi_loteRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vista_multi_loteDataTable = CType(MyBase.Clone,vista_multi_loteDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vista_multi_loteDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_MULTI = MyBase.Columns("ID_MULTI")
            Me.columnNOMBRE_PRODUCTOR = MyBase.Columns("NOMBRE_PRODUCTOR")
            Me.columnREPRESENTANTE_LEGAL = MyBase.Columns("REPRESENTANTE_LEGAL")
            Me.columnIDENTIDAD_PRODUCTOR = MyBase.Columns("IDENTIDAD_PRODUCTOR")
            Me.columnEXTENDIDA = MyBase.Columns("EXTENDIDA")
            Me.columnRESIDENCIA_PRODUCTOR = MyBase.Columns("RESIDENCIA_PRODUCTOR")
            Me.columnTELEFONO_PRODUCTOR = MyBase.Columns("TELEFONO_PRODUCTOR")
            Me.columnNO_REGISTRO_PRODUCTOR = MyBase.Columns("NO_REGISTRO_PRODUCTOR")
            Me.columnNOMBRE_MULTIPLICADOR = MyBase.Columns("NOMBRE_MULTIPLICADOR")
            Me.columnCEDULA_MULTIPLICADOR = MyBase.Columns("CEDULA_MULTIPLICADOR")
            Me.columnTELEFONO_MULTIPLICADOR = MyBase.Columns("TELEFONO_MULTIPLICADOR")
            Me.columnNOMBRE_FINCA = MyBase.Columns("NOMBRE_FINCA")
            Me.columnNOMBRE_PERSONA_FINCA = MyBase.Columns("NOMBRE_PERSONA_FINCA")
            Me.columnDEPARTAMENTO = MyBase.Columns("DEPARTAMENTO")
            Me.columnMUNICIPIO = MyBase.Columns("MUNICIPIO")
            Me.columnALDEA = MyBase.Columns("ALDEA")
            Me.columnCASERIO = MyBase.Columns("CASERIO")
            Me.columnNOMBRE_LOTE = MyBase.Columns("NOMBRE_LOTE")
            Me.columnESTADO_MULTI = MyBase.Columns("ESTADO_MULTI")
            Me.columnID_LOTE = MyBase.Columns("ID_LOTE")
            Me.columnCATEGORIA_ORIGEN = MyBase.Columns("CATEGORIA_ORIGEN")
            Me.columnTIPO_CULTIVO = MyBase.Columns("TIPO_CULTIVO")
            Me.columnVARIEDAD = MyBase.Columns("VARIEDAD")
            Me.columnPRODUCTOR = MyBase.Columns("PRODUCTOR")
            Me.columnNO_LOTE = MyBase.Columns("NO_LOTE")
            Me.columnFECHA_ANALISIS = MyBase.Columns("FECHA_ANALISIS")
            Me.columnANO_PRODU = MyBase.Columns("ANO_PRODU")
            Me.columnCATEGORIA_SEMILLA = MyBase.Columns("CATEGORIA_SEMILLA")
            Me.columnTIPO_SEMILLA = MyBase.Columns("TIPO_SEMILLA")
            Me.columnCULTIVO_SEMILLA = MyBase.Columns("CULTIVO_SEMILLA")
            Me.columnVARIEDAD_MAIZ = MyBase.Columns("VARIEDAD_MAIZ")
            Me.columnVARIEDAD_FRIJOL = MyBase.Columns("VARIEDAD_FRIJOL")
            Me.columnSUPERFICIE_HECTAREA = MyBase.Columns("SUPERFICIE_HECTAREA")
            Me.columnFECHA_APROX_SIEMBRA = MyBase.Columns("FECHA_APROX_SIEMBRA")
            Me.columnFECHA_APROX_COSECHA = MyBase.Columns("FECHA_APROX_COSECHA")
            Me.columnPRODUCCION_EST_HECTAREAS = MyBase.Columns("PRODUCCION_EST_HECTAREAS")
            Me.columnDESTINO = MyBase.Columns("DESTINO")
            Me.columnCERTIFICADO_ORIGEN_SEMILLA = MyBase.Columns("CERTIFICADO_ORIGEN_SEMILLA")
            Me.columnFACTURA_COMERCIO = MyBase.Columns("FACTURA_COMERCIO")
            Me.columnESTADO_LOTE = MyBase.Columns("ESTADO_LOTE")
            Me.columnID2 = MyBase.Columns("ID2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_MULTI = New Global.System.Data.DataColumn("ID_MULTI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_MULTI)
            Me.columnNOMBRE_PRODUCTOR = New Global.System.Data.DataColumn("NOMBRE_PRODUCTOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_PRODUCTOR)
            Me.columnREPRESENTANTE_LEGAL = New Global.System.Data.DataColumn("REPRESENTANTE_LEGAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPRESENTANTE_LEGAL)
            Me.columnIDENTIDAD_PRODUCTOR = New Global.System.Data.DataColumn("IDENTIDAD_PRODUCTOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDENTIDAD_PRODUCTOR)
            Me.columnEXTENDIDA = New Global.System.Data.DataColumn("EXTENDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENDIDA)
            Me.columnRESIDENCIA_PRODUCTOR = New Global.System.Data.DataColumn("RESIDENCIA_PRODUCTOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESIDENCIA_PRODUCTOR)
            Me.columnTELEFONO_PRODUCTOR = New Global.System.Data.DataColumn("TELEFONO_PRODUCTOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_PRODUCTOR)
            Me.columnNO_REGISTRO_PRODUCTOR = New Global.System.Data.DataColumn("NO_REGISTRO_PRODUCTOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_REGISTRO_PRODUCTOR)
            Me.columnNOMBRE_MULTIPLICADOR = New Global.System.Data.DataColumn("NOMBRE_MULTIPLICADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_MULTIPLICADOR)
            Me.columnCEDULA_MULTIPLICADOR = New Global.System.Data.DataColumn("CEDULA_MULTIPLICADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCEDULA_MULTIPLICADOR)
            Me.columnTELEFONO_MULTIPLICADOR = New Global.System.Data.DataColumn("TELEFONO_MULTIPLICADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_MULTIPLICADOR)
            Me.columnNOMBRE_FINCA = New Global.System.Data.DataColumn("NOMBRE_FINCA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_FINCA)
            Me.columnNOMBRE_PERSONA_FINCA = New Global.System.Data.DataColumn("NOMBRE_PERSONA_FINCA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_PERSONA_FINCA)
            Me.columnDEPARTAMENTO = New Global.System.Data.DataColumn("DEPARTAMENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPARTAMENTO)
            Me.columnMUNICIPIO = New Global.System.Data.DataColumn("MUNICIPIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNICIPIO)
            Me.columnALDEA = New Global.System.Data.DataColumn("ALDEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALDEA)
            Me.columnCASERIO = New Global.System.Data.DataColumn("CASERIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASERIO)
            Me.columnNOMBRE_LOTE = New Global.System.Data.DataColumn("NOMBRE_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_LOTE)
            Me.columnESTADO_MULTI = New Global.System.Data.DataColumn("ESTADO_MULTI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_MULTI)
            Me.columnID_LOTE = New Global.System.Data.DataColumn("ID_LOTE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_LOTE)
            Me.columnCATEGORIA_ORIGEN = New Global.System.Data.DataColumn("CATEGORIA_ORIGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORIA_ORIGEN)
            Me.columnTIPO_CULTIVO = New Global.System.Data.DataColumn("TIPO_CULTIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CULTIVO)
            Me.columnVARIEDAD = New Global.System.Data.DataColumn("VARIEDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVARIEDAD)
            Me.columnPRODUCTOR = New Global.System.Data.DataColumn("PRODUCTOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTOR)
            Me.columnNO_LOTE = New Global.System.Data.DataColumn("NO_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_LOTE)
            Me.columnFECHA_ANALISIS = New Global.System.Data.DataColumn("FECHA_ANALISIS", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ANALISIS)
            Me.columnANO_PRODU = New Global.System.Data.DataColumn("ANO_PRODU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANO_PRODU)
            Me.columnCATEGORIA_SEMILLA = New Global.System.Data.DataColumn("CATEGORIA_SEMILLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORIA_SEMILLA)
            Me.columnTIPO_SEMILLA = New Global.System.Data.DataColumn("TIPO_SEMILLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_SEMILLA)
            Me.columnCULTIVO_SEMILLA = New Global.System.Data.DataColumn("CULTIVO_SEMILLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCULTIVO_SEMILLA)
            Me.columnVARIEDAD_MAIZ = New Global.System.Data.DataColumn("VARIEDAD_MAIZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVARIEDAD_MAIZ)
            Me.columnVARIEDAD_FRIJOL = New Global.System.Data.DataColumn("VARIEDAD_FRIJOL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVARIEDAD_FRIJOL)
            Me.columnSUPERFICIE_HECTAREA = New Global.System.Data.DataColumn("SUPERFICIE_HECTAREA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPERFICIE_HECTAREA)
            Me.columnFECHA_APROX_SIEMBRA = New Global.System.Data.DataColumn("FECHA_APROX_SIEMBRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_APROX_SIEMBRA)
            Me.columnFECHA_APROX_COSECHA = New Global.System.Data.DataColumn("FECHA_APROX_COSECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_APROX_COSECHA)
            Me.columnPRODUCCION_EST_HECTAREAS = New Global.System.Data.DataColumn("PRODUCCION_EST_HECTAREAS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCCION_EST_HECTAREAS)
            Me.columnDESTINO = New Global.System.Data.DataColumn("DESTINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESTINO)
            Me.columnCERTIFICADO_ORIGEN_SEMILLA = New Global.System.Data.DataColumn("CERTIFICADO_ORIGEN_SEMILLA", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICADO_ORIGEN_SEMILLA)
            Me.columnFACTURA_COMERCIO = New Global.System.Data.DataColumn("FACTURA_COMERCIO", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFACTURA_COMERCIO)
            Me.columnESTADO_LOTE = New Global.System.Data.DataColumn("ESTADO_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_LOTE)
            Me.columnID2 = New Global.System.Data.DataColumn("ID2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID2)
            Me.columnID_MULTI.AllowDBNull = false
            Me.columnNOMBRE_PRODUCTOR.MaxLength = 100
            Me.columnREPRESENTANTE_LEGAL.MaxLength = 100
            Me.columnIDENTIDAD_PRODUCTOR.MaxLength = 100
            Me.columnEXTENDIDA.MaxLength = 100
            Me.columnRESIDENCIA_PRODUCTOR.MaxLength = 100
            Me.columnTELEFONO_PRODUCTOR.MaxLength = 20
            Me.columnNO_REGISTRO_PRODUCTOR.MaxLength = 8
            Me.columnNOMBRE_MULTIPLICADOR.MaxLength = 100
            Me.columnCEDULA_MULTIPLICADOR.MaxLength = 100
            Me.columnTELEFONO_MULTIPLICADOR.MaxLength = 100
            Me.columnNOMBRE_FINCA.MaxLength = 100
            Me.columnNOMBRE_PERSONA_FINCA.MaxLength = 100
            Me.columnDEPARTAMENTO.MaxLength = 100
            Me.columnMUNICIPIO.MaxLength = 100
            Me.columnALDEA.MaxLength = 100
            Me.columnCASERIO.MaxLength = 100
            Me.columnNOMBRE_LOTE.MaxLength = 100
            Me.columnESTADO_MULTI.MaxLength = 2
            Me.columnID_LOTE.AllowDBNull = false
            Me.columnCATEGORIA_ORIGEN.MaxLength = 100
            Me.columnTIPO_CULTIVO.MaxLength = 100
            Me.columnVARIEDAD.MaxLength = 100
            Me.columnPRODUCTOR.MaxLength = 100
            Me.columnNO_LOTE.MaxLength = 100
            Me.columnANO_PRODU.MaxLength = 20
            Me.columnCATEGORIA_SEMILLA.MaxLength = 100
            Me.columnTIPO_SEMILLA.MaxLength = 100
            Me.columnCULTIVO_SEMILLA.MaxLength = 30
            Me.columnVARIEDAD_MAIZ.MaxLength = 100
            Me.columnVARIEDAD_FRIJOL.MaxLength = 100
            Me.columnDESTINO.MaxLength = 50
            Me.columnESTADO_LOTE.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newvista_multi_loteRow() As vista_multi_loteRow
            Return CType(Me.NewRow,vista_multi_loteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vista_multi_loteRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vista_multi_loteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vista_multi_loteRowChangedEvent) Is Nothing) Then
                RaiseEvent vista_multi_loteRowChanged(Me, New vista_multi_loteRowChangeEvent(CType(e.Row,vista_multi_loteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vista_multi_loteRowChangingEvent) Is Nothing) Then
                RaiseEvent vista_multi_loteRowChanging(Me, New vista_multi_loteRowChangeEvent(CType(e.Row,vista_multi_loteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vista_multi_loteRowDeletedEvent) Is Nothing) Then
                RaiseEvent vista_multi_loteRowDeleted(Me, New vista_multi_loteRowChangeEvent(CType(e.Row,vista_multi_loteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vista_multi_loteRowDeletingEvent) Is Nothing) Then
                RaiseEvent vista_multi_loteRowDeleting(Me, New vista_multi_loteRowChangeEvent(CType(e.Row,vista_multi_loteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removevista_multi_loteRow(ByVal row As vista_multi_loteRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetMultiplicador = New DataSetMultiplicador()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vista_multi_loteDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vista_acta_lote_multiDataTable
        Inherits Global.System.Data.TypedTableBase(Of vista_acta_lote_multiRow)
        
        Private columnID_MULTI As Global.System.Data.DataColumn
        
        Private columnNOMBRE_MULTIPLICADOR As Global.System.Data.DataColumn
        
        Private columnREPRESENTANTE_LEGAL As Global.System.Data.DataColumn
        
        Private columnTELEFONO_MULTIPLICADOR As Global.System.Data.DataColumn
        
        Private columnDEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnMUNICIPIO As Global.System.Data.DataColumn
        
        Private columnALDEA As Global.System.Data.DataColumn
        
        Private columnCASERIO As Global.System.Data.DataColumn
        
        Private columnESTADO_MULTI As Global.System.Data.DataColumn
        
        Private columnID_LOTE As Global.System.Data.DataColumn
        
        Private columnCATEGORIA_ORIGEN As Global.System.Data.DataColumn
        
        Private columnTIPO_CULTIVO As Global.System.Data.DataColumn
        
        Private columnVARIEDAD As Global.System.Data.DataColumn
        
        Private columnPRODUCTOR As Global.System.Data.DataColumn
        
        Private columnNO_LOTE As Global.System.Data.DataColumn
        
        Private columnESTADO_LOTE As Global.System.Data.DataColumn
        
        Private columnID_ACTA As Global.System.Data.DataColumn
        
        Private columnFECHA_ACTA As Global.System.Data.DataColumn
        
        Private columnPORCENTAJE_HUMEDAD As Global.System.Data.DataColumn
        
        Private columnESTADO_SENA As Global.System.Data.DataColumn
        
        Private columnNO_SACOS As Global.System.Data.DataColumn
        
        Private columnPESO_HUMEDO_QQ As Global.System.Data.DataColumn
        
        Private columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD As Global.System.Data.DataColumn
        
        Private columnSEMILLA_QQ_ORO As Global.System.Data.DataColumn
        
        Private columnSEMILLA_QQ_CONSUMO As Global.System.Data.DataColumn
        
        Private columnSEMILLA_QQ_BASURA As Global.System.Data.DataColumn
        
        Private columnSEMILLA_QQ_TOTAL As Global.System.Data.DataColumn
        
        Private columnOBSERVACIONES As Global.System.Data.DataColumn
        
        Private columnTARA As Global.System.Data.DataColumn
        
        Private columnCICLO_ACTA As Global.System.Data.DataColumn
        
        Private columnPESO_NETO As Global.System.Data.DataColumn
        
        Private columnPESO_LB As Global.System.Data.DataColumn
        
        Private columnLOTE_REGISTRADO As Global.System.Data.DataColumn
        
        Private columnCATEGORIA_REGISTRADO As Global.System.Data.DataColumn
        
        Private columnACTA_FIRMADA As Global.System.Data.DataColumn
        
        Private columnRENDIMIETO_ORO_PESO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vista_acta_lote_multi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_MULTIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_MULTI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOMBRE_MULTIPLICADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_MULTIPLICADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property REPRESENTANTE_LEGALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPRESENTANTE_LEGAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TELEFONO_MULTIPLICADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_MULTIPLICADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ALDEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALDEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CASERIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASERIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ESTADO_MULTIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_MULTI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CATEGORIA_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORIA_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIPO_CULTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CULTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VARIEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVARIEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PRODUCTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NO_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ESTADO_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_ACTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_ACTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FECHA_ACTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ACTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PORCENTAJE_HUMEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORCENTAJE_HUMEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ESTADO_SENAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_SENA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NO_SACOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_SACOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESO_HUMEDO_QQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_HUMEDO_QQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_QQ_OROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_QQ_ORO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_QQ_CONSUMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_QQ_CONSUMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_QQ_BASURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_QQ_BASURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_QQ_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_QQ_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACIONES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TARAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CICLO_ACTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCICLO_ACTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESO_NETOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_NETO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESO_LBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_LB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LOTE_REGISTRADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOTE_REGISTRADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CATEGORIA_REGISTRADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORIA_REGISTRADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ACTA_FIRMADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTA_FIRMADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RENDIMIETO_ORO_PESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRENDIMIETO_ORO_PESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vista_acta_lote_multiRow
            Get
                Return CType(Me.Rows(index),vista_acta_lote_multiRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_acta_lote_multiRowChanging As vista_acta_lote_multiRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_acta_lote_multiRowChanged As vista_acta_lote_multiRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_acta_lote_multiRowDeleting As vista_acta_lote_multiRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_acta_lote_multiRowDeleted As vista_acta_lote_multiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addvista_acta_lote_multiRow(ByVal row As vista_acta_lote_multiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addvista_acta_lote_multiRow( _
                    ByVal ID_MULTI As Integer,  _
                    ByVal NOMBRE_MULTIPLICADOR As String,  _
                    ByVal REPRESENTANTE_LEGAL As String,  _
                    ByVal TELEFONO_MULTIPLICADOR As String,  _
                    ByVal DEPARTAMENTO As String,  _
                    ByVal MUNICIPIO As String,  _
                    ByVal ALDEA As String,  _
                    ByVal CASERIO As String,  _
                    ByVal ESTADO_MULTI As String,  _
                    ByVal ID_LOTE As Integer,  _
                    ByVal CATEGORIA_ORIGEN As String,  _
                    ByVal TIPO_CULTIVO As String,  _
                    ByVal VARIEDAD As String,  _
                    ByVal PRODUCTOR As String,  _
                    ByVal NO_LOTE As String,  _
                    ByVal ESTADO_LOTE As String,  _
                    ByVal ID_ACTA As Integer,  _
                    ByVal FECHA_ACTA As Date,  _
                    ByVal PORCENTAJE_HUMEDAD As Decimal,  _
                    ByVal ESTADO_SENA As String,  _
                    ByVal NO_SACOS As Integer,  _
                    ByVal PESO_HUMEDO_QQ As Decimal,  _
                    ByVal PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD As Decimal,  _
                    ByVal SEMILLA_QQ_ORO As Decimal,  _
                    ByVal SEMILLA_QQ_CONSUMO As Decimal,  _
                    ByVal SEMILLA_QQ_BASURA As Decimal,  _
                    ByVal SEMILLA_QQ_TOTAL As Decimal,  _
                    ByVal OBSERVACIONES As String,  _
                    ByVal TARA As Decimal,  _
                    ByVal CICLO_ACTA As String,  _
                    ByVal PESO_NETO As Decimal,  _
                    ByVal PESO_LB As Decimal,  _
                    ByVal LOTE_REGISTRADO As String,  _
                    ByVal CATEGORIA_REGISTRADO As String,  _
                    ByVal ACTA_FIRMADA() As Byte,  _
                    ByVal RENDIMIETO_ORO_PESO As Decimal) As vista_acta_lote_multiRow
            Dim rowvista_acta_lote_multiRow As vista_acta_lote_multiRow = CType(Me.NewRow,vista_acta_lote_multiRow)
            Dim columnValuesArray() As Object = New Object() {ID_MULTI, NOMBRE_MULTIPLICADOR, REPRESENTANTE_LEGAL, TELEFONO_MULTIPLICADOR, DEPARTAMENTO, MUNICIPIO, ALDEA, CASERIO, ESTADO_MULTI, ID_LOTE, CATEGORIA_ORIGEN, TIPO_CULTIVO, VARIEDAD, PRODUCTOR, NO_LOTE, ESTADO_LOTE, ID_ACTA, FECHA_ACTA, PORCENTAJE_HUMEDAD, ESTADO_SENA, NO_SACOS, PESO_HUMEDO_QQ, PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD, SEMILLA_QQ_ORO, SEMILLA_QQ_CONSUMO, SEMILLA_QQ_BASURA, SEMILLA_QQ_TOTAL, OBSERVACIONES, TARA, CICLO_ACTA, PESO_NETO, PESO_LB, LOTE_REGISTRADO, CATEGORIA_REGISTRADO, ACTA_FIRMADA, RENDIMIETO_ORO_PESO}
            rowvista_acta_lote_multiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvista_acta_lote_multiRow)
            Return rowvista_acta_lote_multiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vista_acta_lote_multiDataTable = CType(MyBase.Clone,vista_acta_lote_multiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vista_acta_lote_multiDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_MULTI = MyBase.Columns("ID_MULTI")
            Me.columnNOMBRE_MULTIPLICADOR = MyBase.Columns("NOMBRE_MULTIPLICADOR")
            Me.columnREPRESENTANTE_LEGAL = MyBase.Columns("REPRESENTANTE_LEGAL")
            Me.columnTELEFONO_MULTIPLICADOR = MyBase.Columns("TELEFONO_MULTIPLICADOR")
            Me.columnDEPARTAMENTO = MyBase.Columns("DEPARTAMENTO")
            Me.columnMUNICIPIO = MyBase.Columns("MUNICIPIO")
            Me.columnALDEA = MyBase.Columns("ALDEA")
            Me.columnCASERIO = MyBase.Columns("CASERIO")
            Me.columnESTADO_MULTI = MyBase.Columns("ESTADO_MULTI")
            Me.columnID_LOTE = MyBase.Columns("ID_LOTE")
            Me.columnCATEGORIA_ORIGEN = MyBase.Columns("CATEGORIA_ORIGEN")
            Me.columnTIPO_CULTIVO = MyBase.Columns("TIPO_CULTIVO")
            Me.columnVARIEDAD = MyBase.Columns("VARIEDAD")
            Me.columnPRODUCTOR = MyBase.Columns("PRODUCTOR")
            Me.columnNO_LOTE = MyBase.Columns("NO_LOTE")
            Me.columnESTADO_LOTE = MyBase.Columns("ESTADO_LOTE")
            Me.columnID_ACTA = MyBase.Columns("ID_ACTA")
            Me.columnFECHA_ACTA = MyBase.Columns("FECHA_ACTA")
            Me.columnPORCENTAJE_HUMEDAD = MyBase.Columns("PORCENTAJE_HUMEDAD")
            Me.columnESTADO_SENA = MyBase.Columns("ESTADO_SENA")
            Me.columnNO_SACOS = MyBase.Columns("NO_SACOS")
            Me.columnPESO_HUMEDO_QQ = MyBase.Columns("PESO_HUMEDO_QQ")
            Me.columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD = MyBase.Columns("PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD")
            Me.columnSEMILLA_QQ_ORO = MyBase.Columns("SEMILLA_QQ_ORO")
            Me.columnSEMILLA_QQ_CONSUMO = MyBase.Columns("SEMILLA_QQ_CONSUMO")
            Me.columnSEMILLA_QQ_BASURA = MyBase.Columns("SEMILLA_QQ_BASURA")
            Me.columnSEMILLA_QQ_TOTAL = MyBase.Columns("SEMILLA_QQ_TOTAL")
            Me.columnOBSERVACIONES = MyBase.Columns("OBSERVACIONES")
            Me.columnTARA = MyBase.Columns("TARA")
            Me.columnCICLO_ACTA = MyBase.Columns("CICLO_ACTA")
            Me.columnPESO_NETO = MyBase.Columns("PESO_NETO")
            Me.columnPESO_LB = MyBase.Columns("PESO_LB")
            Me.columnLOTE_REGISTRADO = MyBase.Columns("LOTE_REGISTRADO")
            Me.columnCATEGORIA_REGISTRADO = MyBase.Columns("CATEGORIA_REGISTRADO")
            Me.columnACTA_FIRMADA = MyBase.Columns("ACTA_FIRMADA")
            Me.columnRENDIMIETO_ORO_PESO = MyBase.Columns("RENDIMIETO_ORO_PESO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_MULTI = New Global.System.Data.DataColumn("ID_MULTI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_MULTI)
            Me.columnNOMBRE_MULTIPLICADOR = New Global.System.Data.DataColumn("NOMBRE_MULTIPLICADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_MULTIPLICADOR)
            Me.columnREPRESENTANTE_LEGAL = New Global.System.Data.DataColumn("REPRESENTANTE_LEGAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPRESENTANTE_LEGAL)
            Me.columnTELEFONO_MULTIPLICADOR = New Global.System.Data.DataColumn("TELEFONO_MULTIPLICADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_MULTIPLICADOR)
            Me.columnDEPARTAMENTO = New Global.System.Data.DataColumn("DEPARTAMENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPARTAMENTO)
            Me.columnMUNICIPIO = New Global.System.Data.DataColumn("MUNICIPIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNICIPIO)
            Me.columnALDEA = New Global.System.Data.DataColumn("ALDEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALDEA)
            Me.columnCASERIO = New Global.System.Data.DataColumn("CASERIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASERIO)
            Me.columnESTADO_MULTI = New Global.System.Data.DataColumn("ESTADO_MULTI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_MULTI)
            Me.columnID_LOTE = New Global.System.Data.DataColumn("ID_LOTE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_LOTE)
            Me.columnCATEGORIA_ORIGEN = New Global.System.Data.DataColumn("CATEGORIA_ORIGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORIA_ORIGEN)
            Me.columnTIPO_CULTIVO = New Global.System.Data.DataColumn("TIPO_CULTIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CULTIVO)
            Me.columnVARIEDAD = New Global.System.Data.DataColumn("VARIEDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVARIEDAD)
            Me.columnPRODUCTOR = New Global.System.Data.DataColumn("PRODUCTOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTOR)
            Me.columnNO_LOTE = New Global.System.Data.DataColumn("NO_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_LOTE)
            Me.columnESTADO_LOTE = New Global.System.Data.DataColumn("ESTADO_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_LOTE)
            Me.columnID_ACTA = New Global.System.Data.DataColumn("ID_ACTA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_ACTA)
            Me.columnFECHA_ACTA = New Global.System.Data.DataColumn("FECHA_ACTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ACTA)
            Me.columnPORCENTAJE_HUMEDAD = New Global.System.Data.DataColumn("PORCENTAJE_HUMEDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORCENTAJE_HUMEDAD)
            Me.columnESTADO_SENA = New Global.System.Data.DataColumn("ESTADO_SENA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_SENA)
            Me.columnNO_SACOS = New Global.System.Data.DataColumn("NO_SACOS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_SACOS)
            Me.columnPESO_HUMEDO_QQ = New Global.System.Data.DataColumn("PESO_HUMEDO_QQ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_HUMEDO_QQ)
            Me.columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD = New Global.System.Data.DataColumn("PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD)
            Me.columnSEMILLA_QQ_ORO = New Global.System.Data.DataColumn("SEMILLA_QQ_ORO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_QQ_ORO)
            Me.columnSEMILLA_QQ_CONSUMO = New Global.System.Data.DataColumn("SEMILLA_QQ_CONSUMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_QQ_CONSUMO)
            Me.columnSEMILLA_QQ_BASURA = New Global.System.Data.DataColumn("SEMILLA_QQ_BASURA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_QQ_BASURA)
            Me.columnSEMILLA_QQ_TOTAL = New Global.System.Data.DataColumn("SEMILLA_QQ_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_QQ_TOTAL)
            Me.columnOBSERVACIONES = New Global.System.Data.DataColumn("OBSERVACIONES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACIONES)
            Me.columnTARA = New Global.System.Data.DataColumn("TARA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARA)
            Me.columnCICLO_ACTA = New Global.System.Data.DataColumn("CICLO_ACTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCICLO_ACTA)
            Me.columnPESO_NETO = New Global.System.Data.DataColumn("PESO_NETO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_NETO)
            Me.columnPESO_LB = New Global.System.Data.DataColumn("PESO_LB", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_LB)
            Me.columnLOTE_REGISTRADO = New Global.System.Data.DataColumn("LOTE_REGISTRADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOTE_REGISTRADO)
            Me.columnCATEGORIA_REGISTRADO = New Global.System.Data.DataColumn("CATEGORIA_REGISTRADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORIA_REGISTRADO)
            Me.columnACTA_FIRMADA = New Global.System.Data.DataColumn("ACTA_FIRMADA", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTA_FIRMADA)
            Me.columnRENDIMIETO_ORO_PESO = New Global.System.Data.DataColumn("RENDIMIETO_ORO_PESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRENDIMIETO_ORO_PESO)
            Me.columnID_MULTI.AllowDBNull = false
            Me.columnNOMBRE_MULTIPLICADOR.MaxLength = 100
            Me.columnREPRESENTANTE_LEGAL.MaxLength = 100
            Me.columnTELEFONO_MULTIPLICADOR.MaxLength = 100
            Me.columnDEPARTAMENTO.MaxLength = 100
            Me.columnMUNICIPIO.MaxLength = 100
            Me.columnALDEA.MaxLength = 100
            Me.columnCASERIO.MaxLength = 100
            Me.columnESTADO_MULTI.MaxLength = 2
            Me.columnID_LOTE.AllowDBNull = false
            Me.columnCATEGORIA_ORIGEN.MaxLength = 100
            Me.columnTIPO_CULTIVO.MaxLength = 100
            Me.columnVARIEDAD.MaxLength = 100
            Me.columnPRODUCTOR.MaxLength = 100
            Me.columnNO_LOTE.MaxLength = 100
            Me.columnESTADO_LOTE.MaxLength = 2
            Me.columnID_ACTA.AllowDBNull = false
            Me.columnESTADO_SENA.MaxLength = 2
            Me.columnOBSERVACIONES.MaxLength = 2000
            Me.columnCICLO_ACTA.MaxLength = 20
            Me.columnLOTE_REGISTRADO.MaxLength = 255
            Me.columnCATEGORIA_REGISTRADO.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newvista_acta_lote_multiRow() As vista_acta_lote_multiRow
            Return CType(Me.NewRow,vista_acta_lote_multiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vista_acta_lote_multiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vista_acta_lote_multiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vista_acta_lote_multiRowChangedEvent) Is Nothing) Then
                RaiseEvent vista_acta_lote_multiRowChanged(Me, New vista_acta_lote_multiRowChangeEvent(CType(e.Row,vista_acta_lote_multiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vista_acta_lote_multiRowChangingEvent) Is Nothing) Then
                RaiseEvent vista_acta_lote_multiRowChanging(Me, New vista_acta_lote_multiRowChangeEvent(CType(e.Row,vista_acta_lote_multiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vista_acta_lote_multiRowDeletedEvent) Is Nothing) Then
                RaiseEvent vista_acta_lote_multiRowDeleted(Me, New vista_acta_lote_multiRowChangeEvent(CType(e.Row,vista_acta_lote_multiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vista_acta_lote_multiRowDeletingEvent) Is Nothing) Then
                RaiseEvent vista_acta_lote_multiRowDeleting(Me, New vista_acta_lote_multiRowChangeEvent(CType(e.Row,vista_acta_lote_multiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removevista_acta_lote_multiRow(ByVal row As vista_acta_lote_multiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetMultiplicador = New DataSetMultiplicador()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vista_acta_lote_multiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vista_ficha_informeDataTable
        Inherits Global.System.Data.TypedTableBase(Of vista_ficha_informeRow)
        
        Private columnID_MULTI As Global.System.Data.DataColumn
        
        Private columnNOMBRE_MULTIPLICADOR As Global.System.Data.DataColumn
        
        Private columnREPRESENTANTE_LEGAL As Global.System.Data.DataColumn
        
        Private columnTELEFONO_MULTIPLICADOR As Global.System.Data.DataColumn
        
        Private columnDEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnMUNICIPIO As Global.System.Data.DataColumn
        
        Private columnALDEA As Global.System.Data.DataColumn
        
        Private columnCASERIO As Global.System.Data.DataColumn
        
        Private columnESTADO_MULTI As Global.System.Data.DataColumn
        
        Private columnID_LOTE As Global.System.Data.DataColumn
        
        Private columnCATEGORIA_ORIGEN As Global.System.Data.DataColumn
        
        Private columnTIPO_CULTIVO As Global.System.Data.DataColumn
        
        Private columnVARIEDAD As Global.System.Data.DataColumn
        
        Private columnPRODUCTOR As Global.System.Data.DataColumn
        
        Private columnNO_LOTE As Global.System.Data.DataColumn
        
        Private columnESTADO_LOTE As Global.System.Data.DataColumn
        
        Private columnID_ACTA As Global.System.Data.DataColumn
        
        Private columnFECHA_ACTA As Global.System.Data.DataColumn
        
        Private columnPORCENTAJE_HUMEDAD As Global.System.Data.DataColumn
        
        Private columnESTADO_SENA As Global.System.Data.DataColumn
        
        Private columnNO_SACOS As Global.System.Data.DataColumn
        
        Private columnPESO_HUMEDO_QQ As Global.System.Data.DataColumn
        
        Private columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD As Global.System.Data.DataColumn
        
        Private columnSEMILLA_QQ_ORO As Global.System.Data.DataColumn
        
        Private columnSEMILLA_QQ_CONSUMO As Global.System.Data.DataColumn
        
        Private columnSEMILLA_QQ_BASURA As Global.System.Data.DataColumn
        
        Private columnSEMILLA_QQ_TOTAL As Global.System.Data.DataColumn
        
        Private columnOBSERVACIONES As Global.System.Data.DataColumn
        
        Private columnTARA As Global.System.Data.DataColumn
        
        Private columnCICLO_ACTA As Global.System.Data.DataColumn
        
        Private columnPESO_NETO As Global.System.Data.DataColumn
        
        Private columnPESO_LB As Global.System.Data.DataColumn
        
        Private columnLOTE_REGISTRADO As Global.System.Data.DataColumn
        
        Private columnCATEGORIA_REGISTRADO As Global.System.Data.DataColumn
        
        Private columnACTA_FIRMADA As Global.System.Data.DataColumn
        
        Private columnRENDIMIETO_ORO_PESO As Global.System.Data.DataColumn
        
        Private columncantidad_qq_ficha As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        Private columnpeso_lb_ficha As Global.System.Data.DataColumn
        
        Private columncantidad_sacos_ficha As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vista_ficha_informe"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_MULTIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_MULTI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOMBRE_MULTIPLICADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_MULTIPLICADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property REPRESENTANTE_LEGALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPRESENTANTE_LEGAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TELEFONO_MULTIPLICADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_MULTIPLICADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ALDEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALDEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CASERIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASERIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ESTADO_MULTIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_MULTI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CATEGORIA_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORIA_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIPO_CULTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CULTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VARIEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVARIEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PRODUCTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NO_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ESTADO_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_ACTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_ACTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FECHA_ACTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ACTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PORCENTAJE_HUMEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORCENTAJE_HUMEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ESTADO_SENAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_SENA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NO_SACOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_SACOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESO_HUMEDO_QQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_HUMEDO_QQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_QQ_OROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_QQ_ORO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_QQ_CONSUMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_QQ_CONSUMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_QQ_BASURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_QQ_BASURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_QQ_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_QQ_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACIONES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TARAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CICLO_ACTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCICLO_ACTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESO_NETOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_NETO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESO_LBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_LB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LOTE_REGISTRADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOTE_REGISTRADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CATEGORIA_REGISTRADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORIA_REGISTRADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ACTA_FIRMADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTA_FIRMADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RENDIMIETO_ORO_PESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRENDIMIETO_ORO_PESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cantidad_qq_fichaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncantidad_qq_ficha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property peso_lb_fichaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpeso_lb_ficha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cantidad_sacos_fichaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncantidad_sacos_ficha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vista_ficha_informeRow
            Get
                Return CType(Me.Rows(index),vista_ficha_informeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_ficha_informeRowChanging As vista_ficha_informeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_ficha_informeRowChanged As vista_ficha_informeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_ficha_informeRowDeleting As vista_ficha_informeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_ficha_informeRowDeleted As vista_ficha_informeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addvista_ficha_informeRow(ByVal row As vista_ficha_informeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addvista_ficha_informeRow( _
                    ByVal ID_MULTI As Integer,  _
                    ByVal NOMBRE_MULTIPLICADOR As String,  _
                    ByVal REPRESENTANTE_LEGAL As String,  _
                    ByVal TELEFONO_MULTIPLICADOR As String,  _
                    ByVal DEPARTAMENTO As String,  _
                    ByVal MUNICIPIO As String,  _
                    ByVal ALDEA As String,  _
                    ByVal CASERIO As String,  _
                    ByVal ESTADO_MULTI As String,  _
                    ByVal ID_LOTE As Integer,  _
                    ByVal CATEGORIA_ORIGEN As String,  _
                    ByVal TIPO_CULTIVO As String,  _
                    ByVal VARIEDAD As String,  _
                    ByVal PRODUCTOR As String,  _
                    ByVal NO_LOTE As String,  _
                    ByVal ESTADO_LOTE As String,  _
                    ByVal ID_ACTA As Integer,  _
                    ByVal FECHA_ACTA As Date,  _
                    ByVal PORCENTAJE_HUMEDAD As Decimal,  _
                    ByVal ESTADO_SENA As String,  _
                    ByVal NO_SACOS As Integer,  _
                    ByVal PESO_HUMEDO_QQ As Decimal,  _
                    ByVal PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD As Decimal,  _
                    ByVal SEMILLA_QQ_ORO As Decimal,  _
                    ByVal SEMILLA_QQ_CONSUMO As Decimal,  _
                    ByVal SEMILLA_QQ_BASURA As Decimal,  _
                    ByVal SEMILLA_QQ_TOTAL As Decimal,  _
                    ByVal OBSERVACIONES As String,  _
                    ByVal TARA As Decimal,  _
                    ByVal CICLO_ACTA As String,  _
                    ByVal PESO_NETO As Decimal,  _
                    ByVal PESO_LB As Decimal,  _
                    ByVal LOTE_REGISTRADO As String,  _
                    ByVal CATEGORIA_REGISTRADO As String,  _
                    ByVal ACTA_FIRMADA() As Byte,  _
                    ByVal RENDIMIETO_ORO_PESO As Decimal,  _
                    ByVal cantidad_qq_ficha As Decimal,  _
                    ByVal estado As String,  _
                    ByVal peso_lb_ficha As Decimal,  _
                    ByVal cantidad_sacos_ficha As Decimal) As vista_ficha_informeRow
            Dim rowvista_ficha_informeRow As vista_ficha_informeRow = CType(Me.NewRow,vista_ficha_informeRow)
            Dim columnValuesArray() As Object = New Object() {ID_MULTI, NOMBRE_MULTIPLICADOR, REPRESENTANTE_LEGAL, TELEFONO_MULTIPLICADOR, DEPARTAMENTO, MUNICIPIO, ALDEA, CASERIO, ESTADO_MULTI, ID_LOTE, CATEGORIA_ORIGEN, TIPO_CULTIVO, VARIEDAD, PRODUCTOR, NO_LOTE, ESTADO_LOTE, ID_ACTA, FECHA_ACTA, PORCENTAJE_HUMEDAD, ESTADO_SENA, NO_SACOS, PESO_HUMEDO_QQ, PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD, SEMILLA_QQ_ORO, SEMILLA_QQ_CONSUMO, SEMILLA_QQ_BASURA, SEMILLA_QQ_TOTAL, OBSERVACIONES, TARA, CICLO_ACTA, PESO_NETO, PESO_LB, LOTE_REGISTRADO, CATEGORIA_REGISTRADO, ACTA_FIRMADA, RENDIMIETO_ORO_PESO, cantidad_qq_ficha, estado, peso_lb_ficha, cantidad_sacos_ficha}
            rowvista_ficha_informeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvista_ficha_informeRow)
            Return rowvista_ficha_informeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vista_ficha_informeDataTable = CType(MyBase.Clone,vista_ficha_informeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vista_ficha_informeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_MULTI = MyBase.Columns("ID_MULTI")
            Me.columnNOMBRE_MULTIPLICADOR = MyBase.Columns("NOMBRE_MULTIPLICADOR")
            Me.columnREPRESENTANTE_LEGAL = MyBase.Columns("REPRESENTANTE_LEGAL")
            Me.columnTELEFONO_MULTIPLICADOR = MyBase.Columns("TELEFONO_MULTIPLICADOR")
            Me.columnDEPARTAMENTO = MyBase.Columns("DEPARTAMENTO")
            Me.columnMUNICIPIO = MyBase.Columns("MUNICIPIO")
            Me.columnALDEA = MyBase.Columns("ALDEA")
            Me.columnCASERIO = MyBase.Columns("CASERIO")
            Me.columnESTADO_MULTI = MyBase.Columns("ESTADO_MULTI")
            Me.columnID_LOTE = MyBase.Columns("ID_LOTE")
            Me.columnCATEGORIA_ORIGEN = MyBase.Columns("CATEGORIA_ORIGEN")
            Me.columnTIPO_CULTIVO = MyBase.Columns("TIPO_CULTIVO")
            Me.columnVARIEDAD = MyBase.Columns("VARIEDAD")
            Me.columnPRODUCTOR = MyBase.Columns("PRODUCTOR")
            Me.columnNO_LOTE = MyBase.Columns("NO_LOTE")
            Me.columnESTADO_LOTE = MyBase.Columns("ESTADO_LOTE")
            Me.columnID_ACTA = MyBase.Columns("ID_ACTA")
            Me.columnFECHA_ACTA = MyBase.Columns("FECHA_ACTA")
            Me.columnPORCENTAJE_HUMEDAD = MyBase.Columns("PORCENTAJE_HUMEDAD")
            Me.columnESTADO_SENA = MyBase.Columns("ESTADO_SENA")
            Me.columnNO_SACOS = MyBase.Columns("NO_SACOS")
            Me.columnPESO_HUMEDO_QQ = MyBase.Columns("PESO_HUMEDO_QQ")
            Me.columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD = MyBase.Columns("PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD")
            Me.columnSEMILLA_QQ_ORO = MyBase.Columns("SEMILLA_QQ_ORO")
            Me.columnSEMILLA_QQ_CONSUMO = MyBase.Columns("SEMILLA_QQ_CONSUMO")
            Me.columnSEMILLA_QQ_BASURA = MyBase.Columns("SEMILLA_QQ_BASURA")
            Me.columnSEMILLA_QQ_TOTAL = MyBase.Columns("SEMILLA_QQ_TOTAL")
            Me.columnOBSERVACIONES = MyBase.Columns("OBSERVACIONES")
            Me.columnTARA = MyBase.Columns("TARA")
            Me.columnCICLO_ACTA = MyBase.Columns("CICLO_ACTA")
            Me.columnPESO_NETO = MyBase.Columns("PESO_NETO")
            Me.columnPESO_LB = MyBase.Columns("PESO_LB")
            Me.columnLOTE_REGISTRADO = MyBase.Columns("LOTE_REGISTRADO")
            Me.columnCATEGORIA_REGISTRADO = MyBase.Columns("CATEGORIA_REGISTRADO")
            Me.columnACTA_FIRMADA = MyBase.Columns("ACTA_FIRMADA")
            Me.columnRENDIMIETO_ORO_PESO = MyBase.Columns("RENDIMIETO_ORO_PESO")
            Me.columncantidad_qq_ficha = MyBase.Columns("cantidad_qq_ficha")
            Me.columnestado = MyBase.Columns("estado")
            Me.columnpeso_lb_ficha = MyBase.Columns("peso_lb_ficha")
            Me.columncantidad_sacos_ficha = MyBase.Columns("cantidad_sacos_ficha")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_MULTI = New Global.System.Data.DataColumn("ID_MULTI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_MULTI)
            Me.columnNOMBRE_MULTIPLICADOR = New Global.System.Data.DataColumn("NOMBRE_MULTIPLICADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_MULTIPLICADOR)
            Me.columnREPRESENTANTE_LEGAL = New Global.System.Data.DataColumn("REPRESENTANTE_LEGAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPRESENTANTE_LEGAL)
            Me.columnTELEFONO_MULTIPLICADOR = New Global.System.Data.DataColumn("TELEFONO_MULTIPLICADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_MULTIPLICADOR)
            Me.columnDEPARTAMENTO = New Global.System.Data.DataColumn("DEPARTAMENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPARTAMENTO)
            Me.columnMUNICIPIO = New Global.System.Data.DataColumn("MUNICIPIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNICIPIO)
            Me.columnALDEA = New Global.System.Data.DataColumn("ALDEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALDEA)
            Me.columnCASERIO = New Global.System.Data.DataColumn("CASERIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASERIO)
            Me.columnESTADO_MULTI = New Global.System.Data.DataColumn("ESTADO_MULTI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_MULTI)
            Me.columnID_LOTE = New Global.System.Data.DataColumn("ID_LOTE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_LOTE)
            Me.columnCATEGORIA_ORIGEN = New Global.System.Data.DataColumn("CATEGORIA_ORIGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORIA_ORIGEN)
            Me.columnTIPO_CULTIVO = New Global.System.Data.DataColumn("TIPO_CULTIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CULTIVO)
            Me.columnVARIEDAD = New Global.System.Data.DataColumn("VARIEDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVARIEDAD)
            Me.columnPRODUCTOR = New Global.System.Data.DataColumn("PRODUCTOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTOR)
            Me.columnNO_LOTE = New Global.System.Data.DataColumn("NO_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_LOTE)
            Me.columnESTADO_LOTE = New Global.System.Data.DataColumn("ESTADO_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_LOTE)
            Me.columnID_ACTA = New Global.System.Data.DataColumn("ID_ACTA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_ACTA)
            Me.columnFECHA_ACTA = New Global.System.Data.DataColumn("FECHA_ACTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ACTA)
            Me.columnPORCENTAJE_HUMEDAD = New Global.System.Data.DataColumn("PORCENTAJE_HUMEDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORCENTAJE_HUMEDAD)
            Me.columnESTADO_SENA = New Global.System.Data.DataColumn("ESTADO_SENA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_SENA)
            Me.columnNO_SACOS = New Global.System.Data.DataColumn("NO_SACOS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_SACOS)
            Me.columnPESO_HUMEDO_QQ = New Global.System.Data.DataColumn("PESO_HUMEDO_QQ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_HUMEDO_QQ)
            Me.columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD = New Global.System.Data.DataColumn("PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD)
            Me.columnSEMILLA_QQ_ORO = New Global.System.Data.DataColumn("SEMILLA_QQ_ORO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_QQ_ORO)
            Me.columnSEMILLA_QQ_CONSUMO = New Global.System.Data.DataColumn("SEMILLA_QQ_CONSUMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_QQ_CONSUMO)
            Me.columnSEMILLA_QQ_BASURA = New Global.System.Data.DataColumn("SEMILLA_QQ_BASURA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_QQ_BASURA)
            Me.columnSEMILLA_QQ_TOTAL = New Global.System.Data.DataColumn("SEMILLA_QQ_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_QQ_TOTAL)
            Me.columnOBSERVACIONES = New Global.System.Data.DataColumn("OBSERVACIONES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACIONES)
            Me.columnTARA = New Global.System.Data.DataColumn("TARA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARA)
            Me.columnCICLO_ACTA = New Global.System.Data.DataColumn("CICLO_ACTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCICLO_ACTA)
            Me.columnPESO_NETO = New Global.System.Data.DataColumn("PESO_NETO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_NETO)
            Me.columnPESO_LB = New Global.System.Data.DataColumn("PESO_LB", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_LB)
            Me.columnLOTE_REGISTRADO = New Global.System.Data.DataColumn("LOTE_REGISTRADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOTE_REGISTRADO)
            Me.columnCATEGORIA_REGISTRADO = New Global.System.Data.DataColumn("CATEGORIA_REGISTRADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORIA_REGISTRADO)
            Me.columnACTA_FIRMADA = New Global.System.Data.DataColumn("ACTA_FIRMADA", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTA_FIRMADA)
            Me.columnRENDIMIETO_ORO_PESO = New Global.System.Data.DataColumn("RENDIMIETO_ORO_PESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRENDIMIETO_ORO_PESO)
            Me.columncantidad_qq_ficha = New Global.System.Data.DataColumn("cantidad_qq_ficha", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncantidad_qq_ficha)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columnpeso_lb_ficha = New Global.System.Data.DataColumn("peso_lb_ficha", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpeso_lb_ficha)
            Me.columncantidad_sacos_ficha = New Global.System.Data.DataColumn("cantidad_sacos_ficha", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncantidad_sacos_ficha)
            Me.columnID_MULTI.AllowDBNull = false
            Me.columnNOMBRE_MULTIPLICADOR.MaxLength = 100
            Me.columnREPRESENTANTE_LEGAL.MaxLength = 100
            Me.columnTELEFONO_MULTIPLICADOR.MaxLength = 100
            Me.columnDEPARTAMENTO.MaxLength = 100
            Me.columnMUNICIPIO.MaxLength = 100
            Me.columnALDEA.MaxLength = 100
            Me.columnCASERIO.MaxLength = 100
            Me.columnESTADO_MULTI.MaxLength = 2
            Me.columnID_LOTE.AllowDBNull = false
            Me.columnCATEGORIA_ORIGEN.MaxLength = 100
            Me.columnTIPO_CULTIVO.MaxLength = 100
            Me.columnVARIEDAD.MaxLength = 100
            Me.columnPRODUCTOR.MaxLength = 100
            Me.columnNO_LOTE.MaxLength = 100
            Me.columnESTADO_LOTE.MaxLength = 2
            Me.columnID_ACTA.AllowDBNull = false
            Me.columnESTADO_SENA.MaxLength = 2
            Me.columnOBSERVACIONES.MaxLength = 2000
            Me.columnCICLO_ACTA.MaxLength = 20
            Me.columnLOTE_REGISTRADO.MaxLength = 255
            Me.columnCATEGORIA_REGISTRADO.MaxLength = 255
            Me.columnestado.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newvista_ficha_informeRow() As vista_ficha_informeRow
            Return CType(Me.NewRow,vista_ficha_informeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vista_ficha_informeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vista_ficha_informeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vista_ficha_informeRowChangedEvent) Is Nothing) Then
                RaiseEvent vista_ficha_informeRowChanged(Me, New vista_ficha_informeRowChangeEvent(CType(e.Row,vista_ficha_informeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vista_ficha_informeRowChangingEvent) Is Nothing) Then
                RaiseEvent vista_ficha_informeRowChanging(Me, New vista_ficha_informeRowChangeEvent(CType(e.Row,vista_ficha_informeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vista_ficha_informeRowDeletedEvent) Is Nothing) Then
                RaiseEvent vista_ficha_informeRowDeleted(Me, New vista_ficha_informeRowChangeEvent(CType(e.Row,vista_ficha_informeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vista_ficha_informeRowDeletingEvent) Is Nothing) Then
                RaiseEvent vista_ficha_informeRowDeleting(Me, New vista_ficha_informeRowChangeEvent(CType(e.Row,vista_ficha_informeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removevista_ficha_informeRow(ByVal row As vista_ficha_informeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetMultiplicador = New DataSetMultiplicador()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vista_ficha_informeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vista_acta_lote_multi_germDataTable
        Inherits Global.System.Data.TypedTableBase(Of vista_acta_lote_multi_germRow)
        
        Private columnID_MULTI As Global.System.Data.DataColumn
        
        Private columnNOMBRE_MULTIPLICADOR As Global.System.Data.DataColumn
        
        Private columnREPRESENTANTE_LEGAL As Global.System.Data.DataColumn
        
        Private columnTELEFONO_MULTIPLICADOR As Global.System.Data.DataColumn
        
        Private columnDEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnMUNICIPIO As Global.System.Data.DataColumn
        
        Private columnALDEA As Global.System.Data.DataColumn
        
        Private columnCASERIO As Global.System.Data.DataColumn
        
        Private columnESTADO_MULTI As Global.System.Data.DataColumn
        
        Private columnID_LOTE As Global.System.Data.DataColumn
        
        Private columnCATEGORIA_ORIGEN As Global.System.Data.DataColumn
        
        Private columnTIPO_CULTIVO As Global.System.Data.DataColumn
        
        Private columnVARIEDAD As Global.System.Data.DataColumn
        
        Private columnPRODUCTOR As Global.System.Data.DataColumn
        
        Private columnNO_LOTE As Global.System.Data.DataColumn
        
        Private columnESTADO_LOTE As Global.System.Data.DataColumn
        
        Private columnANO_PRODU As Global.System.Data.DataColumn
        
        Private columnTIPO_SEMILLA As Global.System.Data.DataColumn
        
        Private columnID_ACTA As Global.System.Data.DataColumn
        
        Private columnFECHA_ACTA As Global.System.Data.DataColumn
        
        Private columnPORCENTAJE_HUMEDAD As Global.System.Data.DataColumn
        
        Private columnESTADO_SENA As Global.System.Data.DataColumn
        
        Private columnNO_SACOS As Global.System.Data.DataColumn
        
        Private columnPESO_HUMEDO_QQ As Global.System.Data.DataColumn
        
        Private columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD As Global.System.Data.DataColumn
        
        Private columnSEMILLA_QQ_ORO As Global.System.Data.DataColumn
        
        Private columnSEMILLA_QQ_CONSUMO As Global.System.Data.DataColumn
        
        Private columnSEMILLA_QQ_BASURA As Global.System.Data.DataColumn
        
        Private columnSEMILLA_QQ_TOTAL As Global.System.Data.DataColumn
        
        Private columnOBSERVACIONES As Global.System.Data.DataColumn
        
        Private columnTARA As Global.System.Data.DataColumn
        
        Private columnCICLO_ACTA As Global.System.Data.DataColumn
        
        Private columnPESO_NETO As Global.System.Data.DataColumn
        
        Private columnPESO_LB As Global.System.Data.DataColumn
        
        Private columnLOTE_REGISTRADO As Global.System.Data.DataColumn
        
        Private columnCATEGORIA_REGISTRADO As Global.System.Data.DataColumn
        
        Private columnACTA_FIRMADA As Global.System.Data.DataColumn
        
        Private columnFICHA_FIRMADO As Global.System.Data.DataColumn
        
        Private columnCUADRO_FIRMADO As Global.System.Data.DataColumn
        
        Private columnarchivo_lote_senasa As Global.System.Data.DataColumn
        
        Private columnRENDIMIETO_ORO_PESO As Global.System.Data.DataColumn
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columndecha_elaboracion_g As Global.System.Data.DataColumn
        
        Private columnno_envase As Global.System.Data.DataColumn
        
        Private columnpeso_inicial_g As Global.System.Data.DataColumn
        
        Private columntipo_granel As Global.System.Data.DataColumn
        
        Private columnfecha_recibo_g As Global.System.Data.DataColumn
        
        Private columnfecha_muestreo_g As Global.System.Data.DataColumn
        
        Private columnhumedad_final As Global.System.Data.DataColumn
        
        Private columnfecha_evaluacion_g As Global.System.Data.DataColumn
        
        Private columntipo_envase As Global.System.Data.DataColumn
        
        Private columnfase_g As Global.System.Data.DataColumn
        
        Private columntamano_maiz As Global.System.Data.DataColumn
        
        Private columncantidad_inicial As Global.System.Data.DataColumn
        
        Private columncantidad_existente As Global.System.Data.DataColumn
        
        Private columnno_camara As Global.System.Data.DataColumn
        
        Private columnperimetro As Global.System.Data.DataColumn
        
        Private columncertisem As Global.System.Data.DataColumn
        
        Private columnfecha_certisem As Global.System.Data.DataColumn
        
        Private columnplanta_g As Global.System.Data.DataColumn
        
        Private columnfecha_planta_g As Global.System.Data.DataColumn
        
        Private columnsemilla_pura As Global.System.Data.DataColumn
        
        Private columnsemilla_otro_cultivo As Global.System.Data.DataColumn
        
        Private columnsemilla_maleza As Global.System.Data.DataColumn
        
        Private columnmateria_inerte As Global.System.Data.DataColumn
        
        Private columnplantulas_normales_1 As Global.System.Data.DataColumn
        
        Private columnplantulas_anormales_1 As Global.System.Data.DataColumn
        
        Private columnsemilla_muerta_1 As Global.System.Data.DataColumn
        
        Private columnsemillas_duras_1 As Global.System.Data.DataColumn
        
        Private columnsemillas_debiles_1 As Global.System.Data.DataColumn
        
        Private columnsemilla_mezcla_1 As Global.System.Data.DataColumn
        
        Private columnno_dias_1 As Global.System.Data.DataColumn
        
        Private columnplantulas_normales_2 As Global.System.Data.DataColumn
        
        Private columnplantulas_anormales_2 As Global.System.Data.DataColumn
        
        Private columnsemilla_muerta_2 As Global.System.Data.DataColumn
        
        Private columnsemillas_duras_2 As Global.System.Data.DataColumn
        
        Private columnsemillas_debiles_2 As Global.System.Data.DataColumn
        
        Private columnsemilla_mezcla_2 As Global.System.Data.DataColumn
        
        Private columnno_dias_2 As Global.System.Data.DataColumn
        
        Private columnplantulas_normales_3 As Global.System.Data.DataColumn
        
        Private columnplantulas_anormales_3 As Global.System.Data.DataColumn
        
        Private columnsemilla_muerta_3 As Global.System.Data.DataColumn
        
        Private columnsemillas_duras_3 As Global.System.Data.DataColumn
        
        Private columnsemillas_debiles_3 As Global.System.Data.DataColumn
        
        Private columnsemilla_mezcla_3 As Global.System.Data.DataColumn
        
        Private columnno_dias_3 As Global.System.Data.DataColumn
        
        Private columnplantulas_normales_4 As Global.System.Data.DataColumn
        
        Private columnplantulas_anormales_4 As Global.System.Data.DataColumn
        
        Private columnsemilla_muerta_4 As Global.System.Data.DataColumn
        
        Private columnsemillas_duras_4 As Global.System.Data.DataColumn
        
        Private columnsemillas_debiles_4 As Global.System.Data.DataColumn
        
        Private columnsemilla_mezcla_4 As Global.System.Data.DataColumn
        
        Private columnno_dias_4 As Global.System.Data.DataColumn
        
        Private columnplantulas_normales_total As Global.System.Data.DataColumn
        
        Private columnplantulas_anormales_total As Global.System.Data.DataColumn
        
        Private columnsemilla_muerta_total As Global.System.Data.DataColumn
        
        Private columnsemillas_duras_total As Global.System.Data.DataColumn
        
        Private columnsemillas_debiles_total As Global.System.Data.DataColumn
        
        Private columnsemilla_mezcla_total As Global.System.Data.DataColumn
        
        Private columnno_dias_total As Global.System.Data.DataColumn
        
        Private columnporcentaje_germnimacion As Global.System.Data.DataColumn
        
        Private columnobservaciones_g As Global.System.Data.DataColumn
        
        Private columnresponsable_muestreo As Global.System.Data.DataColumn
        
        Private columnresponsable_analisis As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        Private columndecision As Global.System.Data.DataColumn
        
        Private columnid_2 As Global.System.Data.DataColumn
        
        Private columngerminacion_firmada As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vista_acta_lote_multi_germ"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_MULTIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_MULTI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOMBRE_MULTIPLICADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_MULTIPLICADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property REPRESENTANTE_LEGALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPRESENTANTE_LEGAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TELEFONO_MULTIPLICADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_MULTIPLICADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ALDEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALDEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CASERIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASERIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ESTADO_MULTIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_MULTI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CATEGORIA_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORIA_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIPO_CULTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CULTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VARIEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVARIEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PRODUCTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NO_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ESTADO_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ANO_PRODUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANO_PRODU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIPO_SEMILLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_SEMILLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_ACTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_ACTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FECHA_ACTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ACTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PORCENTAJE_HUMEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORCENTAJE_HUMEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ESTADO_SENAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_SENA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NO_SACOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_SACOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESO_HUMEDO_QQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_HUMEDO_QQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_QQ_OROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_QQ_ORO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_QQ_CONSUMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_QQ_CONSUMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_QQ_BASURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_QQ_BASURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_QQ_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_QQ_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACIONES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TARAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CICLO_ACTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCICLO_ACTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESO_NETOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_NETO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESO_LBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_LB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LOTE_REGISTRADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOTE_REGISTRADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CATEGORIA_REGISTRADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORIA_REGISTRADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ACTA_FIRMADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTA_FIRMADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FICHA_FIRMADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFICHA_FIRMADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CUADRO_FIRMADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUADRO_FIRMADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property archivo_lote_senasaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnarchivo_lote_senasa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RENDIMIETO_ORO_PESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRENDIMIETO_ORO_PESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property decha_elaboracion_gColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecha_elaboracion_g
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_envaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_envase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property peso_inicial_gColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpeso_inicial_g
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipo_granelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo_granel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_recibo_gColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_recibo_g
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_muestreo_gColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_muestreo_g
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property humedad_finalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhumedad_final
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_evaluacion_gColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_evaluacion_g
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipo_envaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo_envase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fase_gColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfase_g
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tamano_maizColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntamano_maiz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cantidad_inicialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncantidad_inicial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cantidad_existenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncantidad_existente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_camaraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_camara
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property perimetroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperimetro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property certisemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncertisem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_certisemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_certisem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property planta_gColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplanta_g
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_planta_gColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_planta_g
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_puraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_pura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_otro_cultivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_otro_cultivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_malezaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_maleza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property materia_inerteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmateria_inerte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property plantulas_normales_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnplantulas_normales_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property plantulas_anormales_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnplantulas_anormales_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_muerta_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_muerta_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semillas_duras_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemillas_duras_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semillas_debiles_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemillas_debiles_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_mezcla_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_mezcla_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_dias_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_dias_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property plantulas_normales_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnplantulas_normales_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property plantulas_anormales_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnplantulas_anormales_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_muerta_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_muerta_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semillas_duras_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemillas_duras_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semillas_debiles_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemillas_debiles_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_mezcla_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_mezcla_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_dias_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_dias_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property plantulas_normales_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnplantulas_normales_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property plantulas_anormales_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnplantulas_anormales_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_muerta_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_muerta_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semillas_duras_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemillas_duras_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semillas_debiles_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemillas_debiles_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_mezcla_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_mezcla_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_dias_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_dias_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property plantulas_normales_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnplantulas_normales_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property plantulas_anormales_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnplantulas_anormales_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_muerta_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_muerta_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semillas_duras_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemillas_duras_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semillas_debiles_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemillas_debiles_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_mezcla_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_mezcla_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_dias_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_dias_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property plantulas_normales_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplantulas_normales_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property plantulas_anormales_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplantulas_anormales_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_muerta_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_muerta_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semillas_duras_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemillas_duras_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semillas_debiles_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemillas_debiles_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property semilla_mezcla_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsemilla_mezcla_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property no_dias_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_dias_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property porcentaje_germnimacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnporcentaje_germnimacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property observaciones_gColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobservaciones_g
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property responsable_muestreoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnresponsable_muestreo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property responsable_analisisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnresponsable_analisis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property decisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property id_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property germinacion_firmadaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngerminacion_firmada
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vista_acta_lote_multi_germRow
            Get
                Return CType(Me.Rows(index),vista_acta_lote_multi_germRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_acta_lote_multi_germRowChanging As vista_acta_lote_multi_germRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_acta_lote_multi_germRowChanged As vista_acta_lote_multi_germRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_acta_lote_multi_germRowDeleting As vista_acta_lote_multi_germRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_acta_lote_multi_germRowDeleted As vista_acta_lote_multi_germRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addvista_acta_lote_multi_germRow(ByVal row As vista_acta_lote_multi_germRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addvista_acta_lote_multi_germRow( _
                    ByVal ID_MULTI As Integer,  _
                    ByVal NOMBRE_MULTIPLICADOR As String,  _
                    ByVal REPRESENTANTE_LEGAL As String,  _
                    ByVal TELEFONO_MULTIPLICADOR As String,  _
                    ByVal DEPARTAMENTO As String,  _
                    ByVal MUNICIPIO As String,  _
                    ByVal ALDEA As String,  _
                    ByVal CASERIO As String,  _
                    ByVal ESTADO_MULTI As String,  _
                    ByVal ID_LOTE As Integer,  _
                    ByVal CATEGORIA_ORIGEN As String,  _
                    ByVal TIPO_CULTIVO As String,  _
                    ByVal VARIEDAD As String,  _
                    ByVal PRODUCTOR As String,  _
                    ByVal NO_LOTE As String,  _
                    ByVal ESTADO_LOTE As String,  _
                    ByVal ANO_PRODU As String,  _
                    ByVal TIPO_SEMILLA As String,  _
                    ByVal ID_ACTA As Integer,  _
                    ByVal FECHA_ACTA As Date,  _
                    ByVal PORCENTAJE_HUMEDAD As Decimal,  _
                    ByVal ESTADO_SENA As String,  _
                    ByVal NO_SACOS As Integer,  _
                    ByVal PESO_HUMEDO_QQ As Decimal,  _
                    ByVal PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD As Decimal,  _
                    ByVal SEMILLA_QQ_ORO As Decimal,  _
                    ByVal SEMILLA_QQ_CONSUMO As Decimal,  _
                    ByVal SEMILLA_QQ_BASURA As Decimal,  _
                    ByVal SEMILLA_QQ_TOTAL As Decimal,  _
                    ByVal OBSERVACIONES As String,  _
                    ByVal TARA As Decimal,  _
                    ByVal CICLO_ACTA As String,  _
                    ByVal PESO_NETO As Decimal,  _
                    ByVal PESO_LB As Decimal,  _
                    ByVal LOTE_REGISTRADO As String,  _
                    ByVal CATEGORIA_REGISTRADO As String,  _
                    ByVal ACTA_FIRMADA() As Byte,  _
                    ByVal FICHA_FIRMADO() As Byte,  _
                    ByVal CUADRO_FIRMADO() As Byte,  _
                    ByVal archivo_lote_senasa() As Byte,  _
                    ByVal RENDIMIETO_ORO_PESO As Decimal,  _
                    ByVal id As Integer,  _
                    ByVal decha_elaboracion_g As Date,  _
                    ByVal no_envase As String,  _
                    ByVal peso_inicial_g As Decimal,  _
                    ByVal tipo_granel As String,  _
                    ByVal fecha_recibo_g As Date,  _
                    ByVal fecha_muestreo_g As Date,  _
                    ByVal humedad_final As Decimal,  _
                    ByVal fecha_evaluacion_g As Date,  _
                    ByVal tipo_envase As String,  _
                    ByVal fase_g As String,  _
                    ByVal tamano_maiz As String,  _
                    ByVal cantidad_inicial As Decimal,  _
                    ByVal cantidad_existente As Decimal,  _
                    ByVal no_camara As String,  _
                    ByVal perimetro As Decimal,  _
                    ByVal certisem As Decimal,  _
                    ByVal fecha_certisem As Date,  _
                    ByVal planta_g As String,  _
                    ByVal fecha_planta_g As Date,  _
                    ByVal semilla_pura As Decimal,  _
                    ByVal semilla_otro_cultivo As Decimal,  _
                    ByVal semilla_maleza As Decimal,  _
                    ByVal materia_inerte As Decimal,  _
                    ByVal plantulas_normales_1 As Integer,  _
                    ByVal plantulas_anormales_1 As Integer,  _
                    ByVal semilla_muerta_1 As Integer,  _
                    ByVal semillas_duras_1 As Integer,  _
                    ByVal semillas_debiles_1 As Integer,  _
                    ByVal semilla_mezcla_1 As Integer,  _
                    ByVal no_dias_1 As Integer,  _
                    ByVal plantulas_normales_2 As Integer,  _
                    ByVal plantulas_anormales_2 As Integer,  _
                    ByVal semilla_muerta_2 As Integer,  _
                    ByVal semillas_duras_2 As Integer,  _
                    ByVal semillas_debiles_2 As Integer,  _
                    ByVal semilla_mezcla_2 As Integer,  _
                    ByVal no_dias_2 As Integer,  _
                    ByVal plantulas_normales_3 As Integer,  _
                    ByVal plantulas_anormales_3 As Integer,  _
                    ByVal semilla_muerta_3 As Integer,  _
                    ByVal semillas_duras_3 As Integer,  _
                    ByVal semillas_debiles_3 As Integer,  _
                    ByVal semilla_mezcla_3 As Integer,  _
                    ByVal no_dias_3 As Integer,  _
                    ByVal plantulas_normales_4 As Integer,  _
                    ByVal plantulas_anormales_4 As Integer,  _
                    ByVal semilla_muerta_4 As Integer,  _
                    ByVal semillas_duras_4 As Integer,  _
                    ByVal semillas_debiles_4 As Integer,  _
                    ByVal semilla_mezcla_4 As Integer,  _
                    ByVal no_dias_4 As Integer,  _
                    ByVal plantulas_normales_total As Integer,  _
                    ByVal plantulas_anormales_total As Integer,  _
                    ByVal semilla_muerta_total As Integer,  _
                    ByVal semillas_duras_total As Integer,  _
                    ByVal semillas_debiles_total As Integer,  _
                    ByVal semilla_mezcla_total As Integer,  _
                    ByVal no_dias_total As Integer,  _
                    ByVal porcentaje_germnimacion As Decimal,  _
                    ByVal observaciones_g As String,  _
                    ByVal responsable_muestreo As String,  _
                    ByVal responsable_analisis As String,  _
                    ByVal estado As String,  _
                    ByVal decision As String,  _
                    ByVal id_2 As Integer,  _
                    ByVal germinacion_firmada() As Byte) As vista_acta_lote_multi_germRow
            Dim rowvista_acta_lote_multi_germRow As vista_acta_lote_multi_germRow = CType(Me.NewRow,vista_acta_lote_multi_germRow)
            Dim columnValuesArray() As Object = New Object() {ID_MULTI, NOMBRE_MULTIPLICADOR, REPRESENTANTE_LEGAL, TELEFONO_MULTIPLICADOR, DEPARTAMENTO, MUNICIPIO, ALDEA, CASERIO, ESTADO_MULTI, ID_LOTE, CATEGORIA_ORIGEN, TIPO_CULTIVO, VARIEDAD, PRODUCTOR, NO_LOTE, ESTADO_LOTE, ANO_PRODU, TIPO_SEMILLA, ID_ACTA, FECHA_ACTA, PORCENTAJE_HUMEDAD, ESTADO_SENA, NO_SACOS, PESO_HUMEDO_QQ, PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD, SEMILLA_QQ_ORO, SEMILLA_QQ_CONSUMO, SEMILLA_QQ_BASURA, SEMILLA_QQ_TOTAL, OBSERVACIONES, TARA, CICLO_ACTA, PESO_NETO, PESO_LB, LOTE_REGISTRADO, CATEGORIA_REGISTRADO, ACTA_FIRMADA, FICHA_FIRMADO, CUADRO_FIRMADO, archivo_lote_senasa, RENDIMIETO_ORO_PESO, id, decha_elaboracion_g, no_envase, peso_inicial_g, tipo_granel, fecha_recibo_g, fecha_muestreo_g, humedad_final, fecha_evaluacion_g, tipo_envase, fase_g, tamano_maiz, cantidad_inicial, cantidad_existente, no_camara, perimetro, certisem, fecha_certisem, planta_g, fecha_planta_g, semilla_pura, semilla_otro_cultivo, semilla_maleza, materia_inerte, plantulas_normales_1, plantulas_anormales_1, semilla_muerta_1, semillas_duras_1, semillas_debiles_1, semilla_mezcla_1, no_dias_1, plantulas_normales_2, plantulas_anormales_2, semilla_muerta_2, semillas_duras_2, semillas_debiles_2, semilla_mezcla_2, no_dias_2, plantulas_normales_3, plantulas_anormales_3, semilla_muerta_3, semillas_duras_3, semillas_debiles_3, semilla_mezcla_3, no_dias_3, plantulas_normales_4, plantulas_anormales_4, semilla_muerta_4, semillas_duras_4, semillas_debiles_4, semilla_mezcla_4, no_dias_4, plantulas_normales_total, plantulas_anormales_total, semilla_muerta_total, semillas_duras_total, semillas_debiles_total, semilla_mezcla_total, no_dias_total, porcentaje_germnimacion, observaciones_g, responsable_muestreo, responsable_analisis, estado, decision, id_2, germinacion_firmada}
            rowvista_acta_lote_multi_germRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvista_acta_lote_multi_germRow)
            Return rowvista_acta_lote_multi_germRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vista_acta_lote_multi_germDataTable = CType(MyBase.Clone,vista_acta_lote_multi_germDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vista_acta_lote_multi_germDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_MULTI = MyBase.Columns("ID_MULTI")
            Me.columnNOMBRE_MULTIPLICADOR = MyBase.Columns("NOMBRE_MULTIPLICADOR")
            Me.columnREPRESENTANTE_LEGAL = MyBase.Columns("REPRESENTANTE_LEGAL")
            Me.columnTELEFONO_MULTIPLICADOR = MyBase.Columns("TELEFONO_MULTIPLICADOR")
            Me.columnDEPARTAMENTO = MyBase.Columns("DEPARTAMENTO")
            Me.columnMUNICIPIO = MyBase.Columns("MUNICIPIO")
            Me.columnALDEA = MyBase.Columns("ALDEA")
            Me.columnCASERIO = MyBase.Columns("CASERIO")
            Me.columnESTADO_MULTI = MyBase.Columns("ESTADO_MULTI")
            Me.columnID_LOTE = MyBase.Columns("ID_LOTE")
            Me.columnCATEGORIA_ORIGEN = MyBase.Columns("CATEGORIA_ORIGEN")
            Me.columnTIPO_CULTIVO = MyBase.Columns("TIPO_CULTIVO")
            Me.columnVARIEDAD = MyBase.Columns("VARIEDAD")
            Me.columnPRODUCTOR = MyBase.Columns("PRODUCTOR")
            Me.columnNO_LOTE = MyBase.Columns("NO_LOTE")
            Me.columnESTADO_LOTE = MyBase.Columns("ESTADO_LOTE")
            Me.columnANO_PRODU = MyBase.Columns("ANO_PRODU")
            Me.columnTIPO_SEMILLA = MyBase.Columns("TIPO_SEMILLA")
            Me.columnID_ACTA = MyBase.Columns("ID_ACTA")
            Me.columnFECHA_ACTA = MyBase.Columns("FECHA_ACTA")
            Me.columnPORCENTAJE_HUMEDAD = MyBase.Columns("PORCENTAJE_HUMEDAD")
            Me.columnESTADO_SENA = MyBase.Columns("ESTADO_SENA")
            Me.columnNO_SACOS = MyBase.Columns("NO_SACOS")
            Me.columnPESO_HUMEDO_QQ = MyBase.Columns("PESO_HUMEDO_QQ")
            Me.columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD = MyBase.Columns("PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD")
            Me.columnSEMILLA_QQ_ORO = MyBase.Columns("SEMILLA_QQ_ORO")
            Me.columnSEMILLA_QQ_CONSUMO = MyBase.Columns("SEMILLA_QQ_CONSUMO")
            Me.columnSEMILLA_QQ_BASURA = MyBase.Columns("SEMILLA_QQ_BASURA")
            Me.columnSEMILLA_QQ_TOTAL = MyBase.Columns("SEMILLA_QQ_TOTAL")
            Me.columnOBSERVACIONES = MyBase.Columns("OBSERVACIONES")
            Me.columnTARA = MyBase.Columns("TARA")
            Me.columnCICLO_ACTA = MyBase.Columns("CICLO_ACTA")
            Me.columnPESO_NETO = MyBase.Columns("PESO_NETO")
            Me.columnPESO_LB = MyBase.Columns("PESO_LB")
            Me.columnLOTE_REGISTRADO = MyBase.Columns("LOTE_REGISTRADO")
            Me.columnCATEGORIA_REGISTRADO = MyBase.Columns("CATEGORIA_REGISTRADO")
            Me.columnACTA_FIRMADA = MyBase.Columns("ACTA_FIRMADA")
            Me.columnFICHA_FIRMADO = MyBase.Columns("FICHA_FIRMADO")
            Me.columnCUADRO_FIRMADO = MyBase.Columns("CUADRO_FIRMADO")
            Me.columnarchivo_lote_senasa = MyBase.Columns("archivo_lote_senasa")
            Me.columnRENDIMIETO_ORO_PESO = MyBase.Columns("RENDIMIETO_ORO_PESO")
            Me.columnid = MyBase.Columns("id")
            Me.columndecha_elaboracion_g = MyBase.Columns("decha_elaboracion_g")
            Me.columnno_envase = MyBase.Columns("no_envase")
            Me.columnpeso_inicial_g = MyBase.Columns("peso_inicial_g")
            Me.columntipo_granel = MyBase.Columns("tipo_granel")
            Me.columnfecha_recibo_g = MyBase.Columns("fecha_recibo_g")
            Me.columnfecha_muestreo_g = MyBase.Columns("fecha_muestreo_g")
            Me.columnhumedad_final = MyBase.Columns("humedad_final")
            Me.columnfecha_evaluacion_g = MyBase.Columns("fecha_evaluacion_g")
            Me.columntipo_envase = MyBase.Columns("tipo_envase")
            Me.columnfase_g = MyBase.Columns("fase_g")
            Me.columntamano_maiz = MyBase.Columns("tamano_maiz")
            Me.columncantidad_inicial = MyBase.Columns("cantidad_inicial")
            Me.columncantidad_existente = MyBase.Columns("cantidad_existente")
            Me.columnno_camara = MyBase.Columns("no_camara")
            Me.columnperimetro = MyBase.Columns("perimetro")
            Me.columncertisem = MyBase.Columns("certisem")
            Me.columnfecha_certisem = MyBase.Columns("fecha_certisem")
            Me.columnplanta_g = MyBase.Columns("planta_g")
            Me.columnfecha_planta_g = MyBase.Columns("fecha_planta_g")
            Me.columnsemilla_pura = MyBase.Columns("semilla_pura")
            Me.columnsemilla_otro_cultivo = MyBase.Columns("semilla_otro_cultivo")
            Me.columnsemilla_maleza = MyBase.Columns("semilla_maleza")
            Me.columnmateria_inerte = MyBase.Columns("materia_inerte")
            Me.columnplantulas_normales_1 = MyBase.Columns("plantulas_normales_1")
            Me.columnplantulas_anormales_1 = MyBase.Columns("plantulas_anormales_1")
            Me.columnsemilla_muerta_1 = MyBase.Columns("semilla_muerta_1")
            Me.columnsemillas_duras_1 = MyBase.Columns("semillas_duras_1")
            Me.columnsemillas_debiles_1 = MyBase.Columns("semillas_debiles_1")
            Me.columnsemilla_mezcla_1 = MyBase.Columns("semilla_mezcla_1")
            Me.columnno_dias_1 = MyBase.Columns("no_dias_1")
            Me.columnplantulas_normales_2 = MyBase.Columns("plantulas_normales_2")
            Me.columnplantulas_anormales_2 = MyBase.Columns("plantulas_anormales_2")
            Me.columnsemilla_muerta_2 = MyBase.Columns("semilla_muerta_2")
            Me.columnsemillas_duras_2 = MyBase.Columns("semillas_duras_2")
            Me.columnsemillas_debiles_2 = MyBase.Columns("semillas_debiles_2")
            Me.columnsemilla_mezcla_2 = MyBase.Columns("semilla_mezcla_2")
            Me.columnno_dias_2 = MyBase.Columns("no_dias_2")
            Me.columnplantulas_normales_3 = MyBase.Columns("plantulas_normales_3")
            Me.columnplantulas_anormales_3 = MyBase.Columns("plantulas_anormales_3")
            Me.columnsemilla_muerta_3 = MyBase.Columns("semilla_muerta_3")
            Me.columnsemillas_duras_3 = MyBase.Columns("semillas_duras_3")
            Me.columnsemillas_debiles_3 = MyBase.Columns("semillas_debiles_3")
            Me.columnsemilla_mezcla_3 = MyBase.Columns("semilla_mezcla_3")
            Me.columnno_dias_3 = MyBase.Columns("no_dias_3")
            Me.columnplantulas_normales_4 = MyBase.Columns("plantulas_normales_4")
            Me.columnplantulas_anormales_4 = MyBase.Columns("plantulas_anormales_4")
            Me.columnsemilla_muerta_4 = MyBase.Columns("semilla_muerta_4")
            Me.columnsemillas_duras_4 = MyBase.Columns("semillas_duras_4")
            Me.columnsemillas_debiles_4 = MyBase.Columns("semillas_debiles_4")
            Me.columnsemilla_mezcla_4 = MyBase.Columns("semilla_mezcla_4")
            Me.columnno_dias_4 = MyBase.Columns("no_dias_4")
            Me.columnplantulas_normales_total = MyBase.Columns("plantulas_normales_total")
            Me.columnplantulas_anormales_total = MyBase.Columns("plantulas_anormales_total")
            Me.columnsemilla_muerta_total = MyBase.Columns("semilla_muerta_total")
            Me.columnsemillas_duras_total = MyBase.Columns("semillas_duras_total")
            Me.columnsemillas_debiles_total = MyBase.Columns("semillas_debiles_total")
            Me.columnsemilla_mezcla_total = MyBase.Columns("semilla_mezcla_total")
            Me.columnno_dias_total = MyBase.Columns("no_dias_total")
            Me.columnporcentaje_germnimacion = MyBase.Columns("porcentaje_germnimacion")
            Me.columnobservaciones_g = MyBase.Columns("observaciones_g")
            Me.columnresponsable_muestreo = MyBase.Columns("responsable_muestreo")
            Me.columnresponsable_analisis = MyBase.Columns("responsable_analisis")
            Me.columnestado = MyBase.Columns("estado")
            Me.columndecision = MyBase.Columns("decision")
            Me.columnid_2 = MyBase.Columns("id_2")
            Me.columngerminacion_firmada = MyBase.Columns("germinacion_firmada")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_MULTI = New Global.System.Data.DataColumn("ID_MULTI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_MULTI)
            Me.columnNOMBRE_MULTIPLICADOR = New Global.System.Data.DataColumn("NOMBRE_MULTIPLICADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_MULTIPLICADOR)
            Me.columnREPRESENTANTE_LEGAL = New Global.System.Data.DataColumn("REPRESENTANTE_LEGAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPRESENTANTE_LEGAL)
            Me.columnTELEFONO_MULTIPLICADOR = New Global.System.Data.DataColumn("TELEFONO_MULTIPLICADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_MULTIPLICADOR)
            Me.columnDEPARTAMENTO = New Global.System.Data.DataColumn("DEPARTAMENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPARTAMENTO)
            Me.columnMUNICIPIO = New Global.System.Data.DataColumn("MUNICIPIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNICIPIO)
            Me.columnALDEA = New Global.System.Data.DataColumn("ALDEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALDEA)
            Me.columnCASERIO = New Global.System.Data.DataColumn("CASERIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASERIO)
            Me.columnESTADO_MULTI = New Global.System.Data.DataColumn("ESTADO_MULTI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_MULTI)
            Me.columnID_LOTE = New Global.System.Data.DataColumn("ID_LOTE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_LOTE)
            Me.columnCATEGORIA_ORIGEN = New Global.System.Data.DataColumn("CATEGORIA_ORIGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORIA_ORIGEN)
            Me.columnTIPO_CULTIVO = New Global.System.Data.DataColumn("TIPO_CULTIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CULTIVO)
            Me.columnVARIEDAD = New Global.System.Data.DataColumn("VARIEDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVARIEDAD)
            Me.columnPRODUCTOR = New Global.System.Data.DataColumn("PRODUCTOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTOR)
            Me.columnNO_LOTE = New Global.System.Data.DataColumn("NO_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_LOTE)
            Me.columnESTADO_LOTE = New Global.System.Data.DataColumn("ESTADO_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_LOTE)
            Me.columnANO_PRODU = New Global.System.Data.DataColumn("ANO_PRODU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANO_PRODU)
            Me.columnTIPO_SEMILLA = New Global.System.Data.DataColumn("TIPO_SEMILLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_SEMILLA)
            Me.columnID_ACTA = New Global.System.Data.DataColumn("ID_ACTA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_ACTA)
            Me.columnFECHA_ACTA = New Global.System.Data.DataColumn("FECHA_ACTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ACTA)
            Me.columnPORCENTAJE_HUMEDAD = New Global.System.Data.DataColumn("PORCENTAJE_HUMEDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORCENTAJE_HUMEDAD)
            Me.columnESTADO_SENA = New Global.System.Data.DataColumn("ESTADO_SENA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_SENA)
            Me.columnNO_SACOS = New Global.System.Data.DataColumn("NO_SACOS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_SACOS)
            Me.columnPESO_HUMEDO_QQ = New Global.System.Data.DataColumn("PESO_HUMEDO_QQ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_HUMEDO_QQ)
            Me.columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD = New Global.System.Data.DataColumn("PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD)
            Me.columnSEMILLA_QQ_ORO = New Global.System.Data.DataColumn("SEMILLA_QQ_ORO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_QQ_ORO)
            Me.columnSEMILLA_QQ_CONSUMO = New Global.System.Data.DataColumn("SEMILLA_QQ_CONSUMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_QQ_CONSUMO)
            Me.columnSEMILLA_QQ_BASURA = New Global.System.Data.DataColumn("SEMILLA_QQ_BASURA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_QQ_BASURA)
            Me.columnSEMILLA_QQ_TOTAL = New Global.System.Data.DataColumn("SEMILLA_QQ_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_QQ_TOTAL)
            Me.columnOBSERVACIONES = New Global.System.Data.DataColumn("OBSERVACIONES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACIONES)
            Me.columnTARA = New Global.System.Data.DataColumn("TARA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARA)
            Me.columnCICLO_ACTA = New Global.System.Data.DataColumn("CICLO_ACTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCICLO_ACTA)
            Me.columnPESO_NETO = New Global.System.Data.DataColumn("PESO_NETO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_NETO)
            Me.columnPESO_LB = New Global.System.Data.DataColumn("PESO_LB", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_LB)
            Me.columnLOTE_REGISTRADO = New Global.System.Data.DataColumn("LOTE_REGISTRADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOTE_REGISTRADO)
            Me.columnCATEGORIA_REGISTRADO = New Global.System.Data.DataColumn("CATEGORIA_REGISTRADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORIA_REGISTRADO)
            Me.columnACTA_FIRMADA = New Global.System.Data.DataColumn("ACTA_FIRMADA", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTA_FIRMADA)
            Me.columnFICHA_FIRMADO = New Global.System.Data.DataColumn("FICHA_FIRMADO", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFICHA_FIRMADO)
            Me.columnCUADRO_FIRMADO = New Global.System.Data.DataColumn("CUADRO_FIRMADO", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUADRO_FIRMADO)
            Me.columnarchivo_lote_senasa = New Global.System.Data.DataColumn("archivo_lote_senasa", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnarchivo_lote_senasa)
            Me.columnRENDIMIETO_ORO_PESO = New Global.System.Data.DataColumn("RENDIMIETO_ORO_PESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRENDIMIETO_ORO_PESO)
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columndecha_elaboracion_g = New Global.System.Data.DataColumn("decha_elaboracion_g", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecha_elaboracion_g)
            Me.columnno_envase = New Global.System.Data.DataColumn("no_envase", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_envase)
            Me.columnpeso_inicial_g = New Global.System.Data.DataColumn("peso_inicial_g", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpeso_inicial_g)
            Me.columntipo_granel = New Global.System.Data.DataColumn("tipo_granel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo_granel)
            Me.columnfecha_recibo_g = New Global.System.Data.DataColumn("fecha_recibo_g", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_recibo_g)
            Me.columnfecha_muestreo_g = New Global.System.Data.DataColumn("fecha_muestreo_g", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_muestreo_g)
            Me.columnhumedad_final = New Global.System.Data.DataColumn("humedad_final", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhumedad_final)
            Me.columnfecha_evaluacion_g = New Global.System.Data.DataColumn("fecha_evaluacion_g", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_evaluacion_g)
            Me.columntipo_envase = New Global.System.Data.DataColumn("tipo_envase", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo_envase)
            Me.columnfase_g = New Global.System.Data.DataColumn("fase_g", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfase_g)
            Me.columntamano_maiz = New Global.System.Data.DataColumn("tamano_maiz", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntamano_maiz)
            Me.columncantidad_inicial = New Global.System.Data.DataColumn("cantidad_inicial", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncantidad_inicial)
            Me.columncantidad_existente = New Global.System.Data.DataColumn("cantidad_existente", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncantidad_existente)
            Me.columnno_camara = New Global.System.Data.DataColumn("no_camara", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_camara)
            Me.columnperimetro = New Global.System.Data.DataColumn("perimetro", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperimetro)
            Me.columncertisem = New Global.System.Data.DataColumn("certisem", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncertisem)
            Me.columnfecha_certisem = New Global.System.Data.DataColumn("fecha_certisem", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_certisem)
            Me.columnplanta_g = New Global.System.Data.DataColumn("planta_g", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplanta_g)
            Me.columnfecha_planta_g = New Global.System.Data.DataColumn("fecha_planta_g", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_planta_g)
            Me.columnsemilla_pura = New Global.System.Data.DataColumn("semilla_pura", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_pura)
            Me.columnsemilla_otro_cultivo = New Global.System.Data.DataColumn("semilla_otro_cultivo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_otro_cultivo)
            Me.columnsemilla_maleza = New Global.System.Data.DataColumn("semilla_maleza", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_maleza)
            Me.columnmateria_inerte = New Global.System.Data.DataColumn("materia_inerte", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmateria_inerte)
            Me.columnplantulas_normales_1 = New Global.System.Data.DataColumn("plantulas_normales_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplantulas_normales_1)
            Me.columnplantulas_anormales_1 = New Global.System.Data.DataColumn("plantulas_anormales_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplantulas_anormales_1)
            Me.columnsemilla_muerta_1 = New Global.System.Data.DataColumn("semilla_muerta_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_muerta_1)
            Me.columnsemillas_duras_1 = New Global.System.Data.DataColumn("semillas_duras_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemillas_duras_1)
            Me.columnsemillas_debiles_1 = New Global.System.Data.DataColumn("semillas_debiles_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemillas_debiles_1)
            Me.columnsemilla_mezcla_1 = New Global.System.Data.DataColumn("semilla_mezcla_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_mezcla_1)
            Me.columnno_dias_1 = New Global.System.Data.DataColumn("no_dias_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_dias_1)
            Me.columnplantulas_normales_2 = New Global.System.Data.DataColumn("plantulas_normales_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplantulas_normales_2)
            Me.columnplantulas_anormales_2 = New Global.System.Data.DataColumn("plantulas_anormales_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplantulas_anormales_2)
            Me.columnsemilla_muerta_2 = New Global.System.Data.DataColumn("semilla_muerta_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_muerta_2)
            Me.columnsemillas_duras_2 = New Global.System.Data.DataColumn("semillas_duras_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemillas_duras_2)
            Me.columnsemillas_debiles_2 = New Global.System.Data.DataColumn("semillas_debiles_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemillas_debiles_2)
            Me.columnsemilla_mezcla_2 = New Global.System.Data.DataColumn("semilla_mezcla_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_mezcla_2)
            Me.columnno_dias_2 = New Global.System.Data.DataColumn("no_dias_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_dias_2)
            Me.columnplantulas_normales_3 = New Global.System.Data.DataColumn("plantulas_normales_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplantulas_normales_3)
            Me.columnplantulas_anormales_3 = New Global.System.Data.DataColumn("plantulas_anormales_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplantulas_anormales_3)
            Me.columnsemilla_muerta_3 = New Global.System.Data.DataColumn("semilla_muerta_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_muerta_3)
            Me.columnsemillas_duras_3 = New Global.System.Data.DataColumn("semillas_duras_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemillas_duras_3)
            Me.columnsemillas_debiles_3 = New Global.System.Data.DataColumn("semillas_debiles_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemillas_debiles_3)
            Me.columnsemilla_mezcla_3 = New Global.System.Data.DataColumn("semilla_mezcla_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_mezcla_3)
            Me.columnno_dias_3 = New Global.System.Data.DataColumn("no_dias_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_dias_3)
            Me.columnplantulas_normales_4 = New Global.System.Data.DataColumn("plantulas_normales_4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplantulas_normales_4)
            Me.columnplantulas_anormales_4 = New Global.System.Data.DataColumn("plantulas_anormales_4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplantulas_anormales_4)
            Me.columnsemilla_muerta_4 = New Global.System.Data.DataColumn("semilla_muerta_4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_muerta_4)
            Me.columnsemillas_duras_4 = New Global.System.Data.DataColumn("semillas_duras_4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemillas_duras_4)
            Me.columnsemillas_debiles_4 = New Global.System.Data.DataColumn("semillas_debiles_4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemillas_debiles_4)
            Me.columnsemilla_mezcla_4 = New Global.System.Data.DataColumn("semilla_mezcla_4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_mezcla_4)
            Me.columnno_dias_4 = New Global.System.Data.DataColumn("no_dias_4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_dias_4)
            Me.columnplantulas_normales_total = New Global.System.Data.DataColumn("plantulas_normales_total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplantulas_normales_total)
            Me.columnplantulas_anormales_total = New Global.System.Data.DataColumn("plantulas_anormales_total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplantulas_anormales_total)
            Me.columnsemilla_muerta_total = New Global.System.Data.DataColumn("semilla_muerta_total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_muerta_total)
            Me.columnsemillas_duras_total = New Global.System.Data.DataColumn("semillas_duras_total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemillas_duras_total)
            Me.columnsemillas_debiles_total = New Global.System.Data.DataColumn("semillas_debiles_total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemillas_debiles_total)
            Me.columnsemilla_mezcla_total = New Global.System.Data.DataColumn("semilla_mezcla_total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsemilla_mezcla_total)
            Me.columnno_dias_total = New Global.System.Data.DataColumn("no_dias_total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_dias_total)
            Me.columnporcentaje_germnimacion = New Global.System.Data.DataColumn("porcentaje_germnimacion", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnporcentaje_germnimacion)
            Me.columnobservaciones_g = New Global.System.Data.DataColumn("observaciones_g", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobservaciones_g)
            Me.columnresponsable_muestreo = New Global.System.Data.DataColumn("responsable_muestreo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnresponsable_muestreo)
            Me.columnresponsable_analisis = New Global.System.Data.DataColumn("responsable_analisis", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnresponsable_analisis)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columndecision = New Global.System.Data.DataColumn("decision", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecision)
            Me.columnid_2 = New Global.System.Data.DataColumn("id_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_2)
            Me.columngerminacion_firmada = New Global.System.Data.DataColumn("germinacion_firmada", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngerminacion_firmada)
            Me.columnID_MULTI.AllowDBNull = false
            Me.columnNOMBRE_MULTIPLICADOR.MaxLength = 100
            Me.columnREPRESENTANTE_LEGAL.MaxLength = 100
            Me.columnTELEFONO_MULTIPLICADOR.MaxLength = 100
            Me.columnDEPARTAMENTO.MaxLength = 100
            Me.columnMUNICIPIO.MaxLength = 100
            Me.columnALDEA.MaxLength = 100
            Me.columnCASERIO.MaxLength = 100
            Me.columnESTADO_MULTI.MaxLength = 2
            Me.columnID_LOTE.AllowDBNull = false
            Me.columnCATEGORIA_ORIGEN.MaxLength = 100
            Me.columnTIPO_CULTIVO.MaxLength = 100
            Me.columnVARIEDAD.MaxLength = 100
            Me.columnPRODUCTOR.MaxLength = 100
            Me.columnNO_LOTE.MaxLength = 100
            Me.columnESTADO_LOTE.MaxLength = 2
            Me.columnANO_PRODU.MaxLength = 20
            Me.columnTIPO_SEMILLA.MaxLength = 100
            Me.columnID_ACTA.AllowDBNull = false
            Me.columnESTADO_SENA.MaxLength = 2
            Me.columnOBSERVACIONES.MaxLength = 2000
            Me.columnCICLO_ACTA.MaxLength = 20
            Me.columnLOTE_REGISTRADO.MaxLength = 255
            Me.columnCATEGORIA_REGISTRADO.MaxLength = 255
            Me.columnno_envase.MaxLength = 50
            Me.columntipo_granel.MaxLength = 50
            Me.columntipo_envase.MaxLength = 50
            Me.columnfase_g.MaxLength = 50
            Me.columntamano_maiz.MaxLength = 10
            Me.columnno_camara.MaxLength = 10
            Me.columnplanta_g.MaxLength = 100
            Me.columnobservaciones_g.MaxLength = 500
            Me.columnresponsable_muestreo.MaxLength = 100
            Me.columnresponsable_analisis.MaxLength = 100
            Me.columnestado.MaxLength = 2
            Me.columndecision.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newvista_acta_lote_multi_germRow() As vista_acta_lote_multi_germRow
            Return CType(Me.NewRow,vista_acta_lote_multi_germRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vista_acta_lote_multi_germRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vista_acta_lote_multi_germRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vista_acta_lote_multi_germRowChangedEvent) Is Nothing) Then
                RaiseEvent vista_acta_lote_multi_germRowChanged(Me, New vista_acta_lote_multi_germRowChangeEvent(CType(e.Row,vista_acta_lote_multi_germRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vista_acta_lote_multi_germRowChangingEvent) Is Nothing) Then
                RaiseEvent vista_acta_lote_multi_germRowChanging(Me, New vista_acta_lote_multi_germRowChangeEvent(CType(e.Row,vista_acta_lote_multi_germRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vista_acta_lote_multi_germRowDeletedEvent) Is Nothing) Then
                RaiseEvent vista_acta_lote_multi_germRowDeleted(Me, New vista_acta_lote_multi_germRowChangeEvent(CType(e.Row,vista_acta_lote_multi_germRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vista_acta_lote_multi_germRowDeletingEvent) Is Nothing) Then
                RaiseEvent vista_acta_lote_multi_germRowDeleting(Me, New vista_acta_lote_multi_germRowChangeEvent(CType(e.Row,vista_acta_lote_multi_germRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removevista_acta_lote_multi_germRow(ByVal row As vista_acta_lote_multi_germRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetMultiplicador = New DataSetMultiplicador()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vista_acta_lote_multi_germDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vista_inventarioDataTable
        Inherits Global.System.Data.TypedTableBase(Of vista_inventarioRow)
        
        Private columnfecha_acta As Global.System.Data.DataColumn
        
        Private columncategoria_registrado As Global.System.Data.DataColumn
        
        Private columntipo_cultivo As Global.System.Data.DataColumn
        
        Private columnlote_registrado As Global.System.Data.DataColumn
        
        Private columnprocedencia As Global.System.Data.DataColumn
        
        Private columnnombre_multiplicador As Global.System.Data.DataColumn
        
        Private columnhumedad_final As Global.System.Data.DataColumn
        
        Private columnfase_g As Global.System.Data.DataColumn
        
        Private columnvariedad As Global.System.Data.DataColumn
        
        Private columnpeso_neto_resta As Global.System.Data.DataColumn
        
        Private columnentrada As Global.System.Data.DataColumn
        
        Private columnsalida As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vista_inventario"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_actaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_acta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property categoria_registradoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategoria_registrado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipo_cultivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo_cultivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property lote_registradoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlote_registrado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property procedenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprocedencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property humedad_finalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhumedad_final
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fase_gColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfase_g
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property variedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvariedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property peso_neto_restaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpeso_neto_resta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property entradaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentrada
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property salidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsalida
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vista_inventarioRow
            Get
                Return CType(Me.Rows(index),vista_inventarioRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_inventarioRowChanging As vista_inventarioRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_inventarioRowChanged As vista_inventarioRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_inventarioRowDeleting As vista_inventarioRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_inventarioRowDeleted As vista_inventarioRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addvista_inventarioRow(ByVal row As vista_inventarioRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addvista_inventarioRow(ByVal fecha_acta As Date, ByVal categoria_registrado As String, ByVal tipo_cultivo As String, ByVal lote_registrado As String, ByVal procedencia As String, ByVal nombre_multiplicador As String, ByVal humedad_final As Decimal, ByVal fase_g As String, ByVal variedad As String, ByVal peso_neto_resta As Decimal, ByVal entrada As Decimal, ByVal salida As Decimal) As vista_inventarioRow
            Dim rowvista_inventarioRow As vista_inventarioRow = CType(Me.NewRow,vista_inventarioRow)
            Dim columnValuesArray() As Object = New Object() {fecha_acta, categoria_registrado, tipo_cultivo, lote_registrado, procedencia, nombre_multiplicador, humedad_final, fase_g, variedad, peso_neto_resta, entrada, salida}
            rowvista_inventarioRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvista_inventarioRow)
            Return rowvista_inventarioRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vista_inventarioDataTable = CType(MyBase.Clone,vista_inventarioDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vista_inventarioDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnfecha_acta = MyBase.Columns("fecha_acta")
            Me.columncategoria_registrado = MyBase.Columns("categoria_registrado")
            Me.columntipo_cultivo = MyBase.Columns("tipo_cultivo")
            Me.columnlote_registrado = MyBase.Columns("lote_registrado")
            Me.columnprocedencia = MyBase.Columns("procedencia")
            Me.columnnombre_multiplicador = MyBase.Columns("nombre_multiplicador")
            Me.columnhumedad_final = MyBase.Columns("humedad_final")
            Me.columnfase_g = MyBase.Columns("fase_g")
            Me.columnvariedad = MyBase.Columns("variedad")
            Me.columnpeso_neto_resta = MyBase.Columns("peso_neto_resta")
            Me.columnentrada = MyBase.Columns("entrada")
            Me.columnsalida = MyBase.Columns("salida")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnfecha_acta = New Global.System.Data.DataColumn("fecha_acta", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_acta)
            Me.columncategoria_registrado = New Global.System.Data.DataColumn("categoria_registrado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategoria_registrado)
            Me.columntipo_cultivo = New Global.System.Data.DataColumn("tipo_cultivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo_cultivo)
            Me.columnlote_registrado = New Global.System.Data.DataColumn("lote_registrado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlote_registrado)
            Me.columnprocedencia = New Global.System.Data.DataColumn("procedencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprocedencia)
            Me.columnnombre_multiplicador = New Global.System.Data.DataColumn("nombre_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_multiplicador)
            Me.columnhumedad_final = New Global.System.Data.DataColumn("humedad_final", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhumedad_final)
            Me.columnfase_g = New Global.System.Data.DataColumn("fase_g", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfase_g)
            Me.columnvariedad = New Global.System.Data.DataColumn("variedad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvariedad)
            Me.columnpeso_neto_resta = New Global.System.Data.DataColumn("peso_neto_resta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpeso_neto_resta)
            Me.columnentrada = New Global.System.Data.DataColumn("entrada", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentrada)
            Me.columnsalida = New Global.System.Data.DataColumn("salida", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsalida)
            Me.columncategoria_registrado.MaxLength = 255
            Me.columntipo_cultivo.MaxLength = 100
            Me.columnlote_registrado.MaxLength = 255
            Me.columnprocedencia.MaxLength = 202
            Me.columnnombre_multiplicador.MaxLength = 100
            Me.columnfase_g.MaxLength = 50
            Me.columnvariedad.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newvista_inventarioRow() As vista_inventarioRow
            Return CType(Me.NewRow,vista_inventarioRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vista_inventarioRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vista_inventarioRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vista_inventarioRowChangedEvent) Is Nothing) Then
                RaiseEvent vista_inventarioRowChanged(Me, New vista_inventarioRowChangeEvent(CType(e.Row,vista_inventarioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vista_inventarioRowChangingEvent) Is Nothing) Then
                RaiseEvent vista_inventarioRowChanging(Me, New vista_inventarioRowChangeEvent(CType(e.Row,vista_inventarioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vista_inventarioRowDeletedEvent) Is Nothing) Then
                RaiseEvent vista_inventarioRowDeleted(Me, New vista_inventarioRowChangeEvent(CType(e.Row,vista_inventarioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vista_inventarioRowDeletingEvent) Is Nothing) Then
                RaiseEvent vista_inventarioRowDeleting(Me, New vista_inventarioRowChangeEvent(CType(e.Row,vista_inventarioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removevista_inventarioRow(ByVal row As vista_inventarioRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetMultiplicador = New DataSetMultiplicador()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vista_inventarioDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vista_inventario_informeDataTable
        Inherits Global.System.Data.TypedTableBase(Of vista_inventario_informeRow)
        
        Private columncategoria_registrado As Global.System.Data.DataColumn
        
        Private columntipo_cultivo As Global.System.Data.DataColumn
        
        Private columnvariedad As Global.System.Data.DataColumn
        
        Private columnpeso_neto_resta As Global.System.Data.DataColumn
        
        Private columnentrada As Global.System.Data.DataColumn
        
        Private columnsalida As Global.System.Data.DataColumn
        
        Private columnprecio As Global.System.Data.DataColumn
        
        Private columnvalor_neto_resta As Global.System.Data.DataColumn
        
        Private columnfase_g As Global.System.Data.DataColumn
        
        Private columnnombre_multiplicador As Global.System.Data.DataColumn
        
        Private columnprocedencia As Global.System.Data.DataColumn
        
        Private columnlote_registrado As Global.System.Data.DataColumn
        
        Private columnfecha_acta As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vista_inventario_informe"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property categoria_registradoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategoria_registrado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipo_cultivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo_cultivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property variedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvariedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property peso_neto_restaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpeso_neto_resta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property entradaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentrada
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property salidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsalida
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property precioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprecio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property valor_neto_restaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvalor_neto_resta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fase_gColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfase_g
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombre_multiplicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_multiplicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property procedenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprocedencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property lote_registradoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlote_registrado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecha_actaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_acta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vista_inventario_informeRow
            Get
                Return CType(Me.Rows(index),vista_inventario_informeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_inventario_informeRowChanging As vista_inventario_informeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_inventario_informeRowChanged As vista_inventario_informeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_inventario_informeRowDeleting As vista_inventario_informeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vista_inventario_informeRowDeleted As vista_inventario_informeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addvista_inventario_informeRow(ByVal row As vista_inventario_informeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addvista_inventario_informeRow(ByVal categoria_registrado As String, ByVal tipo_cultivo As String, ByVal variedad As String, ByVal peso_neto_resta As Decimal, ByVal entrada As Decimal, ByVal salida As Decimal, ByVal precio As Decimal, ByVal valor_neto_resta As Decimal, ByVal fase_g As String, ByVal nombre_multiplicador As String, ByVal procedencia As String, ByVal lote_registrado As String, ByVal fecha_acta As Date) As vista_inventario_informeRow
            Dim rowvista_inventario_informeRow As vista_inventario_informeRow = CType(Me.NewRow,vista_inventario_informeRow)
            Dim columnValuesArray() As Object = New Object() {categoria_registrado, tipo_cultivo, variedad, peso_neto_resta, entrada, salida, precio, valor_neto_resta, fase_g, nombre_multiplicador, procedencia, lote_registrado, fecha_acta}
            rowvista_inventario_informeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvista_inventario_informeRow)
            Return rowvista_inventario_informeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vista_inventario_informeDataTable = CType(MyBase.Clone,vista_inventario_informeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vista_inventario_informeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncategoria_registrado = MyBase.Columns("categoria_registrado")
            Me.columntipo_cultivo = MyBase.Columns("tipo_cultivo")
            Me.columnvariedad = MyBase.Columns("variedad")
            Me.columnpeso_neto_resta = MyBase.Columns("peso_neto_resta")
            Me.columnentrada = MyBase.Columns("entrada")
            Me.columnsalida = MyBase.Columns("salida")
            Me.columnprecio = MyBase.Columns("precio")
            Me.columnvalor_neto_resta = MyBase.Columns("valor_neto_resta")
            Me.columnfase_g = MyBase.Columns("fase_g")
            Me.columnnombre_multiplicador = MyBase.Columns("nombre_multiplicador")
            Me.columnprocedencia = MyBase.Columns("procedencia")
            Me.columnlote_registrado = MyBase.Columns("lote_registrado")
            Me.columnfecha_acta = MyBase.Columns("fecha_acta")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columncategoria_registrado = New Global.System.Data.DataColumn("categoria_registrado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategoria_registrado)
            Me.columntipo_cultivo = New Global.System.Data.DataColumn("tipo_cultivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo_cultivo)
            Me.columnvariedad = New Global.System.Data.DataColumn("variedad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvariedad)
            Me.columnpeso_neto_resta = New Global.System.Data.DataColumn("peso_neto_resta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpeso_neto_resta)
            Me.columnentrada = New Global.System.Data.DataColumn("entrada", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentrada)
            Me.columnsalida = New Global.System.Data.DataColumn("salida", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsalida)
            Me.columnprecio = New Global.System.Data.DataColumn("precio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprecio)
            Me.columnvalor_neto_resta = New Global.System.Data.DataColumn("valor_neto_resta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalor_neto_resta)
            Me.columnfase_g = New Global.System.Data.DataColumn("fase_g", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfase_g)
            Me.columnnombre_multiplicador = New Global.System.Data.DataColumn("nombre_multiplicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_multiplicador)
            Me.columnprocedencia = New Global.System.Data.DataColumn("procedencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprocedencia)
            Me.columnlote_registrado = New Global.System.Data.DataColumn("lote_registrado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlote_registrado)
            Me.columnfecha_acta = New Global.System.Data.DataColumn("fecha_acta", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_acta)
            Me.columncategoria_registrado.MaxLength = 255
            Me.columntipo_cultivo.MaxLength = 100
            Me.columnvariedad.MaxLength = 100
            Me.columnfase_g.MaxLength = 50
            Me.columnnombre_multiplicador.MaxLength = 100
            Me.columnprocedencia.MaxLength = 202
            Me.columnlote_registrado.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newvista_inventario_informeRow() As vista_inventario_informeRow
            Return CType(Me.NewRow,vista_inventario_informeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vista_inventario_informeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vista_inventario_informeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vista_inventario_informeRowChangedEvent) Is Nothing) Then
                RaiseEvent vista_inventario_informeRowChanged(Me, New vista_inventario_informeRowChangeEvent(CType(e.Row,vista_inventario_informeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vista_inventario_informeRowChangingEvent) Is Nothing) Then
                RaiseEvent vista_inventario_informeRowChanging(Me, New vista_inventario_informeRowChangeEvent(CType(e.Row,vista_inventario_informeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vista_inventario_informeRowDeletedEvent) Is Nothing) Then
                RaiseEvent vista_inventario_informeRowDeleted(Me, New vista_inventario_informeRowChangeEvent(CType(e.Row,vista_inventario_informeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vista_inventario_informeRowDeletingEvent) Is Nothing) Then
                RaiseEvent vista_inventario_informeRowDeleting(Me, New vista_inventario_informeRowChangeEvent(CType(e.Row,vista_inventario_informeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removevista_inventario_informeRow(ByVal row As vista_inventario_informeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetMultiplicador = New DataSetMultiplicador()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vista_inventario_informeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class sag_registro_senasaRow
        Inherits Global.System.Data.DataRow
        
        Private tablesag_registro_senasa As sag_registro_senasaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablesag_registro_senasa = CType(Me.Table,sag_registro_senasaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tablesag_registro_senasa.IdColumn),Integer)
            End Get
            Set
                Me(Me.tablesag_registro_senasa.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.nombre_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_productor' de la tabla 'sag_registro_senasa' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.nombre_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property representante_legar() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.representante_legarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'representante_legar' de la tabla 'sag_registro_senasa' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.representante_legarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property identidad_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.identidad_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'identidad_productor' de la tabla 'sag_registro_senasa' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.identidad_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property extendida() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.extendidaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'extendida' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.extendidaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property residencia_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.residencia_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'residencia_productor' de la tabla 'sag_registro_senasa' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.residencia_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property telefono_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.telefono_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono_productor' de la tabla 'sag_registro_senasa' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.telefono_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_registro_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.no_registro_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_registro_productor' de la tabla 'sag_registro_senasa' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.no_registro_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.nombre_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_multiplicador' de la tabla 'sag_registro_senasa' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.nombre_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cedula_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.cedula_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cedula_multiplicador' de la tabla 'sag_registro_senasa' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.cedula_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property telefono_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.telefono_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono_multiplicador' de la tabla 'sag_registro_senasa'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.telefono_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_finca() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.nombre_fincaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_finca' de la tabla 'sag_registro_senasa' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.nombre_fincaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_persona_finca() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.nombre_persona_fincaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_persona_finca' de la tabla 'sag_registro_senasa' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.nombre_persona_fincaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property departamento() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.departamentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'departamento' de la tabla 'sag_registro_senasa' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.departamentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property municipio() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.municipioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'municipio' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.municipioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property aldea() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.aldeaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'aldea' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.aldeaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property caserio() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.caserioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'caserio' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.caserioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_lote() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.nombre_loteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_lote' de la tabla 'sag_registro_senasa' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.nombre_loteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property croquis() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.croquisColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'croquis' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.croquisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cultivo() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.cultivoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cultivo' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.cultivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property categoria() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.categoriaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'categoria' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.categoriaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property variedad() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.variedadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'variedad' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.variedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'productor' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_lote() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.no_loteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_lote' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.no_loteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_analisis() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.fecha_analisisColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_analisis' de la tabla 'sag_registro_senasa' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.fecha_analisisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ano_produ() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.ano_produColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ano_produ' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.ano_produColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property categoria_2() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.categoria_2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'categoria_2' de la tabla 'sag_registro_senasa' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.categoria_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.tipoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tipo' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cultivo_2() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.cultivo_2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cultivo_2' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.cultivo_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property variedad_2() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.variedad_2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'variedad_2' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.variedad_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property superficie_sembrar() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.superficie_sembrarColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'superficie_sembrar' de la tabla 'sag_registro_senasa' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.superficie_sembrarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_aproxi_siembra() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.fecha_aproxi_siembraColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_aproxi_siembra' de la tabla 'sag_registro_senasa' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.fecha_aproxi_siembraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_aproxi_cosecha() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.fecha_aproxi_cosechaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_aproxi_cosecha' de la tabla 'sag_registro_senasa' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.fecha_aproxi_cosechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property produc_estima_ha() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.produc_estima_haColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'produc_estima_ha' de la tabla 'sag_registro_senasa' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.produc_estima_haColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property destino() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.destinoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'destino' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.destinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property certificado_origen_semilla() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.certificado_origen_semillaColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'certificado_origen_semilla' de la tabla 'sag_registro_sen"& _ 
                            "asa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.certificado_origen_semillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property factura_comercio() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.factura_comercioColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'factura_comercio' de la tabla 'sag_registro_senasa' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.factura_comercioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property estado() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa.estadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'estado' de la tabla 'sag_registro_senasa' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.nombre_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_productorNull()
            Me(Me.tablesag_registro_senasa.nombre_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isrepresentante_legarNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.representante_legarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setrepresentante_legarNull()
            Me(Me.tablesag_registro_senasa.representante_legarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isidentidad_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.identidad_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setidentidad_productorNull()
            Me(Me.tablesag_registro_senasa.identidad_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsextendidaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.extendidaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetextendidaNull()
            Me(Me.tablesag_registro_senasa.extendidaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isresidencia_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.residencia_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setresidencia_productorNull()
            Me(Me.tablesag_registro_senasa.residencia_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istelefono_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.telefono_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settelefono_productorNull()
            Me(Me.tablesag_registro_senasa.telefono_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_registro_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.no_registro_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_registro_productorNull()
            Me(Me.tablesag_registro_senasa.no_registro_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.nombre_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_multiplicadorNull()
            Me(Me.tablesag_registro_senasa.nombre_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscedula_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.cedula_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcedula_multiplicadorNull()
            Me(Me.tablesag_registro_senasa.cedula_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istelefono_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.telefono_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settelefono_multiplicadorNull()
            Me(Me.tablesag_registro_senasa.telefono_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_fincaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.nombre_fincaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_fincaNull()
            Me(Me.tablesag_registro_senasa.nombre_fincaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_persona_fincaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.nombre_persona_fincaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_persona_fincaNull()
            Me(Me.tablesag_registro_senasa.nombre_persona_fincaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdepartamentoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.departamentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdepartamentoNull()
            Me(Me.tablesag_registro_senasa.departamentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsmunicipioNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.municipioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetmunicipioNull()
            Me(Me.tablesag_registro_senasa.municipioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsaldeaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.aldeaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetaldeaNull()
            Me(Me.tablesag_registro_senasa.aldeaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscaserioNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.caserioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcaserioNull()
            Me(Me.tablesag_registro_senasa.caserioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_loteNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.nombre_loteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_loteNull()
            Me(Me.tablesag_registro_senasa.nombre_loteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscroquisNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.croquisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcroquisNull()
            Me(Me.tablesag_registro_senasa.croquisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscultivoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.cultivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcultivoNull()
            Me(Me.tablesag_registro_senasa.cultivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscategoriaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.categoriaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcategoriaNull()
            Me(Me.tablesag_registro_senasa.categoriaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsvariedadNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.variedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetvariedadNull()
            Me(Me.tablesag_registro_senasa.variedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsproductorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetproductorNull()
            Me(Me.tablesag_registro_senasa.productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_loteNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.no_loteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_loteNull()
            Me(Me.tablesag_registro_senasa.no_loteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_analisisNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.fecha_analisisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_analisisNull()
            Me(Me.tablesag_registro_senasa.fecha_analisisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isano_produNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.ano_produColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setano_produNull()
            Me(Me.tablesag_registro_senasa.ano_produColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscategoria_2Null() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.categoria_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcategoria_2Null()
            Me(Me.tablesag_registro_senasa.categoria_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IstipoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.tipoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SettipoNull()
            Me(Me.tablesag_registro_senasa.tipoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscultivo_2Null() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.cultivo_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcultivo_2Null()
            Me(Me.tablesag_registro_senasa.cultivo_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isvariedad_2Null() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.variedad_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setvariedad_2Null()
            Me(Me.tablesag_registro_senasa.variedad_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issuperficie_sembrarNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.superficie_sembrarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsuperficie_sembrarNull()
            Me(Me.tablesag_registro_senasa.superficie_sembrarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_aproxi_siembraNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.fecha_aproxi_siembraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_aproxi_siembraNull()
            Me(Me.tablesag_registro_senasa.fecha_aproxi_siembraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_aproxi_cosechaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.fecha_aproxi_cosechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_aproxi_cosechaNull()
            Me(Me.tablesag_registro_senasa.fecha_aproxi_cosechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isproduc_estima_haNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.produc_estima_haColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setproduc_estima_haNull()
            Me(Me.tablesag_registro_senasa.produc_estima_haColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdestinoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.destinoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdestinoNull()
            Me(Me.tablesag_registro_senasa.destinoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscertificado_origen_semillaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.certificado_origen_semillaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcertificado_origen_semillaNull()
            Me(Me.tablesag_registro_senasa.certificado_origen_semillaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfactura_comercioNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.factura_comercioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfactura_comercioNull()
            Me(Me.tablesag_registro_senasa.factura_comercioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsestadoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa.estadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetestadoNull()
            Me(Me.tablesag_registro_senasa.estadoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class sag_registro_senasa1Row
        Inherits Global.System.Data.DataRow
        
        Private tablesag_registro_senasa1 As sag_registro_senasa1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablesag_registro_senasa1 = CType(Me.Table,sag_registro_senasa1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tablesag_registro_senasa1.IdColumn),Integer)
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.nombre_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_productor' de la tabla 'sag_registro_senasa1' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.nombre_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property representante_legal() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.representante_legalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'representante_legal' de la tabla 'sag_registro_senasa1' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.representante_legalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property identidad_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.identidad_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'identidad_productor' de la tabla 'sag_registro_senasa1' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.identidad_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property extendida() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.extendidaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'extendida' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.extendidaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property residencia_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.residencia_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'residencia_productor' de la tabla 'sag_registro_senasa1' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.residencia_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property telefono_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.telefono_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono_productor' de la tabla 'sag_registro_senasa1' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.telefono_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_registro_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.no_registro_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_registro_productor' de la tabla 'sag_registro_senasa1'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.no_registro_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.nombre_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_multiplicador' de la tabla 'sag_registro_senasa1' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.nombre_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cedula_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.cedula_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cedula_multiplicador' de la tabla 'sag_registro_senasa1' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.cedula_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property telefono_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.telefono_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono_multiplicador' de la tabla 'sag_registro_senasa1"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.telefono_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_finca() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.nombre_fincaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_finca' de la tabla 'sag_registro_senasa1' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.nombre_fincaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_persona_finca() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.nombre_persona_fincaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_persona_finca' de la tabla 'sag_registro_senasa1' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.nombre_persona_fincaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property departamento() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.departamentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'departamento' de la tabla 'sag_registro_senasa1' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.departamentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property municipio() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.municipioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'municipio' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.municipioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property aldea() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.aldeaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'aldea' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.aldeaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property caserio() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.caserioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'caserio' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.caserioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_lote() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.nombre_loteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_lote' de la tabla 'sag_registro_senasa1' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.nombre_loteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property croquis() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.croquisColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'croquis' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.croquisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo_cultivo() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.tipo_cultivoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tipo_cultivo' de la tabla 'sag_registro_senasa1' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.tipo_cultivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property variedad() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.variedadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'variedad' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.variedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'productor' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_lote() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.no_loteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_lote' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.no_loteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_analisis() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.fecha_analisisColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_analisis' de la tabla 'sag_registro_senasa1' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.fecha_analisisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ano_produ() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.ano_produColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ano_produ' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.ano_produColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property categoria_semilla() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.categoria_semillaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'categoria_semilla' de la tabla 'sag_registro_senasa1' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.categoria_semillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo_semilla() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.tipo_semillaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tipo_semilla' de la tabla 'sag_registro_senasa1' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.tipo_semillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cultivo_semilla() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.cultivo_semillaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cultivo_semilla' de la tabla 'sag_registro_senasa1' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.cultivo_semillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property variedad_maiz() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.variedad_maizColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'variedad_maiz' de la tabla 'sag_registro_senasa1' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.variedad_maizColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property variedad_frijol() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.variedad_frijolColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'variedad_frijol' de la tabla 'sag_registro_senasa1' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.variedad_frijolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property superficie_hectarea() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.superficie_hectareaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'superficie_hectarea' de la tabla 'sag_registro_senasa1' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.superficie_hectareaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_aprox_siembra() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.fecha_aprox_siembraColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_aprox_siembra' de la tabla 'sag_registro_senasa1' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.fecha_aprox_siembraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_aprox_cosecha() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.fecha_aprox_cosechaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_aprox_cosecha' de la tabla 'sag_registro_senasa1' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.fecha_aprox_cosechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property produccion_est_hectareas() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.produccion_est_hectareasColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'produccion_est_hectareas' de la tabla 'sag_registro_senas"& _ 
                            "a1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.produccion_est_hectareasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property destino() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.destinoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'destino' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.destinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property certificado_origen_semilla() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.certificado_origen_semillaColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'certificado_origen_semilla' de la tabla 'sag_registro_sen"& _ 
                            "asa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.certificado_origen_semillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property factura_comercio() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.factura_comercioColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'factura_comercio' de la tabla 'sag_registro_senasa1' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.factura_comercioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property estado() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.estadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'estado' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property categoria_origen() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.categoria_origenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'categoria_origen' de la tabla 'sag_registro_senasa1' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.categoria_origenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_acta() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.fecha_actaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_acta' de la tabla 'sag_registro_senasa1' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.fecha_actaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property porcentaje_humedad() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.porcentaje_humedadColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'porcentaje_humedad' de la tabla 'sag_registro_senasa1' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.porcentaje_humedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_sacos() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.no_sacosColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_sacos' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.no_sacosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property peso_humedo_QQ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.peso_humedo_QQColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'peso_humedo_QQ' de la tabla 'sag_registro_senasa1' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.peso_humedo_QQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property peso_materia_prima_QQ_porce_humedad() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.peso_materia_prima_QQ_porce_humedadColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'peso_materia_prima_QQ_porce_humedad' de la tabla 'sag_reg"& _ 
                            "istro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.peso_materia_prima_QQ_porce_humedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_QQ_oro() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.semilla_QQ_oroColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_QQ_oro' de la tabla 'sag_registro_senasa1' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.semilla_QQ_oroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_QQ_consumo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.semilla_QQ_consumoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_QQ_consumo' de la tabla 'sag_registro_senasa1' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.semilla_QQ_consumoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_QQ_basura() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.semilla_QQ_basuraColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_QQ_basura' de la tabla 'sag_registro_senasa1' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.semilla_QQ_basuraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_QQ_total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.semilla_QQ_totalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_QQ_total' de la tabla 'sag_registro_senasa1' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.semilla_QQ_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property observaciones() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.observacionesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'observaciones' de la tabla 'sag_registro_senasa1' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.observacionesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tara() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.taraColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tara' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.taraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property peso_neto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.peso_netoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'peso_neto' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.peso_netoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ciclo_acta() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.ciclo_actaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ciclo_acta' de la tabla 'sag_registro_senasa1' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.ciclo_actaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property peso_lb() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_senasa1.peso_lbColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'peso_lb' de la tabla 'sag_registro_senasa1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_senasa1.peso_lbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.nombre_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_productorNull()
            Me(Me.tablesag_registro_senasa1.nombre_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isrepresentante_legalNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.representante_legalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setrepresentante_legalNull()
            Me(Me.tablesag_registro_senasa1.representante_legalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isidentidad_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.identidad_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setidentidad_productorNull()
            Me(Me.tablesag_registro_senasa1.identidad_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsextendidaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.extendidaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetextendidaNull()
            Me(Me.tablesag_registro_senasa1.extendidaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isresidencia_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.residencia_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setresidencia_productorNull()
            Me(Me.tablesag_registro_senasa1.residencia_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istelefono_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.telefono_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settelefono_productorNull()
            Me(Me.tablesag_registro_senasa1.telefono_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_registro_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.no_registro_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_registro_productorNull()
            Me(Me.tablesag_registro_senasa1.no_registro_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.nombre_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_multiplicadorNull()
            Me(Me.tablesag_registro_senasa1.nombre_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscedula_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.cedula_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcedula_multiplicadorNull()
            Me(Me.tablesag_registro_senasa1.cedula_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istelefono_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.telefono_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settelefono_multiplicadorNull()
            Me(Me.tablesag_registro_senasa1.telefono_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_fincaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.nombre_fincaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_fincaNull()
            Me(Me.tablesag_registro_senasa1.nombre_fincaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_persona_fincaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.nombre_persona_fincaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_persona_fincaNull()
            Me(Me.tablesag_registro_senasa1.nombre_persona_fincaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdepartamentoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.departamentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdepartamentoNull()
            Me(Me.tablesag_registro_senasa1.departamentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsmunicipioNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.municipioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetmunicipioNull()
            Me(Me.tablesag_registro_senasa1.municipioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsaldeaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.aldeaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetaldeaNull()
            Me(Me.tablesag_registro_senasa1.aldeaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscaserioNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.caserioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcaserioNull()
            Me(Me.tablesag_registro_senasa1.caserioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_loteNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.nombre_loteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_loteNull()
            Me(Me.tablesag_registro_senasa1.nombre_loteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscroquisNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.croquisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcroquisNull()
            Me(Me.tablesag_registro_senasa1.croquisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istipo_cultivoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.tipo_cultivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settipo_cultivoNull()
            Me(Me.tablesag_registro_senasa1.tipo_cultivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsvariedadNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.variedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetvariedadNull()
            Me(Me.tablesag_registro_senasa1.variedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsproductorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetproductorNull()
            Me(Me.tablesag_registro_senasa1.productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_loteNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.no_loteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_loteNull()
            Me(Me.tablesag_registro_senasa1.no_loteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_analisisNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.fecha_analisisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_analisisNull()
            Me(Me.tablesag_registro_senasa1.fecha_analisisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isano_produNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.ano_produColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setano_produNull()
            Me(Me.tablesag_registro_senasa1.ano_produColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscategoria_semillaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.categoria_semillaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcategoria_semillaNull()
            Me(Me.tablesag_registro_senasa1.categoria_semillaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istipo_semillaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.tipo_semillaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settipo_semillaNull()
            Me(Me.tablesag_registro_senasa1.tipo_semillaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscultivo_semillaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.cultivo_semillaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcultivo_semillaNull()
            Me(Me.tablesag_registro_senasa1.cultivo_semillaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isvariedad_maizNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.variedad_maizColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setvariedad_maizNull()
            Me(Me.tablesag_registro_senasa1.variedad_maizColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isvariedad_frijolNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.variedad_frijolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setvariedad_frijolNull()
            Me(Me.tablesag_registro_senasa1.variedad_frijolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issuperficie_hectareaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.superficie_hectareaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsuperficie_hectareaNull()
            Me(Me.tablesag_registro_senasa1.superficie_hectareaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_aprox_siembraNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.fecha_aprox_siembraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_aprox_siembraNull()
            Me(Me.tablesag_registro_senasa1.fecha_aprox_siembraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_aprox_cosechaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.fecha_aprox_cosechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_aprox_cosechaNull()
            Me(Me.tablesag_registro_senasa1.fecha_aprox_cosechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isproduccion_est_hectareasNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.produccion_est_hectareasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setproduccion_est_hectareasNull()
            Me(Me.tablesag_registro_senasa1.produccion_est_hectareasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdestinoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.destinoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdestinoNull()
            Me(Me.tablesag_registro_senasa1.destinoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscertificado_origen_semillaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.certificado_origen_semillaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcertificado_origen_semillaNull()
            Me(Me.tablesag_registro_senasa1.certificado_origen_semillaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfactura_comercioNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.factura_comercioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfactura_comercioNull()
            Me(Me.tablesag_registro_senasa1.factura_comercioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsestadoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.estadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetestadoNull()
            Me(Me.tablesag_registro_senasa1.estadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscategoria_origenNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.categoria_origenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcategoria_origenNull()
            Me(Me.tablesag_registro_senasa1.categoria_origenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_actaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.fecha_actaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_actaNull()
            Me(Me.tablesag_registro_senasa1.fecha_actaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isporcentaje_humedadNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.porcentaje_humedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setporcentaje_humedadNull()
            Me(Me.tablesag_registro_senasa1.porcentaje_humedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_sacosNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.no_sacosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_sacosNull()
            Me(Me.tablesag_registro_senasa1.no_sacosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ispeso_humedo_QQNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.peso_humedo_QQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setpeso_humedo_QQNull()
            Me(Me.tablesag_registro_senasa1.peso_humedo_QQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ispeso_materia_prima_QQ_porce_humedadNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.peso_materia_prima_QQ_porce_humedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setpeso_materia_prima_QQ_porce_humedadNull()
            Me(Me.tablesag_registro_senasa1.peso_materia_prima_QQ_porce_humedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_QQ_oroNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.semilla_QQ_oroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_QQ_oroNull()
            Me(Me.tablesag_registro_senasa1.semilla_QQ_oroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_QQ_consumoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.semilla_QQ_consumoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_QQ_consumoNull()
            Me(Me.tablesag_registro_senasa1.semilla_QQ_consumoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_QQ_basuraNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.semilla_QQ_basuraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_QQ_basuraNull()
            Me(Me.tablesag_registro_senasa1.semilla_QQ_basuraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_QQ_totalNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.semilla_QQ_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_QQ_totalNull()
            Me(Me.tablesag_registro_senasa1.semilla_QQ_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsobservacionesNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.observacionesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetobservacionesNull()
            Me(Me.tablesag_registro_senasa1.observacionesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IstaraNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.taraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SettaraNull()
            Me(Me.tablesag_registro_senasa1.taraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ispeso_netoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.peso_netoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setpeso_netoNull()
            Me(Me.tablesag_registro_senasa1.peso_netoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isciclo_actaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.ciclo_actaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setciclo_actaNull()
            Me(Me.tablesag_registro_senasa1.ciclo_actaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ispeso_lbNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_senasa1.peso_lbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setpeso_lbNull()
            Me(Me.tablesag_registro_senasa1.peso_lbColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class sag_registro_multiplicadorRow
        Inherits Global.System.Data.DataRow
        
        Private tablesag_registro_multiplicador As sag_registro_multiplicadorDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablesag_registro_multiplicador = CType(Me.Table,sag_registro_multiplicadorDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tablesag_registro_multiplicador.IdColumn),Integer)
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.nombre_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_productor' de la tabla 'sag_registro_multiplicador"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.nombre_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property representante_legal() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.representante_legalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'representante_legal' de la tabla 'sag_registro_multiplica"& _ 
                            "dor' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.representante_legalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property identidad_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.identidad_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'identidad_productor' de la tabla 'sag_registro_multiplica"& _ 
                            "dor' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.identidad_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property extendida() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.extendidaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'extendida' de la tabla 'sag_registro_multiplicador' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.extendidaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property residencia_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.residencia_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'residencia_productor' de la tabla 'sag_registro_multiplic"& _ 
                            "ador' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.residencia_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property telefono_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.telefono_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono_productor' de la tabla 'sag_registro_multiplicad"& _ 
                            "or' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.telefono_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_registro_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.no_registro_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_registro_productor' de la tabla 'sag_registro_multipli"& _ 
                            "cador' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.no_registro_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.nombre_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_multiplicador' de la tabla 'sag_registro_multiplic"& _ 
                            "ador' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.nombre_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cedula_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.cedula_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cedula_multiplicador' de la tabla 'sag_registro_multiplic"& _ 
                            "ador' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.cedula_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property telefono_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.telefono_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono_multiplicador' de la tabla 'sag_registro_multipl"& _ 
                            "icador' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.telefono_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_finca() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.nombre_fincaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_finca' de la tabla 'sag_registro_multiplicador' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.nombre_fincaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_persona_finca() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.nombre_persona_fincaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_persona_finca' de la tabla 'sag_registro_multiplic"& _ 
                            "ador' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.nombre_persona_fincaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property departamento() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.departamentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'departamento' de la tabla 'sag_registro_multiplicador' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.departamentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property municipio() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.municipioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'municipio' de la tabla 'sag_registro_multiplicador' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.municipioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property aldea() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.aldeaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'aldea' de la tabla 'sag_registro_multiplicador' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.aldeaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property caserio() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.caserioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'caserio' de la tabla 'sag_registro_multiplicador' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.caserioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_lote() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.nombre_loteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_lote' de la tabla 'sag_registro_multiplicador' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.nombre_loteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property croquis() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.croquisColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'croquis' de la tabla 'sag_registro_multiplicador' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.croquisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property estado() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_multiplicador.estadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'estado' de la tabla 'sag_registro_multiplicador' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_multiplicador.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.nombre_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_productorNull()
            Me(Me.tablesag_registro_multiplicador.nombre_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isrepresentante_legalNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.representante_legalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setrepresentante_legalNull()
            Me(Me.tablesag_registro_multiplicador.representante_legalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isidentidad_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.identidad_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setidentidad_productorNull()
            Me(Me.tablesag_registro_multiplicador.identidad_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsextendidaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.extendidaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetextendidaNull()
            Me(Me.tablesag_registro_multiplicador.extendidaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isresidencia_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.residencia_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setresidencia_productorNull()
            Me(Me.tablesag_registro_multiplicador.residencia_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istelefono_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.telefono_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settelefono_productorNull()
            Me(Me.tablesag_registro_multiplicador.telefono_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_registro_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.no_registro_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_registro_productorNull()
            Me(Me.tablesag_registro_multiplicador.no_registro_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.nombre_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_multiplicadorNull()
            Me(Me.tablesag_registro_multiplicador.nombre_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscedula_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.cedula_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcedula_multiplicadorNull()
            Me(Me.tablesag_registro_multiplicador.cedula_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istelefono_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.telefono_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settelefono_multiplicadorNull()
            Me(Me.tablesag_registro_multiplicador.telefono_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_fincaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.nombre_fincaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_fincaNull()
            Me(Me.tablesag_registro_multiplicador.nombre_fincaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_persona_fincaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.nombre_persona_fincaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_persona_fincaNull()
            Me(Me.tablesag_registro_multiplicador.nombre_persona_fincaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdepartamentoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.departamentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdepartamentoNull()
            Me(Me.tablesag_registro_multiplicador.departamentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsmunicipioNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.municipioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetmunicipioNull()
            Me(Me.tablesag_registro_multiplicador.municipioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsaldeaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.aldeaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetaldeaNull()
            Me(Me.tablesag_registro_multiplicador.aldeaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscaserioNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.caserioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcaserioNull()
            Me(Me.tablesag_registro_multiplicador.caserioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_loteNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.nombre_loteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_loteNull()
            Me(Me.tablesag_registro_multiplicador.nombre_loteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscroquisNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.croquisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcroquisNull()
            Me(Me.tablesag_registro_multiplicador.croquisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsestadoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_multiplicador.estadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetestadoNull()
            Me(Me.tablesag_registro_multiplicador.estadoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class sag_registro_loteRow
        Inherits Global.System.Data.DataRow
        
        Private tablesag_registro_lote As sag_registro_loteDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablesag_registro_lote = CType(Me.Table,sag_registro_loteDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tablesag_registro_lote.IdColumn),Integer)
            End Get
            Set
                Me(Me.tablesag_registro_lote.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.nombre_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_productor' de la tabla 'sag_registro_lote' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.nombre_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property representante_legal() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.representante_legalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'representante_legal' de la tabla 'sag_registro_lote' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.representante_legalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property identidad_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.identidad_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'identidad_productor' de la tabla 'sag_registro_lote' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.identidad_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property extendida() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.extendidaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'extendida' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.extendidaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property residencia_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.residencia_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'residencia_productor' de la tabla 'sag_registro_lote' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.residencia_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property telefono_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.telefono_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono_productor' de la tabla 'sag_registro_lote' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.telefono_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_registro_productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.no_registro_productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_registro_productor' de la tabla 'sag_registro_lote' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.no_registro_productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.nombre_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_multiplicador' de la tabla 'sag_registro_lote' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.nombre_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cedula_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.cedula_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cedula_multiplicador' de la tabla 'sag_registro_lote' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.cedula_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property telefono_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.telefono_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono_multiplicador' de la tabla 'sag_registro_lote' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.telefono_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_finca() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.nombre_fincaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_finca' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.nombre_fincaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_persona_finca() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.nombre_persona_fincaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_persona_finca' de la tabla 'sag_registro_lote' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.nombre_persona_fincaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property departamento() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.departamentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'departamento' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.departamentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property municipio() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.municipioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'municipio' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.municipioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property aldea() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.aldeaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'aldea' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.aldeaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property caserio() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.caserioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'caserio' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.caserioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_lote() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.nombre_loteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_lote' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.nombre_loteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property categoria_origen() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.categoria_origenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'categoria_origen' de la tabla 'sag_registro_lote' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.categoria_origenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo_cultivo() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.tipo_cultivoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tipo_cultivo' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.tipo_cultivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property variedad() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.variedadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'variedad' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.variedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property productor() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.productorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'productor' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.productorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_lote() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.no_loteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_lote' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.no_loteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_analisis() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.fecha_analisisColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_analisis' de la tabla 'sag_registro_lote' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.fecha_analisisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ano_produ() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.ano_produColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ano_produ' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.ano_produColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property categoria_semilla() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.categoria_semillaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'categoria_semilla' de la tabla 'sag_registro_lote' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.categoria_semillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo_semilla() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.tipo_semillaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tipo_semilla' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.tipo_semillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cultivo_semilla() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.cultivo_semillaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cultivo_semilla' de la tabla 'sag_registro_lote' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.cultivo_semillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property variedad_maiz() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.variedad_maizColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'variedad_maiz' de la tabla 'sag_registro_lote' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.variedad_maizColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property variedad_frijol() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.variedad_frijolColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'variedad_frijol' de la tabla 'sag_registro_lote' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.variedad_frijolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property superficie_hectarea() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.superficie_hectareaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'superficie_hectarea' de la tabla 'sag_registro_lote' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.superficie_hectareaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_aprox_siembra() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.fecha_aprox_siembraColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_aprox_siembra' de la tabla 'sag_registro_lote' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.fecha_aprox_siembraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_aprox_cosecha() As Date
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.fecha_aprox_cosechaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_aprox_cosecha' de la tabla 'sag_registro_lote' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.fecha_aprox_cosechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property produccion_est_hectareas() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.produccion_est_hectareasColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'produccion_est_hectareas' de la tabla 'sag_registro_lote'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.produccion_est_hectareasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property destino() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.destinoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'destino' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.destinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property certificado_origen_semilla() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.certificado_origen_semillaColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'certificado_origen_semilla' de la tabla 'sag_registro_lot"& _ 
                            "e' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.certificado_origen_semillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property factura_comercio() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.factura_comercioColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'factura_comercio' de la tabla 'sag_registro_lote' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.factura_comercioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property estado() As String
            Get
                Try 
                    Return CType(Me(Me.tablesag_registro_lote.estadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'estado' de la tabla 'sag_registro_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesag_registro_lote.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.nombre_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_productorNull()
            Me(Me.tablesag_registro_lote.nombre_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isrepresentante_legalNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.representante_legalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setrepresentante_legalNull()
            Me(Me.tablesag_registro_lote.representante_legalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isidentidad_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.identidad_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setidentidad_productorNull()
            Me(Me.tablesag_registro_lote.identidad_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsextendidaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.extendidaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetextendidaNull()
            Me(Me.tablesag_registro_lote.extendidaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isresidencia_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.residencia_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setresidencia_productorNull()
            Me(Me.tablesag_registro_lote.residencia_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istelefono_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.telefono_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settelefono_productorNull()
            Me(Me.tablesag_registro_lote.telefono_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_registro_productorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.no_registro_productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_registro_productorNull()
            Me(Me.tablesag_registro_lote.no_registro_productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.nombre_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_multiplicadorNull()
            Me(Me.tablesag_registro_lote.nombre_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscedula_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.cedula_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcedula_multiplicadorNull()
            Me(Me.tablesag_registro_lote.cedula_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istelefono_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.telefono_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settelefono_multiplicadorNull()
            Me(Me.tablesag_registro_lote.telefono_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_fincaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.nombre_fincaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_fincaNull()
            Me(Me.tablesag_registro_lote.nombre_fincaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_persona_fincaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.nombre_persona_fincaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_persona_fincaNull()
            Me(Me.tablesag_registro_lote.nombre_persona_fincaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdepartamentoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.departamentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdepartamentoNull()
            Me(Me.tablesag_registro_lote.departamentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsmunicipioNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.municipioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetmunicipioNull()
            Me(Me.tablesag_registro_lote.municipioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsaldeaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.aldeaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetaldeaNull()
            Me(Me.tablesag_registro_lote.aldeaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscaserioNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.caserioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcaserioNull()
            Me(Me.tablesag_registro_lote.caserioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_loteNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.nombre_loteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_loteNull()
            Me(Me.tablesag_registro_lote.nombre_loteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscategoria_origenNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.categoria_origenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcategoria_origenNull()
            Me(Me.tablesag_registro_lote.categoria_origenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istipo_cultivoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.tipo_cultivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settipo_cultivoNull()
            Me(Me.tablesag_registro_lote.tipo_cultivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsvariedadNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.variedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetvariedadNull()
            Me(Me.tablesag_registro_lote.variedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsproductorNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.productorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetproductorNull()
            Me(Me.tablesag_registro_lote.productorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_loteNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.no_loteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_loteNull()
            Me(Me.tablesag_registro_lote.no_loteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_analisisNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.fecha_analisisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_analisisNull()
            Me(Me.tablesag_registro_lote.fecha_analisisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isano_produNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.ano_produColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setano_produNull()
            Me(Me.tablesag_registro_lote.ano_produColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscategoria_semillaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.categoria_semillaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcategoria_semillaNull()
            Me(Me.tablesag_registro_lote.categoria_semillaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istipo_semillaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.tipo_semillaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settipo_semillaNull()
            Me(Me.tablesag_registro_lote.tipo_semillaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscultivo_semillaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.cultivo_semillaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcultivo_semillaNull()
            Me(Me.tablesag_registro_lote.cultivo_semillaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isvariedad_maizNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.variedad_maizColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setvariedad_maizNull()
            Me(Me.tablesag_registro_lote.variedad_maizColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isvariedad_frijolNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.variedad_frijolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setvariedad_frijolNull()
            Me(Me.tablesag_registro_lote.variedad_frijolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issuperficie_hectareaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.superficie_hectareaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsuperficie_hectareaNull()
            Me(Me.tablesag_registro_lote.superficie_hectareaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_aprox_siembraNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.fecha_aprox_siembraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_aprox_siembraNull()
            Me(Me.tablesag_registro_lote.fecha_aprox_siembraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_aprox_cosechaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.fecha_aprox_cosechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_aprox_cosechaNull()
            Me(Me.tablesag_registro_lote.fecha_aprox_cosechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isproduccion_est_hectareasNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.produccion_est_hectareasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setproduccion_est_hectareasNull()
            Me(Me.tablesag_registro_lote.produccion_est_hectareasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdestinoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.destinoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdestinoNull()
            Me(Me.tablesag_registro_lote.destinoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscertificado_origen_semillaNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.certificado_origen_semillaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcertificado_origen_semillaNull()
            Me(Me.tablesag_registro_lote.certificado_origen_semillaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfactura_comercioNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.factura_comercioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfactura_comercioNull()
            Me(Me.tablesag_registro_lote.factura_comercioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsestadoNull() As Boolean
            Return Me.IsNull(Me.tablesag_registro_lote.estadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetestadoNull()
            Me(Me.tablesag_registro_lote.estadoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vista_multi_loteRow
        Inherits Global.System.Data.DataRow
        
        Private tablevista_multi_lote As vista_multi_loteDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevista_multi_lote = CType(Me.Table,vista_multi_loteDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_MULTI() As Integer
            Get
                Return CType(Me(Me.tablevista_multi_lote.ID_MULTIColumn),Integer)
            End Get
            Set
                Me(Me.tablevista_multi_lote.ID_MULTIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOMBRE_PRODUCTOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.NOMBRE_PRODUCTORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRE_PRODUCTOR' de la tabla 'vista_multi_lote' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.NOMBRE_PRODUCTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property REPRESENTANTE_LEGAL() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.REPRESENTANTE_LEGALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REPRESENTANTE_LEGAL' de la tabla 'vista_multi_lote' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.REPRESENTANTE_LEGALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDENTIDAD_PRODUCTOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.IDENTIDAD_PRODUCTORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDENTIDAD_PRODUCTOR' de la tabla 'vista_multi_lote' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.IDENTIDAD_PRODUCTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXTENDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.EXTENDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXTENDIDA' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.EXTENDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RESIDENCIA_PRODUCTOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.RESIDENCIA_PRODUCTORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RESIDENCIA_PRODUCTOR' de la tabla 'vista_multi_lote' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.RESIDENCIA_PRODUCTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TELEFONO_PRODUCTOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.TELEFONO_PRODUCTORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_PRODUCTOR' de la tabla 'vista_multi_lote' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.TELEFONO_PRODUCTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NO_REGISTRO_PRODUCTOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.NO_REGISTRO_PRODUCTORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NO_REGISTRO_PRODUCTOR' de la tabla 'vista_multi_lote' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.NO_REGISTRO_PRODUCTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOMBRE_MULTIPLICADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.NOMBRE_MULTIPLICADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRE_MULTIPLICADOR' de la tabla 'vista_multi_lote' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.NOMBRE_MULTIPLICADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CEDULA_MULTIPLICADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.CEDULA_MULTIPLICADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CEDULA_MULTIPLICADOR' de la tabla 'vista_multi_lote' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.CEDULA_MULTIPLICADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TELEFONO_MULTIPLICADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.TELEFONO_MULTIPLICADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_MULTIPLICADOR' de la tabla 'vista_multi_lote' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.TELEFONO_MULTIPLICADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOMBRE_FINCA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.NOMBRE_FINCAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRE_FINCA' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.NOMBRE_FINCAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOMBRE_PERSONA_FINCA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.NOMBRE_PERSONA_FINCAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRE_PERSONA_FINCA' de la tabla 'vista_multi_lote' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.NOMBRE_PERSONA_FINCAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DEPARTAMENTO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.DEPARTAMENTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEPARTAMENTO' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MUNICIPIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.MUNICIPIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MUNICIPIO' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ALDEA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.ALDEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALDEA' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.ALDEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CASERIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.CASERIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CASERIO' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.CASERIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOMBRE_LOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.NOMBRE_LOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRE_LOTE' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.NOMBRE_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ESTADO_MULTI() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.ESTADO_MULTIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_MULTI' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.ESTADO_MULTIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_LOTE() As Integer
            Get
                Return CType(Me(Me.tablevista_multi_lote.ID_LOTEColumn),Integer)
            End Get
            Set
                Me(Me.tablevista_multi_lote.ID_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CATEGORIA_ORIGEN() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.CATEGORIA_ORIGENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CATEGORIA_ORIGEN' de la tabla 'vista_multi_lote' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.CATEGORIA_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIPO_CULTIVO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.TIPO_CULTIVOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CULTIVO' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.TIPO_CULTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VARIEDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.VARIEDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VARIEDAD' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.VARIEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PRODUCTOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.PRODUCTORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRODUCTOR' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.PRODUCTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NO_LOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.NO_LOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NO_LOTE' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.NO_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FECHA_ANALISIS() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.FECHA_ANALISISColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_ANALISIS' de la tabla 'vista_multi_lote' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.FECHA_ANALISISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ANO_PRODU() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.ANO_PRODUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ANO_PRODU' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.ANO_PRODUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CATEGORIA_SEMILLA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.CATEGORIA_SEMILLAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CATEGORIA_SEMILLA' de la tabla 'vista_multi_lote' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.CATEGORIA_SEMILLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIPO_SEMILLA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.TIPO_SEMILLAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_SEMILLA' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.TIPO_SEMILLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CULTIVO_SEMILLA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.CULTIVO_SEMILLAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CULTIVO_SEMILLA' de la tabla 'vista_multi_lote' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.CULTIVO_SEMILLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VARIEDAD_MAIZ() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.VARIEDAD_MAIZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VARIEDAD_MAIZ' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.VARIEDAD_MAIZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VARIEDAD_FRIJOL() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.VARIEDAD_FRIJOLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VARIEDAD_FRIJOL' de la tabla 'vista_multi_lote' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.VARIEDAD_FRIJOLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPERFICIE_HECTAREA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.SUPERFICIE_HECTAREAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SUPERFICIE_HECTAREA' de la tabla 'vista_multi_lote' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.SUPERFICIE_HECTAREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FECHA_APROX_SIEMBRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.FECHA_APROX_SIEMBRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_APROX_SIEMBRA' de la tabla 'vista_multi_lote' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.FECHA_APROX_SIEMBRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FECHA_APROX_COSECHA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.FECHA_APROX_COSECHAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_APROX_COSECHA' de la tabla 'vista_multi_lote' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.FECHA_APROX_COSECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PRODUCCION_EST_HECTAREAS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.PRODUCCION_EST_HECTAREASColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRODUCCION_EST_HECTAREAS' de la tabla 'vista_multi_lote' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.PRODUCCION_EST_HECTAREASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DESTINO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.DESTINOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESTINO' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.DESTINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CERTIFICADO_ORIGEN_SEMILLA() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.CERTIFICADO_ORIGEN_SEMILLAColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CERTIFICADO_ORIGEN_SEMILLA' de la tabla 'vista_multi_lote"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.CERTIFICADO_ORIGEN_SEMILLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FACTURA_COMERCIO() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.FACTURA_COMERCIOColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FACTURA_COMERCIO' de la tabla 'vista_multi_lote' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.FACTURA_COMERCIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ESTADO_LOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.ESTADO_LOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_LOTE' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.ESTADO_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_multi_lote.ID2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID2' de la tabla 'vista_multi_lote' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_multi_lote.ID2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNOMBRE_PRODUCTORNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.NOMBRE_PRODUCTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNOMBRE_PRODUCTORNull()
            Me(Me.tablevista_multi_lote.NOMBRE_PRODUCTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsREPRESENTANTE_LEGALNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.REPRESENTANTE_LEGALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetREPRESENTANTE_LEGALNull()
            Me(Me.tablevista_multi_lote.REPRESENTANTE_LEGALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDENTIDAD_PRODUCTORNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.IDENTIDAD_PRODUCTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDENTIDAD_PRODUCTORNull()
            Me(Me.tablevista_multi_lote.IDENTIDAD_PRODUCTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXTENDIDANull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.EXTENDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXTENDIDANull()
            Me(Me.tablevista_multi_lote.EXTENDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRESIDENCIA_PRODUCTORNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.RESIDENCIA_PRODUCTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRESIDENCIA_PRODUCTORNull()
            Me(Me.tablevista_multi_lote.RESIDENCIA_PRODUCTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTELEFONO_PRODUCTORNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.TELEFONO_PRODUCTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTELEFONO_PRODUCTORNull()
            Me(Me.tablevista_multi_lote.TELEFONO_PRODUCTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNO_REGISTRO_PRODUCTORNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.NO_REGISTRO_PRODUCTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNO_REGISTRO_PRODUCTORNull()
            Me(Me.tablevista_multi_lote.NO_REGISTRO_PRODUCTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNOMBRE_MULTIPLICADORNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.NOMBRE_MULTIPLICADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNOMBRE_MULTIPLICADORNull()
            Me(Me.tablevista_multi_lote.NOMBRE_MULTIPLICADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCEDULA_MULTIPLICADORNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.CEDULA_MULTIPLICADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCEDULA_MULTIPLICADORNull()
            Me(Me.tablevista_multi_lote.CEDULA_MULTIPLICADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTELEFONO_MULTIPLICADORNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.TELEFONO_MULTIPLICADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTELEFONO_MULTIPLICADORNull()
            Me(Me.tablevista_multi_lote.TELEFONO_MULTIPLICADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNOMBRE_FINCANull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.NOMBRE_FINCAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNOMBRE_FINCANull()
            Me(Me.tablevista_multi_lote.NOMBRE_FINCAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNOMBRE_PERSONA_FINCANull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.NOMBRE_PERSONA_FINCAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNOMBRE_PERSONA_FINCANull()
            Me(Me.tablevista_multi_lote.NOMBRE_PERSONA_FINCAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDEPARTAMENTONull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.DEPARTAMENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDEPARTAMENTONull()
            Me(Me.tablevista_multi_lote.DEPARTAMENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMUNICIPIONull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.MUNICIPIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMUNICIPIONull()
            Me(Me.tablevista_multi_lote.MUNICIPIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsALDEANull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.ALDEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetALDEANull()
            Me(Me.tablevista_multi_lote.ALDEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCASERIONull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.CASERIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCASERIONull()
            Me(Me.tablevista_multi_lote.CASERIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNOMBRE_LOTENull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.NOMBRE_LOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNOMBRE_LOTENull()
            Me(Me.tablevista_multi_lote.NOMBRE_LOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsESTADO_MULTINull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.ESTADO_MULTIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetESTADO_MULTINull()
            Me(Me.tablevista_multi_lote.ESTADO_MULTIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCATEGORIA_ORIGENNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.CATEGORIA_ORIGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCATEGORIA_ORIGENNull()
            Me(Me.tablevista_multi_lote.CATEGORIA_ORIGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTIPO_CULTIVONull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.TIPO_CULTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTIPO_CULTIVONull()
            Me(Me.tablevista_multi_lote.TIPO_CULTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVARIEDADNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.VARIEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVARIEDADNull()
            Me(Me.tablevista_multi_lote.VARIEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPRODUCTORNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.PRODUCTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPRODUCTORNull()
            Me(Me.tablevista_multi_lote.PRODUCTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNO_LOTENull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.NO_LOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNO_LOTENull()
            Me(Me.tablevista_multi_lote.NO_LOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFECHA_ANALISISNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.FECHA_ANALISISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFECHA_ANALISISNull()
            Me(Me.tablevista_multi_lote.FECHA_ANALISISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsANO_PRODUNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.ANO_PRODUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetANO_PRODUNull()
            Me(Me.tablevista_multi_lote.ANO_PRODUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCATEGORIA_SEMILLANull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.CATEGORIA_SEMILLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCATEGORIA_SEMILLANull()
            Me(Me.tablevista_multi_lote.CATEGORIA_SEMILLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTIPO_SEMILLANull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.TIPO_SEMILLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTIPO_SEMILLANull()
            Me(Me.tablevista_multi_lote.TIPO_SEMILLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCULTIVO_SEMILLANull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.CULTIVO_SEMILLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCULTIVO_SEMILLANull()
            Me(Me.tablevista_multi_lote.CULTIVO_SEMILLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVARIEDAD_MAIZNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.VARIEDAD_MAIZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVARIEDAD_MAIZNull()
            Me(Me.tablevista_multi_lote.VARIEDAD_MAIZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVARIEDAD_FRIJOLNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.VARIEDAD_FRIJOLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVARIEDAD_FRIJOLNull()
            Me(Me.tablevista_multi_lote.VARIEDAD_FRIJOLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPERFICIE_HECTAREANull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.SUPERFICIE_HECTAREAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPERFICIE_HECTAREANull()
            Me(Me.tablevista_multi_lote.SUPERFICIE_HECTAREAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFECHA_APROX_SIEMBRANull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.FECHA_APROX_SIEMBRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFECHA_APROX_SIEMBRANull()
            Me(Me.tablevista_multi_lote.FECHA_APROX_SIEMBRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFECHA_APROX_COSECHANull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.FECHA_APROX_COSECHAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFECHA_APROX_COSECHANull()
            Me(Me.tablevista_multi_lote.FECHA_APROX_COSECHAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPRODUCCION_EST_HECTAREASNull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.PRODUCCION_EST_HECTAREASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPRODUCCION_EST_HECTAREASNull()
            Me(Me.tablevista_multi_lote.PRODUCCION_EST_HECTAREASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDESTINONull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.DESTINOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDESTINONull()
            Me(Me.tablevista_multi_lote.DESTINOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCERTIFICADO_ORIGEN_SEMILLANull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.CERTIFICADO_ORIGEN_SEMILLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCERTIFICADO_ORIGEN_SEMILLANull()
            Me(Me.tablevista_multi_lote.CERTIFICADO_ORIGEN_SEMILLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFACTURA_COMERCIONull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.FACTURA_COMERCIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFACTURA_COMERCIONull()
            Me(Me.tablevista_multi_lote.FACTURA_COMERCIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsESTADO_LOTENull() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.ESTADO_LOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetESTADO_LOTENull()
            Me(Me.tablevista_multi_lote.ESTADO_LOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsID2Null() As Boolean
            Return Me.IsNull(Me.tablevista_multi_lote.ID2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetID2Null()
            Me(Me.tablevista_multi_lote.ID2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vista_acta_lote_multiRow
        Inherits Global.System.Data.DataRow
        
        Private tablevista_acta_lote_multi As vista_acta_lote_multiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevista_acta_lote_multi = CType(Me.Table,vista_acta_lote_multiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_MULTI() As Integer
            Get
                Return CType(Me(Me.tablevista_acta_lote_multi.ID_MULTIColumn),Integer)
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.ID_MULTIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOMBRE_MULTIPLICADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.NOMBRE_MULTIPLICADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRE_MULTIPLICADOR' de la tabla 'vista_acta_lote_multi'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.NOMBRE_MULTIPLICADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property REPRESENTANTE_LEGAL() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.REPRESENTANTE_LEGALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REPRESENTANTE_LEGAL' de la tabla 'vista_acta_lote_multi' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.REPRESENTANTE_LEGALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TELEFONO_MULTIPLICADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.TELEFONO_MULTIPLICADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_MULTIPLICADOR' de la tabla 'vista_acta_lote_mult"& _ 
                            "i' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.TELEFONO_MULTIPLICADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DEPARTAMENTO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.DEPARTAMENTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEPARTAMENTO' de la tabla 'vista_acta_lote_multi' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MUNICIPIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.MUNICIPIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MUNICIPIO' de la tabla 'vista_acta_lote_multi' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ALDEA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.ALDEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALDEA' de la tabla 'vista_acta_lote_multi' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.ALDEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CASERIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.CASERIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CASERIO' de la tabla 'vista_acta_lote_multi' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.CASERIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ESTADO_MULTI() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.ESTADO_MULTIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_MULTI' de la tabla 'vista_acta_lote_multi' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.ESTADO_MULTIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_LOTE() As Integer
            Get
                Return CType(Me(Me.tablevista_acta_lote_multi.ID_LOTEColumn),Integer)
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.ID_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CATEGORIA_ORIGEN() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.CATEGORIA_ORIGENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CATEGORIA_ORIGEN' de la tabla 'vista_acta_lote_multi' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.CATEGORIA_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIPO_CULTIVO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.TIPO_CULTIVOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CULTIVO' de la tabla 'vista_acta_lote_multi' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.TIPO_CULTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VARIEDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.VARIEDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VARIEDAD' de la tabla 'vista_acta_lote_multi' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.VARIEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PRODUCTOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.PRODUCTORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRODUCTOR' de la tabla 'vista_acta_lote_multi' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.PRODUCTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NO_LOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.NO_LOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NO_LOTE' de la tabla 'vista_acta_lote_multi' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.NO_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ESTADO_LOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.ESTADO_LOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_LOTE' de la tabla 'vista_acta_lote_multi' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.ESTADO_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_ACTA() As Integer
            Get
                Return CType(Me(Me.tablevista_acta_lote_multi.ID_ACTAColumn),Integer)
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.ID_ACTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FECHA_ACTA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.FECHA_ACTAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_ACTA' de la tabla 'vista_acta_lote_multi' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.FECHA_ACTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PORCENTAJE_HUMEDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.PORCENTAJE_HUMEDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PORCENTAJE_HUMEDAD' de la tabla 'vista_acta_lote_multi' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.PORCENTAJE_HUMEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ESTADO_SENA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.ESTADO_SENAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_SENA' de la tabla 'vista_acta_lote_multi' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.ESTADO_SENAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NO_SACOS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.NO_SACOSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NO_SACOS' de la tabla 'vista_acta_lote_multi' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.NO_SACOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESO_HUMEDO_QQ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.PESO_HUMEDO_QQColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESO_HUMEDO_QQ' de la tabla 'vista_acta_lote_multi' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.PESO_HUMEDO_QQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD' de la tabla 'vista_a"& _ 
                            "cta_lote_multi' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_QQ_ORO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.SEMILLA_QQ_OROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_QQ_ORO' de la tabla 'vista_acta_lote_multi' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.SEMILLA_QQ_OROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_QQ_CONSUMO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.SEMILLA_QQ_CONSUMOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_QQ_CONSUMO' de la tabla 'vista_acta_lote_multi' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.SEMILLA_QQ_CONSUMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_QQ_BASURA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.SEMILLA_QQ_BASURAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_QQ_BASURA' de la tabla 'vista_acta_lote_multi' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.SEMILLA_QQ_BASURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_QQ_TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.SEMILLA_QQ_TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_QQ_TOTAL' de la tabla 'vista_acta_lote_multi' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.SEMILLA_QQ_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OBSERVACIONES() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.OBSERVACIONESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACIONES' de la tabla 'vista_acta_lote_multi' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.OBSERVACIONESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TARA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.TARAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TARA' de la tabla 'vista_acta_lote_multi' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.TARAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CICLO_ACTA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.CICLO_ACTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CICLO_ACTA' de la tabla 'vista_acta_lote_multi' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.CICLO_ACTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESO_NETO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.PESO_NETOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESO_NETO' de la tabla 'vista_acta_lote_multi' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.PESO_NETOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESO_LB() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.PESO_LBColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESO_LB' de la tabla 'vista_acta_lote_multi' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.PESO_LBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LOTE_REGISTRADO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.LOTE_REGISTRADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LOTE_REGISTRADO' de la tabla 'vista_acta_lote_multi' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.LOTE_REGISTRADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CATEGORIA_REGISTRADO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.CATEGORIA_REGISTRADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CATEGORIA_REGISTRADO' de la tabla 'vista_acta_lote_multi'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.CATEGORIA_REGISTRADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ACTA_FIRMADA() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.ACTA_FIRMADAColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ACTA_FIRMADA' de la tabla 'vista_acta_lote_multi' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.ACTA_FIRMADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RENDIMIETO_ORO_PESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi.RENDIMIETO_ORO_PESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RENDIMIETO_ORO_PESO' de la tabla 'vista_acta_lote_multi' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi.RENDIMIETO_ORO_PESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNOMBRE_MULTIPLICADORNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.NOMBRE_MULTIPLICADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNOMBRE_MULTIPLICADORNull()
            Me(Me.tablevista_acta_lote_multi.NOMBRE_MULTIPLICADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsREPRESENTANTE_LEGALNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.REPRESENTANTE_LEGALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetREPRESENTANTE_LEGALNull()
            Me(Me.tablevista_acta_lote_multi.REPRESENTANTE_LEGALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTELEFONO_MULTIPLICADORNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.TELEFONO_MULTIPLICADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTELEFONO_MULTIPLICADORNull()
            Me(Me.tablevista_acta_lote_multi.TELEFONO_MULTIPLICADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDEPARTAMENTONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.DEPARTAMENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDEPARTAMENTONull()
            Me(Me.tablevista_acta_lote_multi.DEPARTAMENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMUNICIPIONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.MUNICIPIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMUNICIPIONull()
            Me(Me.tablevista_acta_lote_multi.MUNICIPIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsALDEANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.ALDEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetALDEANull()
            Me(Me.tablevista_acta_lote_multi.ALDEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCASERIONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.CASERIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCASERIONull()
            Me(Me.tablevista_acta_lote_multi.CASERIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsESTADO_MULTINull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.ESTADO_MULTIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetESTADO_MULTINull()
            Me(Me.tablevista_acta_lote_multi.ESTADO_MULTIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCATEGORIA_ORIGENNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.CATEGORIA_ORIGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCATEGORIA_ORIGENNull()
            Me(Me.tablevista_acta_lote_multi.CATEGORIA_ORIGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTIPO_CULTIVONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.TIPO_CULTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTIPO_CULTIVONull()
            Me(Me.tablevista_acta_lote_multi.TIPO_CULTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVARIEDADNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.VARIEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVARIEDADNull()
            Me(Me.tablevista_acta_lote_multi.VARIEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPRODUCTORNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.PRODUCTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPRODUCTORNull()
            Me(Me.tablevista_acta_lote_multi.PRODUCTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNO_LOTENull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.NO_LOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNO_LOTENull()
            Me(Me.tablevista_acta_lote_multi.NO_LOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsESTADO_LOTENull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.ESTADO_LOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetESTADO_LOTENull()
            Me(Me.tablevista_acta_lote_multi.ESTADO_LOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFECHA_ACTANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.FECHA_ACTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFECHA_ACTANull()
            Me(Me.tablevista_acta_lote_multi.FECHA_ACTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPORCENTAJE_HUMEDADNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.PORCENTAJE_HUMEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPORCENTAJE_HUMEDADNull()
            Me(Me.tablevista_acta_lote_multi.PORCENTAJE_HUMEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsESTADO_SENANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.ESTADO_SENAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetESTADO_SENANull()
            Me(Me.tablevista_acta_lote_multi.ESTADO_SENAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNO_SACOSNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.NO_SACOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNO_SACOSNull()
            Me(Me.tablevista_acta_lote_multi.NO_SACOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESO_HUMEDO_QQNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.PESO_HUMEDO_QQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESO_HUMEDO_QQNull()
            Me(Me.tablevista_acta_lote_multi.PESO_HUMEDO_QQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADNull()
            Me(Me.tablevista_acta_lote_multi.PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_QQ_ORONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.SEMILLA_QQ_OROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_QQ_ORONull()
            Me(Me.tablevista_acta_lote_multi.SEMILLA_QQ_OROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_QQ_CONSUMONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.SEMILLA_QQ_CONSUMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_QQ_CONSUMONull()
            Me(Me.tablevista_acta_lote_multi.SEMILLA_QQ_CONSUMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_QQ_BASURANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.SEMILLA_QQ_BASURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_QQ_BASURANull()
            Me(Me.tablevista_acta_lote_multi.SEMILLA_QQ_BASURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_QQ_TOTALNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.SEMILLA_QQ_TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_QQ_TOTALNull()
            Me(Me.tablevista_acta_lote_multi.SEMILLA_QQ_TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOBSERVACIONESNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.OBSERVACIONESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOBSERVACIONESNull()
            Me(Me.tablevista_acta_lote_multi.OBSERVACIONESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTARANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.TARAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTARANull()
            Me(Me.tablevista_acta_lote_multi.TARAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCICLO_ACTANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.CICLO_ACTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCICLO_ACTANull()
            Me(Me.tablevista_acta_lote_multi.CICLO_ACTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESO_NETONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.PESO_NETOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESO_NETONull()
            Me(Me.tablevista_acta_lote_multi.PESO_NETOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESO_LBNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.PESO_LBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESO_LBNull()
            Me(Me.tablevista_acta_lote_multi.PESO_LBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLOTE_REGISTRADONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.LOTE_REGISTRADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLOTE_REGISTRADONull()
            Me(Me.tablevista_acta_lote_multi.LOTE_REGISTRADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCATEGORIA_REGISTRADONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.CATEGORIA_REGISTRADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCATEGORIA_REGISTRADONull()
            Me(Me.tablevista_acta_lote_multi.CATEGORIA_REGISTRADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsACTA_FIRMADANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.ACTA_FIRMADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetACTA_FIRMADANull()
            Me(Me.tablevista_acta_lote_multi.ACTA_FIRMADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRENDIMIETO_ORO_PESONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi.RENDIMIETO_ORO_PESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRENDIMIETO_ORO_PESONull()
            Me(Me.tablevista_acta_lote_multi.RENDIMIETO_ORO_PESOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vista_ficha_informeRow
        Inherits Global.System.Data.DataRow
        
        Private tablevista_ficha_informe As vista_ficha_informeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevista_ficha_informe = CType(Me.Table,vista_ficha_informeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_MULTI() As Integer
            Get
                Return CType(Me(Me.tablevista_ficha_informe.ID_MULTIColumn),Integer)
            End Get
            Set
                Me(Me.tablevista_ficha_informe.ID_MULTIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOMBRE_MULTIPLICADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.NOMBRE_MULTIPLICADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRE_MULTIPLICADOR' de la tabla 'vista_ficha_informe' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.NOMBRE_MULTIPLICADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property REPRESENTANTE_LEGAL() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.REPRESENTANTE_LEGALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REPRESENTANTE_LEGAL' de la tabla 'vista_ficha_informe' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.REPRESENTANTE_LEGALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TELEFONO_MULTIPLICADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.TELEFONO_MULTIPLICADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_MULTIPLICADOR' de la tabla 'vista_ficha_informe'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.TELEFONO_MULTIPLICADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DEPARTAMENTO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.DEPARTAMENTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEPARTAMENTO' de la tabla 'vista_ficha_informe' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MUNICIPIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.MUNICIPIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MUNICIPIO' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ALDEA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.ALDEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALDEA' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.ALDEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CASERIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.CASERIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CASERIO' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.CASERIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ESTADO_MULTI() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.ESTADO_MULTIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_MULTI' de la tabla 'vista_ficha_informe' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.ESTADO_MULTIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_LOTE() As Integer
            Get
                Return CType(Me(Me.tablevista_ficha_informe.ID_LOTEColumn),Integer)
            End Get
            Set
                Me(Me.tablevista_ficha_informe.ID_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CATEGORIA_ORIGEN() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.CATEGORIA_ORIGENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CATEGORIA_ORIGEN' de la tabla 'vista_ficha_informe' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.CATEGORIA_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIPO_CULTIVO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.TIPO_CULTIVOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CULTIVO' de la tabla 'vista_ficha_informe' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.TIPO_CULTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VARIEDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.VARIEDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VARIEDAD' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.VARIEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PRODUCTOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.PRODUCTORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRODUCTOR' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.PRODUCTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NO_LOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.NO_LOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NO_LOTE' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.NO_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ESTADO_LOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.ESTADO_LOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_LOTE' de la tabla 'vista_ficha_informe' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.ESTADO_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_ACTA() As Integer
            Get
                Return CType(Me(Me.tablevista_ficha_informe.ID_ACTAColumn),Integer)
            End Get
            Set
                Me(Me.tablevista_ficha_informe.ID_ACTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FECHA_ACTA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.FECHA_ACTAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_ACTA' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.FECHA_ACTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PORCENTAJE_HUMEDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.PORCENTAJE_HUMEDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PORCENTAJE_HUMEDAD' de la tabla 'vista_ficha_informe' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.PORCENTAJE_HUMEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ESTADO_SENA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.ESTADO_SENAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_SENA' de la tabla 'vista_ficha_informe' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.ESTADO_SENAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NO_SACOS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.NO_SACOSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NO_SACOS' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.NO_SACOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESO_HUMEDO_QQ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.PESO_HUMEDO_QQColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESO_HUMEDO_QQ' de la tabla 'vista_ficha_informe' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.PESO_HUMEDO_QQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD' de la tabla 'vista_f"& _ 
                            "icha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_QQ_ORO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.SEMILLA_QQ_OROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_QQ_ORO' de la tabla 'vista_ficha_informe' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.SEMILLA_QQ_OROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_QQ_CONSUMO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.SEMILLA_QQ_CONSUMOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_QQ_CONSUMO' de la tabla 'vista_ficha_informe' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.SEMILLA_QQ_CONSUMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_QQ_BASURA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.SEMILLA_QQ_BASURAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_QQ_BASURA' de la tabla 'vista_ficha_informe' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.SEMILLA_QQ_BASURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_QQ_TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.SEMILLA_QQ_TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_QQ_TOTAL' de la tabla 'vista_ficha_informe' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.SEMILLA_QQ_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OBSERVACIONES() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.OBSERVACIONESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACIONES' de la tabla 'vista_ficha_informe' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.OBSERVACIONESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TARA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.TARAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TARA' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.TARAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CICLO_ACTA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.CICLO_ACTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CICLO_ACTA' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.CICLO_ACTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESO_NETO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.PESO_NETOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESO_NETO' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.PESO_NETOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESO_LB() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.PESO_LBColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESO_LB' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.PESO_LBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LOTE_REGISTRADO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.LOTE_REGISTRADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LOTE_REGISTRADO' de la tabla 'vista_ficha_informe' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.LOTE_REGISTRADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CATEGORIA_REGISTRADO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.CATEGORIA_REGISTRADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CATEGORIA_REGISTRADO' de la tabla 'vista_ficha_informe' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.CATEGORIA_REGISTRADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ACTA_FIRMADA() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.ACTA_FIRMADAColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ACTA_FIRMADA' de la tabla 'vista_ficha_informe' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.ACTA_FIRMADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RENDIMIETO_ORO_PESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.RENDIMIETO_ORO_PESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RENDIMIETO_ORO_PESO' de la tabla 'vista_ficha_informe' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.RENDIMIETO_ORO_PESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cantidad_qq_ficha() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.cantidad_qq_fichaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cantidad_qq_ficha' de la tabla 'vista_ficha_informe' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.cantidad_qq_fichaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property estado() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.estadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'estado' de la tabla 'vista_ficha_informe' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property peso_lb_ficha() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.peso_lb_fichaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'peso_lb_ficha' de la tabla 'vista_ficha_informe' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.peso_lb_fichaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cantidad_sacos_ficha() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_ficha_informe.cantidad_sacos_fichaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cantidad_sacos_ficha' de la tabla 'vista_ficha_informe' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_ficha_informe.cantidad_sacos_fichaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNOMBRE_MULTIPLICADORNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.NOMBRE_MULTIPLICADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNOMBRE_MULTIPLICADORNull()
            Me(Me.tablevista_ficha_informe.NOMBRE_MULTIPLICADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsREPRESENTANTE_LEGALNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.REPRESENTANTE_LEGALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetREPRESENTANTE_LEGALNull()
            Me(Me.tablevista_ficha_informe.REPRESENTANTE_LEGALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTELEFONO_MULTIPLICADORNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.TELEFONO_MULTIPLICADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTELEFONO_MULTIPLICADORNull()
            Me(Me.tablevista_ficha_informe.TELEFONO_MULTIPLICADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDEPARTAMENTONull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.DEPARTAMENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDEPARTAMENTONull()
            Me(Me.tablevista_ficha_informe.DEPARTAMENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMUNICIPIONull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.MUNICIPIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMUNICIPIONull()
            Me(Me.tablevista_ficha_informe.MUNICIPIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsALDEANull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.ALDEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetALDEANull()
            Me(Me.tablevista_ficha_informe.ALDEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCASERIONull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.CASERIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCASERIONull()
            Me(Me.tablevista_ficha_informe.CASERIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsESTADO_MULTINull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.ESTADO_MULTIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetESTADO_MULTINull()
            Me(Me.tablevista_ficha_informe.ESTADO_MULTIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCATEGORIA_ORIGENNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.CATEGORIA_ORIGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCATEGORIA_ORIGENNull()
            Me(Me.tablevista_ficha_informe.CATEGORIA_ORIGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTIPO_CULTIVONull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.TIPO_CULTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTIPO_CULTIVONull()
            Me(Me.tablevista_ficha_informe.TIPO_CULTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVARIEDADNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.VARIEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVARIEDADNull()
            Me(Me.tablevista_ficha_informe.VARIEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPRODUCTORNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.PRODUCTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPRODUCTORNull()
            Me(Me.tablevista_ficha_informe.PRODUCTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNO_LOTENull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.NO_LOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNO_LOTENull()
            Me(Me.tablevista_ficha_informe.NO_LOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsESTADO_LOTENull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.ESTADO_LOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetESTADO_LOTENull()
            Me(Me.tablevista_ficha_informe.ESTADO_LOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFECHA_ACTANull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.FECHA_ACTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFECHA_ACTANull()
            Me(Me.tablevista_ficha_informe.FECHA_ACTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPORCENTAJE_HUMEDADNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.PORCENTAJE_HUMEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPORCENTAJE_HUMEDADNull()
            Me(Me.tablevista_ficha_informe.PORCENTAJE_HUMEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsESTADO_SENANull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.ESTADO_SENAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetESTADO_SENANull()
            Me(Me.tablevista_ficha_informe.ESTADO_SENAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNO_SACOSNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.NO_SACOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNO_SACOSNull()
            Me(Me.tablevista_ficha_informe.NO_SACOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESO_HUMEDO_QQNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.PESO_HUMEDO_QQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESO_HUMEDO_QQNull()
            Me(Me.tablevista_ficha_informe.PESO_HUMEDO_QQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADNull()
            Me(Me.tablevista_ficha_informe.PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_QQ_ORONull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.SEMILLA_QQ_OROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_QQ_ORONull()
            Me(Me.tablevista_ficha_informe.SEMILLA_QQ_OROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_QQ_CONSUMONull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.SEMILLA_QQ_CONSUMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_QQ_CONSUMONull()
            Me(Me.tablevista_ficha_informe.SEMILLA_QQ_CONSUMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_QQ_BASURANull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.SEMILLA_QQ_BASURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_QQ_BASURANull()
            Me(Me.tablevista_ficha_informe.SEMILLA_QQ_BASURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_QQ_TOTALNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.SEMILLA_QQ_TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_QQ_TOTALNull()
            Me(Me.tablevista_ficha_informe.SEMILLA_QQ_TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOBSERVACIONESNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.OBSERVACIONESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOBSERVACIONESNull()
            Me(Me.tablevista_ficha_informe.OBSERVACIONESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTARANull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.TARAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTARANull()
            Me(Me.tablevista_ficha_informe.TARAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCICLO_ACTANull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.CICLO_ACTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCICLO_ACTANull()
            Me(Me.tablevista_ficha_informe.CICLO_ACTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESO_NETONull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.PESO_NETOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESO_NETONull()
            Me(Me.tablevista_ficha_informe.PESO_NETOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESO_LBNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.PESO_LBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESO_LBNull()
            Me(Me.tablevista_ficha_informe.PESO_LBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLOTE_REGISTRADONull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.LOTE_REGISTRADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLOTE_REGISTRADONull()
            Me(Me.tablevista_ficha_informe.LOTE_REGISTRADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCATEGORIA_REGISTRADONull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.CATEGORIA_REGISTRADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCATEGORIA_REGISTRADONull()
            Me(Me.tablevista_ficha_informe.CATEGORIA_REGISTRADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsACTA_FIRMADANull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.ACTA_FIRMADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetACTA_FIRMADANull()
            Me(Me.tablevista_ficha_informe.ACTA_FIRMADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRENDIMIETO_ORO_PESONull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.RENDIMIETO_ORO_PESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRENDIMIETO_ORO_PESONull()
            Me(Me.tablevista_ficha_informe.RENDIMIETO_ORO_PESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscantidad_qq_fichaNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.cantidad_qq_fichaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcantidad_qq_fichaNull()
            Me(Me.tablevista_ficha_informe.cantidad_qq_fichaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsestadoNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.estadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetestadoNull()
            Me(Me.tablevista_ficha_informe.estadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ispeso_lb_fichaNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.peso_lb_fichaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setpeso_lb_fichaNull()
            Me(Me.tablevista_ficha_informe.peso_lb_fichaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscantidad_sacos_fichaNull() As Boolean
            Return Me.IsNull(Me.tablevista_ficha_informe.cantidad_sacos_fichaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcantidad_sacos_fichaNull()
            Me(Me.tablevista_ficha_informe.cantidad_sacos_fichaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vista_acta_lote_multi_germRow
        Inherits Global.System.Data.DataRow
        
        Private tablevista_acta_lote_multi_germ As vista_acta_lote_multi_germDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevista_acta_lote_multi_germ = CType(Me.Table,vista_acta_lote_multi_germDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_MULTI() As Integer
            Get
                Return CType(Me(Me.tablevista_acta_lote_multi_germ.ID_MULTIColumn),Integer)
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.ID_MULTIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOMBRE_MULTIPLICADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.NOMBRE_MULTIPLICADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRE_MULTIPLICADOR' de la tabla 'vista_acta_lote_multi_"& _ 
                            "germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.NOMBRE_MULTIPLICADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property REPRESENTANTE_LEGAL() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.REPRESENTANTE_LEGALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REPRESENTANTE_LEGAL' de la tabla 'vista_acta_lote_multi_g"& _ 
                            "erm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.REPRESENTANTE_LEGALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TELEFONO_MULTIPLICADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.TELEFONO_MULTIPLICADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_MULTIPLICADOR' de la tabla 'vista_acta_lote_mult"& _ 
                            "i_germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.TELEFONO_MULTIPLICADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DEPARTAMENTO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.DEPARTAMENTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEPARTAMENTO' de la tabla 'vista_acta_lote_multi_germ' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MUNICIPIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.MUNICIPIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MUNICIPIO' de la tabla 'vista_acta_lote_multi_germ' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ALDEA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.ALDEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALDEA' de la tabla 'vista_acta_lote_multi_germ' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.ALDEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CASERIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.CASERIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CASERIO' de la tabla 'vista_acta_lote_multi_germ' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.CASERIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ESTADO_MULTI() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.ESTADO_MULTIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_MULTI' de la tabla 'vista_acta_lote_multi_germ' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.ESTADO_MULTIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_LOTE() As Integer
            Get
                Return CType(Me(Me.tablevista_acta_lote_multi_germ.ID_LOTEColumn),Integer)
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.ID_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CATEGORIA_ORIGEN() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.CATEGORIA_ORIGENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CATEGORIA_ORIGEN' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.CATEGORIA_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIPO_CULTIVO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.TIPO_CULTIVOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CULTIVO' de la tabla 'vista_acta_lote_multi_germ' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.TIPO_CULTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VARIEDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.VARIEDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VARIEDAD' de la tabla 'vista_acta_lote_multi_germ' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.VARIEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PRODUCTOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.PRODUCTORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRODUCTOR' de la tabla 'vista_acta_lote_multi_germ' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.PRODUCTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NO_LOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.NO_LOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NO_LOTE' de la tabla 'vista_acta_lote_multi_germ' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.NO_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ESTADO_LOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.ESTADO_LOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_LOTE' de la tabla 'vista_acta_lote_multi_germ' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.ESTADO_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ANO_PRODU() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.ANO_PRODUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ANO_PRODU' de la tabla 'vista_acta_lote_multi_germ' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.ANO_PRODUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIPO_SEMILLA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.TIPO_SEMILLAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_SEMILLA' de la tabla 'vista_acta_lote_multi_germ' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.TIPO_SEMILLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_ACTA() As Integer
            Get
                Return CType(Me(Me.tablevista_acta_lote_multi_germ.ID_ACTAColumn),Integer)
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.ID_ACTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FECHA_ACTA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.FECHA_ACTAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_ACTA' de la tabla 'vista_acta_lote_multi_germ' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.FECHA_ACTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PORCENTAJE_HUMEDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.PORCENTAJE_HUMEDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PORCENTAJE_HUMEDAD' de la tabla 'vista_acta_lote_multi_ge"& _ 
                            "rm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.PORCENTAJE_HUMEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ESTADO_SENA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.ESTADO_SENAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_SENA' de la tabla 'vista_acta_lote_multi_germ' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.ESTADO_SENAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NO_SACOS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.NO_SACOSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NO_SACOS' de la tabla 'vista_acta_lote_multi_germ' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.NO_SACOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESO_HUMEDO_QQ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.PESO_HUMEDO_QQColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESO_HUMEDO_QQ' de la tabla 'vista_acta_lote_multi_germ' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.PESO_HUMEDO_QQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD' de la tabla 'vista_a"& _ 
                            "cta_lote_multi_germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_QQ_ORO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_OROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_QQ_ORO' de la tabla 'vista_acta_lote_multi_germ' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_OROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_QQ_CONSUMO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_CONSUMOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_QQ_CONSUMO' de la tabla 'vista_acta_lote_multi_ge"& _ 
                            "rm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_CONSUMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_QQ_BASURA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_BASURAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_QQ_BASURA' de la tabla 'vista_acta_lote_multi_ger"& _ 
                            "m' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_BASURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_QQ_TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_QQ_TOTAL' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OBSERVACIONES() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.OBSERVACIONESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACIONES' de la tabla 'vista_acta_lote_multi_germ' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.OBSERVACIONESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TARA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.TARAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TARA' de la tabla 'vista_acta_lote_multi_germ' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.TARAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CICLO_ACTA() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.CICLO_ACTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CICLO_ACTA' de la tabla 'vista_acta_lote_multi_germ' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.CICLO_ACTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESO_NETO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.PESO_NETOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESO_NETO' de la tabla 'vista_acta_lote_multi_germ' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.PESO_NETOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESO_LB() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.PESO_LBColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESO_LB' de la tabla 'vista_acta_lote_multi_germ' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.PESO_LBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LOTE_REGISTRADO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.LOTE_REGISTRADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LOTE_REGISTRADO' de la tabla 'vista_acta_lote_multi_germ'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.LOTE_REGISTRADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CATEGORIA_REGISTRADO() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.CATEGORIA_REGISTRADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CATEGORIA_REGISTRADO' de la tabla 'vista_acta_lote_multi_"& _ 
                            "germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.CATEGORIA_REGISTRADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ACTA_FIRMADA() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.ACTA_FIRMADAColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ACTA_FIRMADA' de la tabla 'vista_acta_lote_multi_germ' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.ACTA_FIRMADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FICHA_FIRMADO() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.FICHA_FIRMADOColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FICHA_FIRMADO' de la tabla 'vista_acta_lote_multi_germ' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.FICHA_FIRMADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CUADRO_FIRMADO() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.CUADRO_FIRMADOColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUADRO_FIRMADO' de la tabla 'vista_acta_lote_multi_germ' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.CUADRO_FIRMADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property archivo_lote_senasa() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.archivo_lote_senasaColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'archivo_lote_senasa' de la tabla 'vista_acta_lote_multi_g"& _ 
                            "erm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.archivo_lote_senasaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RENDIMIETO_ORO_PESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.RENDIMIETO_ORO_PESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RENDIMIETO_ORO_PESO' de la tabla 'vista_acta_lote_multi_g"& _ 
                            "erm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.RENDIMIETO_ORO_PESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'id' de la tabla 'vista_acta_lote_multi_germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property decha_elaboracion_g() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.decha_elaboracion_gColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'decha_elaboracion_g' de la tabla 'vista_acta_lote_multi_g"& _ 
                            "erm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.decha_elaboracion_gColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_envase() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.no_envaseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_envase' de la tabla 'vista_acta_lote_multi_germ' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.no_envaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property peso_inicial_g() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.peso_inicial_gColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'peso_inicial_g' de la tabla 'vista_acta_lote_multi_germ' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.peso_inicial_gColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo_granel() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.tipo_granelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tipo_granel' de la tabla 'vista_acta_lote_multi_germ' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.tipo_granelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_recibo_g() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.fecha_recibo_gColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_recibo_g' de la tabla 'vista_acta_lote_multi_germ' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.fecha_recibo_gColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_muestreo_g() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.fecha_muestreo_gColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_muestreo_g' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.fecha_muestreo_gColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property humedad_final() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.humedad_finalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'humedad_final' de la tabla 'vista_acta_lote_multi_germ' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.humedad_finalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_evaluacion_g() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.fecha_evaluacion_gColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_evaluacion_g' de la tabla 'vista_acta_lote_multi_ge"& _ 
                            "rm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.fecha_evaluacion_gColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo_envase() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.tipo_envaseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tipo_envase' de la tabla 'vista_acta_lote_multi_germ' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.tipo_envaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fase_g() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.fase_gColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fase_g' de la tabla 'vista_acta_lote_multi_germ' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.fase_gColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tamano_maiz() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.tamano_maizColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tamano_maiz' de la tabla 'vista_acta_lote_multi_germ' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.tamano_maizColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cantidad_inicial() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.cantidad_inicialColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cantidad_inicial' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.cantidad_inicialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cantidad_existente() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.cantidad_existenteColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cantidad_existente' de la tabla 'vista_acta_lote_multi_ge"& _ 
                            "rm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.cantidad_existenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_camara() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.no_camaraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_camara' de la tabla 'vista_acta_lote_multi_germ' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.no_camaraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property perimetro() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.perimetroColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'perimetro' de la tabla 'vista_acta_lote_multi_germ' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.perimetroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property certisem() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.certisemColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'certisem' de la tabla 'vista_acta_lote_multi_germ' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.certisemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_certisem() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.fecha_certisemColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_certisem' de la tabla 'vista_acta_lote_multi_germ' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.fecha_certisemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property planta_g() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.planta_gColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'planta_g' de la tabla 'vista_acta_lote_multi_germ' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.planta_gColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_planta_g() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.fecha_planta_gColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_planta_g' de la tabla 'vista_acta_lote_multi_germ' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.fecha_planta_gColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_pura() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_puraColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_pura' de la tabla 'vista_acta_lote_multi_germ' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_puraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_otro_cultivo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_otro_cultivoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_otro_cultivo' de la tabla 'vista_acta_lote_multi_"& _ 
                            "germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_otro_cultivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_maleza() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_malezaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_maleza' de la tabla 'vista_acta_lote_multi_germ' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_malezaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property materia_inerte() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.materia_inerteColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'materia_inerte' de la tabla 'vista_acta_lote_multi_germ' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.materia_inerteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property plantulas_normales_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'plantulas_normales_1' de la tabla 'vista_acta_lote_multi_"& _ 
                            "germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property plantulas_anormales_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'plantulas_anormales_1' de la tabla 'vista_acta_lote_multi"& _ 
                            "_germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_muerta_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_muerta_1' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semillas_duras_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semillas_duras_1' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semillas_debiles_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semillas_debiles_1' de la tabla 'vista_acta_lote_multi_ge"& _ 
                            "rm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_mezcla_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_mezcla_1' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_dias_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.no_dias_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_dias_1' de la tabla 'vista_acta_lote_multi_germ' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.no_dias_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property plantulas_normales_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'plantulas_normales_2' de la tabla 'vista_acta_lote_multi_"& _ 
                            "germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property plantulas_anormales_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'plantulas_anormales_2' de la tabla 'vista_acta_lote_multi"& _ 
                            "_germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_muerta_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_muerta_2' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semillas_duras_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semillas_duras_2' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semillas_debiles_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semillas_debiles_2' de la tabla 'vista_acta_lote_multi_ge"& _ 
                            "rm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_mezcla_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_mezcla_2' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_dias_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.no_dias_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_dias_2' de la tabla 'vista_acta_lote_multi_germ' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.no_dias_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property plantulas_normales_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'plantulas_normales_3' de la tabla 'vista_acta_lote_multi_"& _ 
                            "germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property plantulas_anormales_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'plantulas_anormales_3' de la tabla 'vista_acta_lote_multi"& _ 
                            "_germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_muerta_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_muerta_3' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semillas_duras_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semillas_duras_3' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semillas_debiles_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semillas_debiles_3' de la tabla 'vista_acta_lote_multi_ge"& _ 
                            "rm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_mezcla_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_mezcla_3' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_dias_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.no_dias_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_dias_3' de la tabla 'vista_acta_lote_multi_germ' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.no_dias_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property plantulas_normales_4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_4Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'plantulas_normales_4' de la tabla 'vista_acta_lote_multi_"& _ 
                            "germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property plantulas_anormales_4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_4Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'plantulas_anormales_4' de la tabla 'vista_acta_lote_multi"& _ 
                            "_germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_muerta_4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_4Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_muerta_4' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semillas_duras_4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_4Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semillas_duras_4' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semillas_debiles_4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_4Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semillas_debiles_4' de la tabla 'vista_acta_lote_multi_ge"& _ 
                            "rm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_mezcla_4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_4Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_mezcla_4' de la tabla 'vista_acta_lote_multi_germ"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_dias_4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.no_dias_4Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_dias_4' de la tabla 'vista_acta_lote_multi_germ' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.no_dias_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property plantulas_normales_total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_totalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'plantulas_normales_total' de la tabla 'vista_acta_lote_mu"& _ 
                            "lti_germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property plantulas_anormales_total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_totalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'plantulas_anormales_total' de la tabla 'vista_acta_lote_m"& _ 
                            "ulti_germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_muerta_total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_totalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_muerta_total' de la tabla 'vista_acta_lote_multi_"& _ 
                            "germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semillas_duras_total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_totalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semillas_duras_total' de la tabla 'vista_acta_lote_multi_"& _ 
                            "germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semillas_debiles_total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_totalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semillas_debiles_total' de la tabla 'vista_acta_lote_mult"& _ 
                            "i_germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property semilla_mezcla_total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_totalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'semilla_mezcla_total' de la tabla 'vista_acta_lote_multi_"& _ 
                            "germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property no_dias_total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.no_dias_totalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'no_dias_total' de la tabla 'vista_acta_lote_multi_germ' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.no_dias_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property porcentaje_germnimacion() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.porcentaje_germnimacionColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'porcentaje_germnimacion' de la tabla 'vista_acta_lote_mul"& _ 
                            "ti_germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.porcentaje_germnimacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property observaciones_g() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.observaciones_gColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'observaciones_g' de la tabla 'vista_acta_lote_multi_germ'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.observaciones_gColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property responsable_muestreo() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.responsable_muestreoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'responsable_muestreo' de la tabla 'vista_acta_lote_multi_"& _ 
                            "germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.responsable_muestreoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property responsable_analisis() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.responsable_analisisColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'responsable_analisis' de la tabla 'vista_acta_lote_multi_"& _ 
                            "germ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.responsable_analisisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property estado() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.estadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'estado' de la tabla 'vista_acta_lote_multi_germ' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property decision() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.decisionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'decision' de la tabla 'vista_acta_lote_multi_germ' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.decisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.id_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'id_2' de la tabla 'vista_acta_lote_multi_germ' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.id_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property germinacion_firmada() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablevista_acta_lote_multi_germ.germinacion_firmadaColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'germinacion_firmada' de la tabla 'vista_acta_lote_multi_g"& _ 
                            "erm' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_acta_lote_multi_germ.germinacion_firmadaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNOMBRE_MULTIPLICADORNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.NOMBRE_MULTIPLICADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNOMBRE_MULTIPLICADORNull()
            Me(Me.tablevista_acta_lote_multi_germ.NOMBRE_MULTIPLICADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsREPRESENTANTE_LEGALNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.REPRESENTANTE_LEGALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetREPRESENTANTE_LEGALNull()
            Me(Me.tablevista_acta_lote_multi_germ.REPRESENTANTE_LEGALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTELEFONO_MULTIPLICADORNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.TELEFONO_MULTIPLICADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTELEFONO_MULTIPLICADORNull()
            Me(Me.tablevista_acta_lote_multi_germ.TELEFONO_MULTIPLICADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDEPARTAMENTONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.DEPARTAMENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDEPARTAMENTONull()
            Me(Me.tablevista_acta_lote_multi_germ.DEPARTAMENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMUNICIPIONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.MUNICIPIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMUNICIPIONull()
            Me(Me.tablevista_acta_lote_multi_germ.MUNICIPIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsALDEANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.ALDEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetALDEANull()
            Me(Me.tablevista_acta_lote_multi_germ.ALDEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCASERIONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.CASERIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCASERIONull()
            Me(Me.tablevista_acta_lote_multi_germ.CASERIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsESTADO_MULTINull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.ESTADO_MULTIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetESTADO_MULTINull()
            Me(Me.tablevista_acta_lote_multi_germ.ESTADO_MULTIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCATEGORIA_ORIGENNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.CATEGORIA_ORIGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCATEGORIA_ORIGENNull()
            Me(Me.tablevista_acta_lote_multi_germ.CATEGORIA_ORIGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTIPO_CULTIVONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.TIPO_CULTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTIPO_CULTIVONull()
            Me(Me.tablevista_acta_lote_multi_germ.TIPO_CULTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVARIEDADNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.VARIEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVARIEDADNull()
            Me(Me.tablevista_acta_lote_multi_germ.VARIEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPRODUCTORNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.PRODUCTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPRODUCTORNull()
            Me(Me.tablevista_acta_lote_multi_germ.PRODUCTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNO_LOTENull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.NO_LOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNO_LOTENull()
            Me(Me.tablevista_acta_lote_multi_germ.NO_LOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsESTADO_LOTENull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.ESTADO_LOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetESTADO_LOTENull()
            Me(Me.tablevista_acta_lote_multi_germ.ESTADO_LOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsANO_PRODUNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.ANO_PRODUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetANO_PRODUNull()
            Me(Me.tablevista_acta_lote_multi_germ.ANO_PRODUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTIPO_SEMILLANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.TIPO_SEMILLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTIPO_SEMILLANull()
            Me(Me.tablevista_acta_lote_multi_germ.TIPO_SEMILLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFECHA_ACTANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.FECHA_ACTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFECHA_ACTANull()
            Me(Me.tablevista_acta_lote_multi_germ.FECHA_ACTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPORCENTAJE_HUMEDADNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.PORCENTAJE_HUMEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPORCENTAJE_HUMEDADNull()
            Me(Me.tablevista_acta_lote_multi_germ.PORCENTAJE_HUMEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsESTADO_SENANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.ESTADO_SENAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetESTADO_SENANull()
            Me(Me.tablevista_acta_lote_multi_germ.ESTADO_SENAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNO_SACOSNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.NO_SACOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNO_SACOSNull()
            Me(Me.tablevista_acta_lote_multi_germ.NO_SACOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESO_HUMEDO_QQNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.PESO_HUMEDO_QQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESO_HUMEDO_QQNull()
            Me(Me.tablevista_acta_lote_multi_germ.PESO_HUMEDO_QQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADNull()
            Me(Me.tablevista_acta_lote_multi_germ.PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_QQ_ORONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_OROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_QQ_ORONull()
            Me(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_OROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_QQ_CONSUMONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_CONSUMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_QQ_CONSUMONull()
            Me(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_CONSUMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_QQ_BASURANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_BASURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_QQ_BASURANull()
            Me(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_BASURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_QQ_TOTALNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_QQ_TOTALNull()
            Me(Me.tablevista_acta_lote_multi_germ.SEMILLA_QQ_TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOBSERVACIONESNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.OBSERVACIONESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOBSERVACIONESNull()
            Me(Me.tablevista_acta_lote_multi_germ.OBSERVACIONESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTARANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.TARAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTARANull()
            Me(Me.tablevista_acta_lote_multi_germ.TARAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCICLO_ACTANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.CICLO_ACTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCICLO_ACTANull()
            Me(Me.tablevista_acta_lote_multi_germ.CICLO_ACTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESO_NETONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.PESO_NETOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESO_NETONull()
            Me(Me.tablevista_acta_lote_multi_germ.PESO_NETOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESO_LBNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.PESO_LBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESO_LBNull()
            Me(Me.tablevista_acta_lote_multi_germ.PESO_LBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLOTE_REGISTRADONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.LOTE_REGISTRADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLOTE_REGISTRADONull()
            Me(Me.tablevista_acta_lote_multi_germ.LOTE_REGISTRADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCATEGORIA_REGISTRADONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.CATEGORIA_REGISTRADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCATEGORIA_REGISTRADONull()
            Me(Me.tablevista_acta_lote_multi_germ.CATEGORIA_REGISTRADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsACTA_FIRMADANull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.ACTA_FIRMADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetACTA_FIRMADANull()
            Me(Me.tablevista_acta_lote_multi_germ.ACTA_FIRMADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFICHA_FIRMADONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.FICHA_FIRMADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFICHA_FIRMADONull()
            Me(Me.tablevista_acta_lote_multi_germ.FICHA_FIRMADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCUADRO_FIRMADONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.CUADRO_FIRMADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCUADRO_FIRMADONull()
            Me(Me.tablevista_acta_lote_multi_germ.CUADRO_FIRMADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isarchivo_lote_senasaNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.archivo_lote_senasaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setarchivo_lote_senasaNull()
            Me(Me.tablevista_acta_lote_multi_germ.archivo_lote_senasaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRENDIMIETO_ORO_PESONull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.RENDIMIETO_ORO_PESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRENDIMIETO_ORO_PESONull()
            Me(Me.tablevista_acta_lote_multi_germ.RENDIMIETO_ORO_PESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetidNull()
            Me(Me.tablevista_acta_lote_multi_germ.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isdecha_elaboracion_gNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.decha_elaboracion_gColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setdecha_elaboracion_gNull()
            Me(Me.tablevista_acta_lote_multi_germ.decha_elaboracion_gColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_envaseNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.no_envaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_envaseNull()
            Me(Me.tablevista_acta_lote_multi_germ.no_envaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ispeso_inicial_gNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.peso_inicial_gColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setpeso_inicial_gNull()
            Me(Me.tablevista_acta_lote_multi_germ.peso_inicial_gColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istipo_granelNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.tipo_granelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settipo_granelNull()
            Me(Me.tablevista_acta_lote_multi_germ.tipo_granelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_recibo_gNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.fecha_recibo_gColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_recibo_gNull()
            Me(Me.tablevista_acta_lote_multi_germ.fecha_recibo_gColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_muestreo_gNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.fecha_muestreo_gColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_muestreo_gNull()
            Me(Me.tablevista_acta_lote_multi_germ.fecha_muestreo_gColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ishumedad_finalNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.humedad_finalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Sethumedad_finalNull()
            Me(Me.tablevista_acta_lote_multi_germ.humedad_finalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_evaluacion_gNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.fecha_evaluacion_gColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_evaluacion_gNull()
            Me(Me.tablevista_acta_lote_multi_germ.fecha_evaluacion_gColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istipo_envaseNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.tipo_envaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settipo_envaseNull()
            Me(Me.tablevista_acta_lote_multi_germ.tipo_envaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfase_gNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.fase_gColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfase_gNull()
            Me(Me.tablevista_acta_lote_multi_germ.fase_gColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istamano_maizNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.tamano_maizColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settamano_maizNull()
            Me(Me.tablevista_acta_lote_multi_germ.tamano_maizColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscantidad_inicialNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.cantidad_inicialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcantidad_inicialNull()
            Me(Me.tablevista_acta_lote_multi_germ.cantidad_inicialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscantidad_existenteNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.cantidad_existenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcantidad_existenteNull()
            Me(Me.tablevista_acta_lote_multi_germ.cantidad_existenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_camaraNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.no_camaraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_camaraNull()
            Me(Me.tablevista_acta_lote_multi_germ.no_camaraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsperimetroNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.perimetroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetperimetroNull()
            Me(Me.tablevista_acta_lote_multi_germ.perimetroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscertisemNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.certisemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcertisemNull()
            Me(Me.tablevista_acta_lote_multi_germ.certisemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_certisemNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.fecha_certisemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_certisemNull()
            Me(Me.tablevista_acta_lote_multi_germ.fecha_certisemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isplanta_gNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.planta_gColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setplanta_gNull()
            Me(Me.tablevista_acta_lote_multi_germ.planta_gColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_planta_gNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.fecha_planta_gColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_planta_gNull()
            Me(Me.tablevista_acta_lote_multi_germ.fecha_planta_gColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_puraNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_puraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_puraNull()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_puraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_otro_cultivoNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_otro_cultivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_otro_cultivoNull()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_otro_cultivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_malezaNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_malezaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_malezaNull()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_malezaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ismateria_inerteNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.materia_inerteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setmateria_inerteNull()
            Me(Me.tablevista_acta_lote_multi_germ.materia_inerteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isplantulas_normales_1Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.plantulas_normales_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setplantulas_normales_1Null()
            Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isplantulas_anormales_1Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setplantulas_anormales_1Null()
            Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_muerta_1Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_muerta_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_muerta_1Null()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemillas_duras_1Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semillas_duras_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemillas_duras_1Null()
            Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemillas_debiles_1Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semillas_debiles_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemillas_debiles_1Null()
            Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_mezcla_1Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_mezcla_1Null()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_dias_1Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.no_dias_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_dias_1Null()
            Me(Me.tablevista_acta_lote_multi_germ.no_dias_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isplantulas_normales_2Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.plantulas_normales_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setplantulas_normales_2Null()
            Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isplantulas_anormales_2Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setplantulas_anormales_2Null()
            Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_muerta_2Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_muerta_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_muerta_2Null()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemillas_duras_2Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semillas_duras_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemillas_duras_2Null()
            Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemillas_debiles_2Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semillas_debiles_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemillas_debiles_2Null()
            Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_mezcla_2Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_mezcla_2Null()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_dias_2Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.no_dias_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_dias_2Null()
            Me(Me.tablevista_acta_lote_multi_germ.no_dias_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isplantulas_normales_3Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.plantulas_normales_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setplantulas_normales_3Null()
            Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isplantulas_anormales_3Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setplantulas_anormales_3Null()
            Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_muerta_3Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_muerta_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_muerta_3Null()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemillas_duras_3Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semillas_duras_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemillas_duras_3Null()
            Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemillas_debiles_3Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semillas_debiles_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemillas_debiles_3Null()
            Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_mezcla_3Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_mezcla_3Null()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_dias_3Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.no_dias_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_dias_3Null()
            Me(Me.tablevista_acta_lote_multi_germ.no_dias_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isplantulas_normales_4Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.plantulas_normales_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setplantulas_normales_4Null()
            Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isplantulas_anormales_4Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setplantulas_anormales_4Null()
            Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_muerta_4Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_muerta_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_muerta_4Null()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemillas_duras_4Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semillas_duras_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemillas_duras_4Null()
            Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemillas_debiles_4Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semillas_debiles_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemillas_debiles_4Null()
            Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_mezcla_4Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_mezcla_4Null()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_dias_4Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.no_dias_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_dias_4Null()
            Me(Me.tablevista_acta_lote_multi_germ.no_dias_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isplantulas_normales_totalNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.plantulas_normales_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setplantulas_normales_totalNull()
            Me(Me.tablevista_acta_lote_multi_germ.plantulas_normales_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isplantulas_anormales_totalNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setplantulas_anormales_totalNull()
            Me(Me.tablevista_acta_lote_multi_germ.plantulas_anormales_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_muerta_totalNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_muerta_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_muerta_totalNull()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_muerta_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemillas_duras_totalNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semillas_duras_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemillas_duras_totalNull()
            Me(Me.tablevista_acta_lote_multi_germ.semillas_duras_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemillas_debiles_totalNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semillas_debiles_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemillas_debiles_totalNull()
            Me(Me.tablevista_acta_lote_multi_germ.semillas_debiles_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issemilla_mezcla_totalNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsemilla_mezcla_totalNull()
            Me(Me.tablevista_acta_lote_multi_germ.semilla_mezcla_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isno_dias_totalNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.no_dias_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setno_dias_totalNull()
            Me(Me.tablevista_acta_lote_multi_germ.no_dias_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isporcentaje_germnimacionNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.porcentaje_germnimacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setporcentaje_germnimacionNull()
            Me(Me.tablevista_acta_lote_multi_germ.porcentaje_germnimacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isobservaciones_gNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.observaciones_gColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setobservaciones_gNull()
            Me(Me.tablevista_acta_lote_multi_germ.observaciones_gColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isresponsable_muestreoNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.responsable_muestreoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setresponsable_muestreoNull()
            Me(Me.tablevista_acta_lote_multi_germ.responsable_muestreoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isresponsable_analisisNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.responsable_analisisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setresponsable_analisisNull()
            Me(Me.tablevista_acta_lote_multi_germ.responsable_analisisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsestadoNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.estadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetestadoNull()
            Me(Me.tablevista_acta_lote_multi_germ.estadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdecisionNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.decisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdecisionNull()
            Me(Me.tablevista_acta_lote_multi_germ.decisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isid_2Null() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.id_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setid_2Null()
            Me(Me.tablevista_acta_lote_multi_germ.id_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isgerminacion_firmadaNull() As Boolean
            Return Me.IsNull(Me.tablevista_acta_lote_multi_germ.germinacion_firmadaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setgerminacion_firmadaNull()
            Me(Me.tablevista_acta_lote_multi_germ.germinacion_firmadaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vista_inventarioRow
        Inherits Global.System.Data.DataRow
        
        Private tablevista_inventario As vista_inventarioDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevista_inventario = CType(Me.Table,vista_inventarioDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_acta() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario.fecha_actaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_acta' de la tabla 'vista_inventario' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario.fecha_actaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property categoria_registrado() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario.categoria_registradoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'categoria_registrado' de la tabla 'vista_inventario' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario.categoria_registradoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo_cultivo() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario.tipo_cultivoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tipo_cultivo' de la tabla 'vista_inventario' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario.tipo_cultivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property lote_registrado() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario.lote_registradoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'lote_registrado' de la tabla 'vista_inventario' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario.lote_registradoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property procedencia() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario.procedenciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'procedencia' de la tabla 'vista_inventario' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario.procedenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario.nombre_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_multiplicador' de la tabla 'vista_inventario' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario.nombre_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property humedad_final() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario.humedad_finalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'humedad_final' de la tabla 'vista_inventario' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario.humedad_finalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fase_g() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario.fase_gColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fase_g' de la tabla 'vista_inventario' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario.fase_gColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property variedad() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario.variedadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'variedad' de la tabla 'vista_inventario' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario.variedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property peso_neto_resta() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario.peso_neto_restaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'peso_neto_resta' de la tabla 'vista_inventario' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario.peso_neto_restaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property entrada() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario.entradaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'entrada' de la tabla 'vista_inventario' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario.entradaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property salida() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario.salidaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'salida' de la tabla 'vista_inventario' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario.salidaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_actaNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario.fecha_actaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_actaNull()
            Me(Me.tablevista_inventario.fecha_actaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscategoria_registradoNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario.categoria_registradoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcategoria_registradoNull()
            Me(Me.tablevista_inventario.categoria_registradoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istipo_cultivoNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario.tipo_cultivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settipo_cultivoNull()
            Me(Me.tablevista_inventario.tipo_cultivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Islote_registradoNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario.lote_registradoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setlote_registradoNull()
            Me(Me.tablevista_inventario.lote_registradoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsprocedenciaNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario.procedenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetprocedenciaNull()
            Me(Me.tablevista_inventario.procedenciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario.nombre_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_multiplicadorNull()
            Me(Me.tablevista_inventario.nombre_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ishumedad_finalNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario.humedad_finalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Sethumedad_finalNull()
            Me(Me.tablevista_inventario.humedad_finalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfase_gNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario.fase_gColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfase_gNull()
            Me(Me.tablevista_inventario.fase_gColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsvariedadNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario.variedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetvariedadNull()
            Me(Me.tablevista_inventario.variedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ispeso_neto_restaNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario.peso_neto_restaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setpeso_neto_restaNull()
            Me(Me.tablevista_inventario.peso_neto_restaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsentradaNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario.entradaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetentradaNull()
            Me(Me.tablevista_inventario.entradaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IssalidaNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario.salidaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetsalidaNull()
            Me(Me.tablevista_inventario.salidaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vista_inventario_informeRow
        Inherits Global.System.Data.DataRow
        
        Private tablevista_inventario_informe As vista_inventario_informeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevista_inventario_informe = CType(Me.Table,vista_inventario_informeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property categoria_registrado() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.categoria_registradoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'categoria_registrado' de la tabla 'vista_inventario_infor"& _ 
                            "me' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.categoria_registradoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo_cultivo() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.tipo_cultivoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tipo_cultivo' de la tabla 'vista_inventario_informe' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.tipo_cultivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property variedad() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.variedadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'variedad' de la tabla 'vista_inventario_informe' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.variedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property peso_neto_resta() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.peso_neto_restaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'peso_neto_resta' de la tabla 'vista_inventario_informe' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.peso_neto_restaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property entrada() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.entradaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'entrada' de la tabla 'vista_inventario_informe' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.entradaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property salida() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.salidaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'salida' de la tabla 'vista_inventario_informe' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.salidaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property precio() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.precioColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'precio' de la tabla 'vista_inventario_informe' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.precioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property valor_neto_resta() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.valor_neto_restaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'valor_neto_resta' de la tabla 'vista_inventario_informe' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.valor_neto_restaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fase_g() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.fase_gColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fase_g' de la tabla 'vista_inventario_informe' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.fase_gColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre_multiplicador() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.nombre_multiplicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_multiplicador' de la tabla 'vista_inventario_infor"& _ 
                            "me' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.nombre_multiplicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property procedencia() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.procedenciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'procedencia' de la tabla 'vista_inventario_informe' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.procedenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property lote_registrado() As String
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.lote_registradoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'lote_registrado' de la tabla 'vista_inventario_informe' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.lote_registradoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecha_acta() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevista_inventario_informe.fecha_actaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_acta' de la tabla 'vista_inventario_informe' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevista_inventario_informe.fecha_actaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscategoria_registradoNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.categoria_registradoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcategoria_registradoNull()
            Me(Me.tablevista_inventario_informe.categoria_registradoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istipo_cultivoNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.tipo_cultivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settipo_cultivoNull()
            Me(Me.tablevista_inventario_informe.tipo_cultivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsvariedadNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.variedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetvariedadNull()
            Me(Me.tablevista_inventario_informe.variedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ispeso_neto_restaNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.peso_neto_restaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setpeso_neto_restaNull()
            Me(Me.tablevista_inventario_informe.peso_neto_restaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsentradaNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.entradaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetentradaNull()
            Me(Me.tablevista_inventario_informe.entradaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IssalidaNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.salidaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetsalidaNull()
            Me(Me.tablevista_inventario_informe.salidaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsprecioNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.precioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetprecioNull()
            Me(Me.tablevista_inventario_informe.precioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isvalor_neto_restaNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.valor_neto_restaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setvalor_neto_restaNull()
            Me(Me.tablevista_inventario_informe.valor_neto_restaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfase_gNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.fase_gColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfase_gNull()
            Me(Me.tablevista_inventario_informe.fase_gColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnombre_multiplicadorNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.nombre_multiplicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnombre_multiplicadorNull()
            Me(Me.tablevista_inventario_informe.nombre_multiplicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsprocedenciaNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.procedenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetprocedenciaNull()
            Me(Me.tablevista_inventario_informe.procedenciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Islote_registradoNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.lote_registradoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setlote_registradoNull()
            Me(Me.tablevista_inventario_informe.lote_registradoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfecha_actaNull() As Boolean
            Return Me.IsNull(Me.tablevista_inventario_informe.fecha_actaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfecha_actaNull()
            Me(Me.tablevista_inventario_informe.fecha_actaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class sag_registro_senasaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As sag_registro_senasaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As sag_registro_senasaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As sag_registro_senasaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class sag_registro_senasa1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As sag_registro_senasa1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As sag_registro_senasa1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As sag_registro_senasa1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class sag_registro_multiplicadorRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As sag_registro_multiplicadorRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As sag_registro_multiplicadorRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As sag_registro_multiplicadorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class sag_registro_loteRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As sag_registro_loteRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As sag_registro_loteRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As sag_registro_loteRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class vista_multi_loteRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vista_multi_loteRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As vista_multi_loteRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As vista_multi_loteRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class vista_acta_lote_multiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vista_acta_lote_multiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As vista_acta_lote_multiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As vista_acta_lote_multiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class vista_ficha_informeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vista_ficha_informeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As vista_ficha_informeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As vista_ficha_informeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class vista_acta_lote_multi_germRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vista_acta_lote_multi_germRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As vista_acta_lote_multi_germRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As vista_acta_lote_multi_germRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class vista_inventarioRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vista_inventarioRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As vista_inventarioRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As vista_inventarioRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class vista_inventario_informeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vista_inventario_informeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As vista_inventario_informeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As vista_inventario_informeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSetMultiplicadorTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class sag_registro_senasaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "sag_registro_senasa"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("nombre_productor", "nombre_productor")
            tableMapping.ColumnMappings.Add("representante_legar", "representante_legar")
            tableMapping.ColumnMappings.Add("identidad_productor", "identidad_productor")
            tableMapping.ColumnMappings.Add("extendida", "extendida")
            tableMapping.ColumnMappings.Add("residencia_productor", "residencia_productor")
            tableMapping.ColumnMappings.Add("telefono_productor", "telefono_productor")
            tableMapping.ColumnMappings.Add("no_registro_productor", "no_registro_productor")
            tableMapping.ColumnMappings.Add("nombre_multiplicador", "nombre_multiplicador")
            tableMapping.ColumnMappings.Add("cedula_multiplicador", "cedula_multiplicador")
            tableMapping.ColumnMappings.Add("telefono_multiplicador", "telefono_multiplicador")
            tableMapping.ColumnMappings.Add("nombre_finca", "nombre_finca")
            tableMapping.ColumnMappings.Add("nombre_persona_finca", "nombre_persona_finca")
            tableMapping.ColumnMappings.Add("departamento", "departamento")
            tableMapping.ColumnMappings.Add("municipio", "municipio")
            tableMapping.ColumnMappings.Add("aldea", "aldea")
            tableMapping.ColumnMappings.Add("caserio", "caserio")
            tableMapping.ColumnMappings.Add("nombre_lote", "nombre_lote")
            tableMapping.ColumnMappings.Add("croquis", "croquis")
            tableMapping.ColumnMappings.Add("cultivo", "cultivo")
            tableMapping.ColumnMappings.Add("categoria", "categoria")
            tableMapping.ColumnMappings.Add("variedad", "variedad")
            tableMapping.ColumnMappings.Add("productor", "productor")
            tableMapping.ColumnMappings.Add("no_lote", "no_lote")
            tableMapping.ColumnMappings.Add("fecha_analisis", "fecha_analisis")
            tableMapping.ColumnMappings.Add("ano_produ", "ano_produ")
            tableMapping.ColumnMappings.Add("categoria_2", "categoria_2")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            tableMapping.ColumnMappings.Add("cultivo_2", "cultivo_2")
            tableMapping.ColumnMappings.Add("variedad_2", "variedad_2")
            tableMapping.ColumnMappings.Add("superficie_sembrar", "superficie_sembrar")
            tableMapping.ColumnMappings.Add("fecha_aproxi_siembra", "fecha_aproxi_siembra")
            tableMapping.ColumnMappings.Add("fecha_aproxi_cosecha", "fecha_aproxi_cosecha")
            tableMapping.ColumnMappings.Add("produc_estima_ha", "produc_estima_ha")
            tableMapping.ColumnMappings.Add("destino", "destino")
            tableMapping.ColumnMappings.Add("certificado_origen_semilla", "certificado_origen_semilla")
            tableMapping.ColumnMappings.Add("factura_comercio", "factura_comercio")
            tableMapping.ColumnMappings.Add("estado", "estado")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `sag_registro_senasa` WHERE ((`Id` = @p1))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `sag_registro_senasa` (`nombre_productor`, `representante_legar`, `id"& _ 
                "entidad_productor`, `extendida`, `residencia_productor`, `telefono_productor`, `"& _ 
                "no_registro_productor`, `nombre_multiplicador`, `cedula_multiplicador`, `telefon"& _ 
                "o_multiplicador`, `nombre_finca`, `nombre_persona_finca`, `departamento`, `munic"& _ 
                "ipio`, `aldea`, `caserio`, `nombre_lote`, `croquis`, `cultivo`, `categoria`, `va"& _ 
                "riedad`, `productor`, `no_lote`, `fecha_analisis`, `ano_produ`, `categoria_2`, `"& _ 
                "tipo`, `cultivo_2`, `variedad_2`, `superficie_sembrar`, `fecha_aproxi_siembra`, "& _ 
                "`fecha_aproxi_cosecha`, `produc_estima_ha`, `destino`, `certificado_origen_semil"& _ 
                "la`, `factura_comercio`, `estado`) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p"& _ 
                "8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, "& _ 
                "@p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p"& _ 
                "35, @p36, @p37)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "representante_legar"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "identidad_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p4"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "extendida"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "residencia_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p6"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p7"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "no_registro_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p8"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_multiplicador"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p9"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cedula_multiplicador"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p10"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_multiplicador"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p11"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_finca"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p12"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_persona_finca"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p13"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "departamento"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p14"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "municipio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p15"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "aldea"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p16"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "caserio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p17"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_lote"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p18"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "croquis"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p19"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cultivo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p20"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "categoria"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p21"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "variedad"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p22"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p23"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "no_lote"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p24"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_analisis"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p25"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ano_produ"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p26"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "categoria_2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p27"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p28"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cultivo_2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p29"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "variedad_2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p30"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "superficie_sembrar"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p31"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_aproxi_siembra"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p32"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_aproxi_cosecha"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p33"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "produc_estima_ha"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p34"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "destino"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p35"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "certificado_origen_semilla"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p36"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "factura_comercio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p37"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `sag_registro_senasa` SET `nombre_productor` = @p1, `representante_legar` "& _ 
                "= @p2, `identidad_productor` = @p3, `extendida` = @p4, `residencia_productor` = "& _ 
                "@p5, `telefono_productor` = @p6, `no_registro_productor` = @p7, `nombre_multipli"& _ 
                "cador` = @p8, `cedula_multiplicador` = @p9, `telefono_multiplicador` = @p10, `no"& _ 
                "mbre_finca` = @p11, `nombre_persona_finca` = @p12, `departamento` = @p13, `munic"& _ 
                "ipio` = @p14, `aldea` = @p15, `caserio` = @p16, `nombre_lote` = @p17, `croquis` "& _ 
                "= @p18, `cultivo` = @p19, `categoria` = @p20, `variedad` = @p21, `productor` = @"& _ 
                "p22, `no_lote` = @p23, `fecha_analisis` = @p24, `ano_produ` = @p25, `categoria_2"& _ 
                "` = @p26, `tipo` = @p27, `cultivo_2` = @p28, `variedad_2` = @p29, `superficie_se"& _ 
                "mbrar` = @p30, `fecha_aproxi_siembra` = @p31, `fecha_aproxi_cosecha` = @p32, `pr"& _ 
                "oduc_estima_ha` = @p33, `destino` = @p34, `certificado_origen_semilla` = @p35, `"& _ 
                "factura_comercio` = @p36, `estado` = @p37 WHERE ((`Id` = @p38))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "representante_legar"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "identidad_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p4"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "extendida"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "residencia_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p6"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p7"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "no_registro_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p8"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_multiplicador"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p9"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cedula_multiplicador"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p10"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_multiplicador"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p11"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_finca"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p12"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_persona_finca"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p13"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "departamento"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p14"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "municipio"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p15"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "aldea"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p16"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "caserio"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p17"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_lote"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p18"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "croquis"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p19"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cultivo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p20"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "categoria"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p21"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "variedad"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p22"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p23"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "no_lote"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p24"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_analisis"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p25"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ano_produ"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p26"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "categoria_2"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p27"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p28"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cultivo_2"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p29"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "variedad_2"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p30"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "superficie_sembrar"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p31"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_aproxi_siembra"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p32"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_aproxi_cosecha"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p33"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "produc_estima_ha"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p34"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "destino"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p35"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "certificado_origen_semilla"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p36"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "factura_comercio"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p37"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p38"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("sag_dictaConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT sag_registro_senasa.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     sag_registro_senasa"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetMultiplicador.sag_registro_senasaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetMultiplicador.sag_registro_senasaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetMultiplicador.sag_registro_senasaDataTable = New DataSetMultiplicador.sag_registro_senasaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetMultiplicador.sag_registro_senasaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetMultiplicador) As Integer
            Return Me.Adapter.Update(dataSet, "sag_registro_senasa")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal p1 As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(p1,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal p1 As String,  _
                    ByVal p2 As String,  _
                    ByVal p3 As String,  _
                    ByVal p4 As Global.System.Nullable(Of Date),  _
                    ByVal p5 As String,  _
                    ByVal p6 As String,  _
                    ByVal p7 As String,  _
                    ByVal p8 As String,  _
                    ByVal p9 As String,  _
                    ByVal p10 As String,  _
                    ByVal p11 As String,  _
                    ByVal p12 As String,  _
                    ByVal p13 As String,  _
                    ByVal p14 As String,  _
                    ByVal p15 As String,  _
                    ByVal p16 As String,  _
                    ByVal p17 As String,  _
                    ByVal p18 As Object,  _
                    ByVal p19 As String,  _
                    ByVal p20 As String,  _
                    ByVal p21 As String,  _
                    ByVal p22 As String,  _
                    ByVal p23 As String,  _
                    ByVal p24 As Global.System.Nullable(Of Date),  _
                    ByVal p25 As String,  _
                    ByVal p26 As String,  _
                    ByVal p27 As String,  _
                    ByVal p28 As String,  _
                    ByVal p29 As String,  _
                    ByVal p30 As Global.System.Nullable(Of Decimal),  _
                    ByVal p31 As Global.System.Nullable(Of Date),  _
                    ByVal p32 As Global.System.Nullable(Of Date),  _
                    ByVal p33 As Global.System.Nullable(Of Decimal),  _
                    ByVal p34 As String,  _
                    ByVal p35 As Object,  _
                    ByVal p36 As Object,  _
                    ByVal p37 As String) As Integer
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(p1,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(p2,String)
            End If
            If (p3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(p3,String)
            End If
            If (p4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(p4.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(p5,String)
            End If
            If (p6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(p6,String)
            End If
            If (p7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(p7,String)
            End If
            If (p8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(p8,String)
            End If
            If (p9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p9,String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(p10,String)
            End If
            If (p11 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(p11,String)
            End If
            If (p12 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(p12,String)
            End If
            If (p13 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(p13,String)
            End If
            If (p14 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(p14,String)
            End If
            If (p15 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(p15,String)
            End If
            If (p16 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(p16,String)
            End If
            If (p17 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(p17,String)
            End If
            If (p18 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(p18,Object)
            End If
            If (p19 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(p19,String)
            End If
            If (p20 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(p20,String)
            End If
            If (p21 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(p21,String)
            End If
            If (p22 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(p22,String)
            End If
            If (p23 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(p23,String)
            End If
            If (p24.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(p24.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (p25 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(p25,String)
            End If
            If (p26 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(p26,String)
            End If
            If (p27 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(p27,String)
            End If
            If (p28 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(p28,String)
            End If
            If (p29 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(p29,String)
            End If
            If (p30.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(p30.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (p31.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(p31.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (p32.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(p32.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (p33.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(p33.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (p34 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(p34,String)
            End If
            If (p35 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(p35,Object)
            End If
            If (p36 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(p36,Object)
            End If
            If (p37 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(p37,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal p1 As String,  _
                    ByVal p2 As String,  _
                    ByVal p3 As String,  _
                    ByVal p4 As Global.System.Nullable(Of Date),  _
                    ByVal p5 As String,  _
                    ByVal p6 As String,  _
                    ByVal p7 As String,  _
                    ByVal p8 As String,  _
                    ByVal p9 As String,  _
                    ByVal p10 As String,  _
                    ByVal p11 As String,  _
                    ByVal p12 As String,  _
                    ByVal p13 As String,  _
                    ByVal p14 As String,  _
                    ByVal p15 As String,  _
                    ByVal p16 As String,  _
                    ByVal p17 As String,  _
                    ByVal p18 As Object,  _
                    ByVal p19 As String,  _
                    ByVal p20 As String,  _
                    ByVal p21 As String,  _
                    ByVal p22 As String,  _
                    ByVal p23 As String,  _
                    ByVal p24 As Global.System.Nullable(Of Date),  _
                    ByVal p25 As String,  _
                    ByVal p26 As String,  _
                    ByVal p27 As String,  _
                    ByVal p28 As String,  _
                    ByVal p29 As String,  _
                    ByVal p30 As Global.System.Nullable(Of Decimal),  _
                    ByVal p31 As Global.System.Nullable(Of Date),  _
                    ByVal p32 As Global.System.Nullable(Of Date),  _
                    ByVal p33 As Global.System.Nullable(Of Decimal),  _
                    ByVal p34 As String,  _
                    ByVal p35 As Object,  _
                    ByVal p36 As Object,  _
                    ByVal p37 As String,  _
                    ByVal p38 As Integer) As Integer
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(p1,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(p2,String)
            End If
            If (p3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(p3,String)
            End If
            If (p4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(p4.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(p5,String)
            End If
            If (p6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(p6,String)
            End If
            If (p7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(p7,String)
            End If
            If (p8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(p8,String)
            End If
            If (p9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p9,String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(p10,String)
            End If
            If (p11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(p11,String)
            End If
            If (p12 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(p12,String)
            End If
            If (p13 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(p13,String)
            End If
            If (p14 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(p14,String)
            End If
            If (p15 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(p15,String)
            End If
            If (p16 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(p16,String)
            End If
            If (p17 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(p17,String)
            End If
            If (p18 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(p18,Object)
            End If
            If (p19 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(p19,String)
            End If
            If (p20 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(p20,String)
            End If
            If (p21 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(p21,String)
            End If
            If (p22 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(p22,String)
            End If
            If (p23 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(p23,String)
            End If
            If (p24.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(p24.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (p25 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(p25,String)
            End If
            If (p26 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(p26,String)
            End If
            If (p27 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(p27,String)
            End If
            If (p28 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(p28,String)
            End If
            If (p29 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(p29,String)
            End If
            If (p30.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(p30.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (p31.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(p31.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (p32.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(p32.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (p33.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(p33.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (p34 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(p34,String)
            End If
            If (p35 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(p35,Object)
            End If
            If (p36 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(p36,Object)
            End If
            If (p37 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(p37,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(p38,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class sag_registro_senasa1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "sag_registro_senasa1"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("nombre_productor", "nombre_productor")
            tableMapping.ColumnMappings.Add("representante_legal", "representante_legal")
            tableMapping.ColumnMappings.Add("identidad_productor", "identidad_productor")
            tableMapping.ColumnMappings.Add("extendida", "extendida")
            tableMapping.ColumnMappings.Add("residencia_productor", "residencia_productor")
            tableMapping.ColumnMappings.Add("telefono_productor", "telefono_productor")
            tableMapping.ColumnMappings.Add("no_registro_productor", "no_registro_productor")
            tableMapping.ColumnMappings.Add("nombre_multiplicador", "nombre_multiplicador")
            tableMapping.ColumnMappings.Add("cedula_multiplicador", "cedula_multiplicador")
            tableMapping.ColumnMappings.Add("telefono_multiplicador", "telefono_multiplicador")
            tableMapping.ColumnMappings.Add("nombre_finca", "nombre_finca")
            tableMapping.ColumnMappings.Add("nombre_persona_finca", "nombre_persona_finca")
            tableMapping.ColumnMappings.Add("departamento", "departamento")
            tableMapping.ColumnMappings.Add("municipio", "municipio")
            tableMapping.ColumnMappings.Add("aldea", "aldea")
            tableMapping.ColumnMappings.Add("caserio", "caserio")
            tableMapping.ColumnMappings.Add("nombre_lote", "nombre_lote")
            tableMapping.ColumnMappings.Add("croquis", "croquis")
            tableMapping.ColumnMappings.Add("tipo_cultivo", "tipo_cultivo")
            tableMapping.ColumnMappings.Add("variedad", "variedad")
            tableMapping.ColumnMappings.Add("productor", "productor")
            tableMapping.ColumnMappings.Add("no_lote", "no_lote")
            tableMapping.ColumnMappings.Add("fecha_analisis", "fecha_analisis")
            tableMapping.ColumnMappings.Add("ano_produ", "ano_produ")
            tableMapping.ColumnMappings.Add("categoria_semilla", "categoria_semilla")
            tableMapping.ColumnMappings.Add("tipo_semilla", "tipo_semilla")
            tableMapping.ColumnMappings.Add("cultivo_semilla", "cultivo_semilla")
            tableMapping.ColumnMappings.Add("variedad_maiz", "variedad_maiz")
            tableMapping.ColumnMappings.Add("variedad_frijol", "variedad_frijol")
            tableMapping.ColumnMappings.Add("superficie_hectarea", "superficie_hectarea")
            tableMapping.ColumnMappings.Add("fecha_aprox_siembra", "fecha_aprox_siembra")
            tableMapping.ColumnMappings.Add("fecha_aprox_cosecha", "fecha_aprox_cosecha")
            tableMapping.ColumnMappings.Add("produccion_est_hectareas", "produccion_est_hectareas")
            tableMapping.ColumnMappings.Add("destino", "destino")
            tableMapping.ColumnMappings.Add("certificado_origen_semilla", "certificado_origen_semilla")
            tableMapping.ColumnMappings.Add("factura_comercio", "factura_comercio")
            tableMapping.ColumnMappings.Add("estado", "estado")
            tableMapping.ColumnMappings.Add("categoria_origen", "categoria_origen")
            tableMapping.ColumnMappings.Add("fecha_acta", "fecha_acta")
            tableMapping.ColumnMappings.Add("porcentaje_humedad", "porcentaje_humedad")
            tableMapping.ColumnMappings.Add("no_sacos", "no_sacos")
            tableMapping.ColumnMappings.Add("peso_humedo_QQ", "peso_humedo_QQ")
            tableMapping.ColumnMappings.Add("peso_materia_prima_QQ_porce_humedad", "peso_materia_prima_QQ_porce_humedad")
            tableMapping.ColumnMappings.Add("semilla_QQ_oro", "semilla_QQ_oro")
            tableMapping.ColumnMappings.Add("semilla_QQ_consumo", "semilla_QQ_consumo")
            tableMapping.ColumnMappings.Add("semilla_QQ_basura", "semilla_QQ_basura")
            tableMapping.ColumnMappings.Add("semilla_QQ_total", "semilla_QQ_total")
            tableMapping.ColumnMappings.Add("observaciones", "observaciones")
            tableMapping.ColumnMappings.Add("tara", "tara")
            tableMapping.ColumnMappings.Add("peso_neto", "peso_neto")
            tableMapping.ColumnMappings.Add("ciclo_acta", "ciclo_acta")
            tableMapping.ColumnMappings.Add("peso_lb", "peso_lb")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `sag_registro_senasa` WHERE ((`Id` = @p1))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `sag_registro_senasa` (`nombre_productor`, `representante_legal`, `id"& _ 
                "entidad_productor`, `telefono_productor`, `departamento`, `municipio`, `aldea`, "& _ 
                "`caserio`, `categoria_origen`, `tipo_cultivo`, `variedad`, `no_lote`, `fecha_act"& _ 
                "a`, `porcentaje_humedad`, `estado`, `no_sacos`, `peso_humedo_QQ`, `peso_materia_"& _ 
                "prima_QQ_porce_humedad`, `semilla_QQ_oro`, `semilla_QQ_consumo`, `semilla_QQ_bas"& _ 
                "ura`, `semilla_QQ_total`, `observaciones`, `tara`, `peso_neto`, `ciclo_acta`, `p"& _ 
                "eso_lb`) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, "& _ 
                "@p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p"& _ 
                "26, @p27)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "representante_legal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "identidad_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p4"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "departamento"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p6"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "municipio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p7"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "aldea"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p8"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "caserio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p9"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "categoria_origen"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p10"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo_cultivo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p11"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "variedad"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p12"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "no_lote"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p13"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_acta"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p14"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "porcentaje_humedad"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p15"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p16"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "no_sacos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p17"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "peso_humedo_QQ"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p18"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "peso_materia_prima_QQ_porce_humedad"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p19"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "semilla_QQ_oro"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p20"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "semilla_QQ_consumo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p21"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "semilla_QQ_basura"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p22"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "semilla_QQ_total"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p23"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "observaciones"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p24"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "tara"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p25"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "peso_neto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p26"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ciclo_acta"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p27"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "peso_lb"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `sag_registro_senasa` SET `nombre_productor` = @p1, `representante_legal` "& _ 
                "= @p2, `identidad_productor` = @p3, `telefono_productor` = @p4, `departamento` ="& _ 
                " @p5, `municipio` = @p6, `aldea` = @p7, `caserio` = @p8, `categoria_origen` = @p"& _ 
                "9, `tipo_cultivo` = @p10, `variedad` = @p11, `no_lote` = @p12, `fecha_acta` = @p"& _ 
                "13, `porcentaje_humedad` = @p14, `estado` = @p15, `no_sacos` = @p16, `peso_humed"& _ 
                "o_QQ` = @p17, `peso_materia_prima_QQ_porce_humedad` = @p18, `semilla_QQ_oro` = @"& _ 
                "p19, `semilla_QQ_consumo` = @p20, `semilla_QQ_basura` = @p21, `semilla_QQ_total`"& _ 
                " = @p22, `observaciones` = @p23, `tara` = @p24, `peso_neto` = @p25, `ciclo_acta`"& _ 
                " = @p26, `peso_lb` = @p27 WHERE ((`Id` = @p28))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "representante_legal"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "identidad_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p4"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "departamento"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p6"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "municipio"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p7"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "aldea"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p8"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "caserio"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p9"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "categoria_origen"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p10"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo_cultivo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p11"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "variedad"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p12"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "no_lote"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p13"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_acta"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p14"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "porcentaje_humedad"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p15"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p16"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "no_sacos"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p17"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "peso_humedo_QQ"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p18"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "peso_materia_prima_QQ_porce_humedad"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p19"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "semilla_QQ_oro"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p20"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "semilla_QQ_consumo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p21"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "semilla_QQ_basura"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p22"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "semilla_QQ_total"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p23"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "observaciones"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p24"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "tara"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p25"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "peso_neto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p26"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ciclo_acta"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p27"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "peso_lb"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p28"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("sag_dictaConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT sag_registro_senasa.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     sag_registro_senasa"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetMultiplicador.sag_registro_senasa1DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetMultiplicador.sag_registro_senasa1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetMultiplicador.sag_registro_senasa1DataTable = New DataSetMultiplicador.sag_registro_senasa1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetMultiplicador.sag_registro_senasa1DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetMultiplicador) As Integer
            Return Me.Adapter.Update(dataSet, "sag_registro_senasa1")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal p1 As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(p1,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal p1 As String,  _
                    ByVal p2 As String,  _
                    ByVal p3 As String,  _
                    ByVal p4 As String,  _
                    ByVal p5 As String,  _
                    ByVal p6 As String,  _
                    ByVal p7 As String,  _
                    ByVal p8 As String,  _
                    ByVal p9 As String,  _
                    ByVal p10 As String,  _
                    ByVal p11 As String,  _
                    ByVal p12 As String,  _
                    ByVal p13 As Global.System.Nullable(Of Date),  _
                    ByVal p14 As Global.System.Nullable(Of Decimal),  _
                    ByVal p15 As String,  _
                    ByVal p16 As Global.System.Nullable(Of Integer),  _
                    ByVal p17 As Global.System.Nullable(Of Decimal),  _
                    ByVal p18 As Global.System.Nullable(Of Decimal),  _
                    ByVal p19 As Global.System.Nullable(Of Decimal),  _
                    ByVal p20 As Global.System.Nullable(Of Decimal),  _
                    ByVal p21 As Global.System.Nullable(Of Decimal),  _
                    ByVal p22 As Global.System.Nullable(Of Decimal),  _
                    ByVal p23 As String,  _
                    ByVal p24 As Global.System.Nullable(Of Decimal),  _
                    ByVal p25 As Global.System.Nullable(Of Decimal),  _
                    ByVal p26 As String,  _
                    ByVal p27 As Global.System.Nullable(Of Decimal)) As Integer
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(p1,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(p2,String)
            End If
            If (p3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(p3,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(p4,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(p5,String)
            End If
            If (p6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(p6,String)
            End If
            If (p7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(p7,String)
            End If
            If (p8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(p8,String)
            End If
            If (p9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p9,String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(p10,String)
            End If
            If (p11 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(p11,String)
            End If
            If (p12 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(p12,String)
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(p13.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(p14.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (p15 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(p15,String)
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(p16.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(p17.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p18.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(p18.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(p19.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(p20.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (p21.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(p21.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(p22.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (p23 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(p23,String)
            End If
            If (p24.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(p24.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(p25.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (p26 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(p26,String)
            End If
            If (p27.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(p27.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal p1 As String,  _
                    ByVal p2 As String,  _
                    ByVal p3 As String,  _
                    ByVal p4 As String,  _
                    ByVal p5 As String,  _
                    ByVal p6 As String,  _
                    ByVal p7 As String,  _
                    ByVal p8 As String,  _
                    ByVal p9 As String,  _
                    ByVal p10 As String,  _
                    ByVal p11 As String,  _
                    ByVal p12 As String,  _
                    ByVal p13 As Global.System.Nullable(Of Date),  _
                    ByVal p14 As Global.System.Nullable(Of Decimal),  _
                    ByVal p15 As String,  _
                    ByVal p16 As Global.System.Nullable(Of Integer),  _
                    ByVal p17 As Global.System.Nullable(Of Decimal),  _
                    ByVal p18 As Global.System.Nullable(Of Decimal),  _
                    ByVal p19 As Global.System.Nullable(Of Decimal),  _
                    ByVal p20 As Global.System.Nullable(Of Decimal),  _
                    ByVal p21 As Global.System.Nullable(Of Decimal),  _
                    ByVal p22 As Global.System.Nullable(Of Decimal),  _
                    ByVal p23 As String,  _
                    ByVal p24 As Global.System.Nullable(Of Decimal),  _
                    ByVal p25 As Global.System.Nullable(Of Decimal),  _
                    ByVal p26 As String,  _
                    ByVal p27 As Global.System.Nullable(Of Decimal),  _
                    ByVal p28 As Integer) As Integer
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(p1,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(p2,String)
            End If
            If (p3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(p3,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(p4,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(p5,String)
            End If
            If (p6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(p6,String)
            End If
            If (p7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(p7,String)
            End If
            If (p8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(p8,String)
            End If
            If (p9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p9,String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(p10,String)
            End If
            If (p11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(p11,String)
            End If
            If (p12 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(p12,String)
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(p13.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(p14.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (p15 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(p15,String)
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(p16.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(p17.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p18.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(p18.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(p19.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(p20.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (p21.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(p21.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(p22.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (p23 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(p23,String)
            End If
            If (p24.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(p24.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(p25.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (p26 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(p26,String)
            End If
            If (p27.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(p27.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(p28,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class sag_registro_multiplicadorTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "sag_registro_multiplicador"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("nombre_productor", "nombre_productor")
            tableMapping.ColumnMappings.Add("representante_legal", "representante_legal")
            tableMapping.ColumnMappings.Add("identidad_productor", "identidad_productor")
            tableMapping.ColumnMappings.Add("extendida", "extendida")
            tableMapping.ColumnMappings.Add("residencia_productor", "residencia_productor")
            tableMapping.ColumnMappings.Add("telefono_productor", "telefono_productor")
            tableMapping.ColumnMappings.Add("no_registro_productor", "no_registro_productor")
            tableMapping.ColumnMappings.Add("nombre_multiplicador", "nombre_multiplicador")
            tableMapping.ColumnMappings.Add("cedula_multiplicador", "cedula_multiplicador")
            tableMapping.ColumnMappings.Add("telefono_multiplicador", "telefono_multiplicador")
            tableMapping.ColumnMappings.Add("nombre_finca", "nombre_finca")
            tableMapping.ColumnMappings.Add("nombre_persona_finca", "nombre_persona_finca")
            tableMapping.ColumnMappings.Add("departamento", "departamento")
            tableMapping.ColumnMappings.Add("municipio", "municipio")
            tableMapping.ColumnMappings.Add("aldea", "aldea")
            tableMapping.ColumnMappings.Add("caserio", "caserio")
            tableMapping.ColumnMappings.Add("nombre_lote", "nombre_lote")
            tableMapping.ColumnMappings.Add("croquis", "croquis")
            tableMapping.ColumnMappings.Add("estado", "estado")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `sag_registro_multiplicador` WHERE ((`Id` = @p1))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `sag_registro_multiplicador` (`nombre_productor`, `representante_lega"& _ 
                "l`, `identidad_productor`, `extendida`, `residencia_productor`, `telefono_produc"& _ 
                "tor`, `no_registro_productor`, `nombre_multiplicador`, `cedula_multiplicador`, `"& _ 
                "telefono_multiplicador`, `nombre_finca`, `nombre_persona_finca`, `departamento`,"& _ 
                " `municipio`, `aldea`, `caserio`, `nombre_lote`, `croquis`, `estado`) VALUES (@p"& _ 
                "1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @"& _ 
                "p16, @p17, @p18, @p19)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "representante_legal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "identidad_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p4"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "extendida"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "residencia_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p6"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p7"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "no_registro_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p8"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_multiplicador"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p9"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cedula_multiplicador"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p10"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_multiplicador"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p11"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_finca"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p12"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_persona_finca"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p13"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "departamento"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p14"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "municipio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p15"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "aldea"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p16"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "caserio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p17"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_lote"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p18"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "croquis"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p19"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `sag_registro_multiplicador` SET `nombre_productor` = @p1, `representante_"& _ 
                "legal` = @p2, `identidad_productor` = @p3, `extendida` = @p4, `residencia_produc"& _ 
                "tor` = @p5, `telefono_productor` = @p6, `no_registro_productor` = @p7, `nombre_m"& _ 
                "ultiplicador` = @p8, `cedula_multiplicador` = @p9, `telefono_multiplicador` = @p"& _ 
                "10, `nombre_finca` = @p11, `nombre_persona_finca` = @p12, `departamento` = @p13,"& _ 
                " `municipio` = @p14, `aldea` = @p15, `caserio` = @p16, `nombre_lote` = @p17, `cr"& _ 
                "oquis` = @p18, `estado` = @p19 WHERE ((`Id` = @p20))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "representante_legal"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "identidad_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p4"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "extendida"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "residencia_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p6"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p7"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "no_registro_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p8"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_multiplicador"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p9"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cedula_multiplicador"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p10"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_multiplicador"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p11"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_finca"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p12"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_persona_finca"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p13"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "departamento"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p14"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "municipio"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p15"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "aldea"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p16"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "caserio"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p17"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_lote"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p18"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "croquis"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p19"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p20"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("sag_dictaConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT sag_registro_multiplicador.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     sag_registro_multiplicador"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetMultiplicador.sag_registro_multiplicadorDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetMultiplicador.sag_registro_multiplicadorDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetMultiplicador.sag_registro_multiplicadorDataTable = New DataSetMultiplicador.sag_registro_multiplicadorDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetMultiplicador.sag_registro_multiplicadorDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetMultiplicador) As Integer
            Return Me.Adapter.Update(dataSet, "sag_registro_multiplicador")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal p1 As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(p1,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal p1 As String,  _
                    ByVal p2 As String,  _
                    ByVal p3 As String,  _
                    ByVal p4 As Global.System.Nullable(Of Date),  _
                    ByVal p5 As String,  _
                    ByVal p6 As String,  _
                    ByVal p7 As String,  _
                    ByVal p8 As String,  _
                    ByVal p9 As String,  _
                    ByVal p10 As String,  _
                    ByVal p11 As String,  _
                    ByVal p12 As String,  _
                    ByVal p13 As String,  _
                    ByVal p14 As String,  _
                    ByVal p15 As String,  _
                    ByVal p16 As String,  _
                    ByVal p17 As String,  _
                    ByVal p18 As Object,  _
                    ByVal p19 As String) As Integer
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(p1,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(p2,String)
            End If
            If (p3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(p3,String)
            End If
            If (p4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(p4.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(p5,String)
            End If
            If (p6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(p6,String)
            End If
            If (p7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(p7,String)
            End If
            If (p8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(p8,String)
            End If
            If (p9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p9,String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(p10,String)
            End If
            If (p11 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(p11,String)
            End If
            If (p12 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(p12,String)
            End If
            If (p13 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(p13,String)
            End If
            If (p14 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(p14,String)
            End If
            If (p15 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(p15,String)
            End If
            If (p16 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(p16,String)
            End If
            If (p17 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(p17,String)
            End If
            If (p18 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(p18,Object)
            End If
            If (p19 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(p19,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal p1 As String,  _
                    ByVal p2 As String,  _
                    ByVal p3 As String,  _
                    ByVal p4 As Global.System.Nullable(Of Date),  _
                    ByVal p5 As String,  _
                    ByVal p6 As String,  _
                    ByVal p7 As String,  _
                    ByVal p8 As String,  _
                    ByVal p9 As String,  _
                    ByVal p10 As String,  _
                    ByVal p11 As String,  _
                    ByVal p12 As String,  _
                    ByVal p13 As String,  _
                    ByVal p14 As String,  _
                    ByVal p15 As String,  _
                    ByVal p16 As String,  _
                    ByVal p17 As String,  _
                    ByVal p18 As Object,  _
                    ByVal p19 As String,  _
                    ByVal p20 As Integer) As Integer
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(p1,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(p2,String)
            End If
            If (p3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(p3,String)
            End If
            If (p4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(p4.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(p5,String)
            End If
            If (p6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(p6,String)
            End If
            If (p7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(p7,String)
            End If
            If (p8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(p8,String)
            End If
            If (p9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p9,String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(p10,String)
            End If
            If (p11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(p11,String)
            End If
            If (p12 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(p12,String)
            End If
            If (p13 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(p13,String)
            End If
            If (p14 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(p14,String)
            End If
            If (p15 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(p15,String)
            End If
            If (p16 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(p16,String)
            End If
            If (p17 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(p17,String)
            End If
            If (p18 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(p18,Object)
            End If
            If (p19 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(p19,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(p20,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class sag_registro_loteTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "sag_registro_lote"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("nombre_productor", "nombre_productor")
            tableMapping.ColumnMappings.Add("representante_legal", "representante_legal")
            tableMapping.ColumnMappings.Add("identidad_productor", "identidad_productor")
            tableMapping.ColumnMappings.Add("extendida", "extendida")
            tableMapping.ColumnMappings.Add("residencia_productor", "residencia_productor")
            tableMapping.ColumnMappings.Add("telefono_productor", "telefono_productor")
            tableMapping.ColumnMappings.Add("no_registro_productor", "no_registro_productor")
            tableMapping.ColumnMappings.Add("nombre_multiplicador", "nombre_multiplicador")
            tableMapping.ColumnMappings.Add("cedula_multiplicador", "cedula_multiplicador")
            tableMapping.ColumnMappings.Add("telefono_multiplicador", "telefono_multiplicador")
            tableMapping.ColumnMappings.Add("nombre_finca", "nombre_finca")
            tableMapping.ColumnMappings.Add("nombre_persona_finca", "nombre_persona_finca")
            tableMapping.ColumnMappings.Add("departamento", "departamento")
            tableMapping.ColumnMappings.Add("municipio", "municipio")
            tableMapping.ColumnMappings.Add("aldea", "aldea")
            tableMapping.ColumnMappings.Add("caserio", "caserio")
            tableMapping.ColumnMappings.Add("nombre_lote", "nombre_lote")
            tableMapping.ColumnMappings.Add("categoria_origen", "categoria_origen")
            tableMapping.ColumnMappings.Add("tipo_cultivo", "tipo_cultivo")
            tableMapping.ColumnMappings.Add("variedad", "variedad")
            tableMapping.ColumnMappings.Add("productor", "productor")
            tableMapping.ColumnMappings.Add("no_lote", "no_lote")
            tableMapping.ColumnMappings.Add("fecha_analisis", "fecha_analisis")
            tableMapping.ColumnMappings.Add("ano_produ", "ano_produ")
            tableMapping.ColumnMappings.Add("categoria_semilla", "categoria_semilla")
            tableMapping.ColumnMappings.Add("tipo_semilla", "tipo_semilla")
            tableMapping.ColumnMappings.Add("cultivo_semilla", "cultivo_semilla")
            tableMapping.ColumnMappings.Add("variedad_maiz", "variedad_maiz")
            tableMapping.ColumnMappings.Add("variedad_frijol", "variedad_frijol")
            tableMapping.ColumnMappings.Add("superficie_hectarea", "superficie_hectarea")
            tableMapping.ColumnMappings.Add("fecha_aprox_siembra", "fecha_aprox_siembra")
            tableMapping.ColumnMappings.Add("fecha_aprox_cosecha", "fecha_aprox_cosecha")
            tableMapping.ColumnMappings.Add("produccion_est_hectareas", "produccion_est_hectareas")
            tableMapping.ColumnMappings.Add("destino", "destino")
            tableMapping.ColumnMappings.Add("certificado_origen_semilla", "certificado_origen_semilla")
            tableMapping.ColumnMappings.Add("factura_comercio", "factura_comercio")
            tableMapping.ColumnMappings.Add("estado", "estado")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `sag_registro_lote` WHERE ((`Id` = @p1))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `sag_registro_lote` (`nombre_productor`, `representante_legal`, `iden"& _ 
                "tidad_productor`, `extendida`, `residencia_productor`, `telefono_productor`, `no"& _ 
                "_registro_productor`, `nombre_multiplicador`, `cedula_multiplicador`, `telefono_"& _ 
                "multiplicador`, `nombre_finca`, `nombre_persona_finca`, `departamento`, `municip"& _ 
                "io`, `aldea`, `caserio`, `nombre_lote`, `categoria_origen`, `tipo_cultivo`, `var"& _ 
                "iedad`, `productor`, `no_lote`, `fecha_analisis`, `ano_produ`, `categoria_semill"& _ 
                "a`, `tipo_semilla`, `cultivo_semilla`, `variedad_maiz`, `variedad_frijol`, `supe"& _ 
                "rficie_hectarea`, `fecha_aprox_siembra`, `fecha_aprox_cosecha`, `produccion_est_"& _ 
                "hectareas`, `destino`, `certificado_origen_semilla`, `factura_comercio`, `estado"& _ 
                "`) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, "& _ 
                "@p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p"& _ 
                "27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "representante_legal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "identidad_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p4"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "extendida"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "residencia_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p6"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p7"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "no_registro_productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p8"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_multiplicador"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p9"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cedula_multiplicador"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p10"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_multiplicador"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p11"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_finca"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p12"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_persona_finca"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p13"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "departamento"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p14"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "municipio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p15"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "aldea"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p16"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "caserio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p17"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_lote"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p18"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "categoria_origen"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p19"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo_cultivo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p20"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "variedad"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p21"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "productor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p22"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "no_lote"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p23"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_analisis"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p24"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ano_produ"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p25"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "categoria_semilla"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p26"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo_semilla"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p27"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cultivo_semilla"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p28"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "variedad_maiz"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p29"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "variedad_frijol"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p30"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "superficie_hectarea"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p31"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_aprox_siembra"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p32"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_aprox_cosecha"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p33"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "produccion_est_hectareas"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p34"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "destino"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p35"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "certificado_origen_semilla"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p36"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "factura_comercio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p37"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `sag_registro_lote` SET `nombre_productor` = @p1, `representante_legal` = "& _ 
                "@p2, `identidad_productor` = @p3, `extendida` = @p4, `residencia_productor` = @p"& _ 
                "5, `telefono_productor` = @p6, `no_registro_productor` = @p7, `nombre_multiplica"& _ 
                "dor` = @p8, `cedula_multiplicador` = @p9, `telefono_multiplicador` = @p10, `nomb"& _ 
                "re_finca` = @p11, `nombre_persona_finca` = @p12, `departamento` = @p13, `municip"& _ 
                "io` = @p14, `aldea` = @p15, `caserio` = @p16, `nombre_lote` = @p17, `categoria_o"& _ 
                "rigen` = @p18, `tipo_cultivo` = @p19, `variedad` = @p20, `productor` = @p21, `no"& _ 
                "_lote` = @p22, `fecha_analisis` = @p23, `ano_produ` = @p24, `categoria_semilla` "& _ 
                "= @p25, `tipo_semilla` = @p26, `cultivo_semilla` = @p27, `variedad_maiz` = @p28,"& _ 
                " `variedad_frijol` = @p29, `superficie_hectarea` = @p30, `fecha_aprox_siembra` ="& _ 
                " @p31, `fecha_aprox_cosecha` = @p32, `produccion_est_hectareas` = @p33, `destino"& _ 
                "` = @p34, `certificado_origen_semilla` = @p35, `factura_comercio` = @p36, `estad"& _ 
                "o` = @p37 WHERE ((`Id` = @p38))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "representante_legal"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "identidad_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p4"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "extendida"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "residencia_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p6"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p7"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "no_registro_productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p8"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_multiplicador"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p9"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cedula_multiplicador"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p10"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono_multiplicador"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p11"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_finca"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p12"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_persona_finca"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p13"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "departamento"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p14"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "municipio"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p15"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "aldea"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p16"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "caserio"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p17"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre_lote"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p18"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "categoria_origen"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p19"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo_cultivo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p20"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "variedad"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p21"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "productor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p22"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "no_lote"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p23"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_analisis"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p24"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ano_produ"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p25"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "categoria_semilla"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p26"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo_semilla"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p27"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cultivo_semilla"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p28"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "variedad_maiz"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p29"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "variedad_frijol"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p30"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "superficie_hectarea"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p31"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_aprox_siembra"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p32"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha_aprox_cosecha"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p33"
            param.DbType = Global.System.Data.DbType.[Decimal]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "produccion_est_hectareas"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p34"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "destino"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p35"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "certificado_origen_semilla"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p36"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "factura_comercio"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p37"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p38"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("sag_dictaConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT sag_registro_lote.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     sag_registro_lote"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetMultiplicador.sag_registro_loteDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetMultiplicador.sag_registro_loteDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetMultiplicador.sag_registro_loteDataTable = New DataSetMultiplicador.sag_registro_loteDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetMultiplicador.sag_registro_loteDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetMultiplicador) As Integer
            Return Me.Adapter.Update(dataSet, "sag_registro_lote")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal p1 As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(p1,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal p1 As String,  _
                    ByVal p2 As String,  _
                    ByVal p3 As String,  _
                    ByVal p4 As Global.System.Nullable(Of Date),  _
                    ByVal p5 As String,  _
                    ByVal p6 As String,  _
                    ByVal p7 As String,  _
                    ByVal p8 As String,  _
                    ByVal p9 As String,  _
                    ByVal p10 As String,  _
                    ByVal p11 As String,  _
                    ByVal p12 As String,  _
                    ByVal p13 As String,  _
                    ByVal p14 As String,  _
                    ByVal p15 As String,  _
                    ByVal p16 As String,  _
                    ByVal p17 As String,  _
                    ByVal p18 As String,  _
                    ByVal p19 As String,  _
                    ByVal p20 As String,  _
                    ByVal p21 As String,  _
                    ByVal p22 As String,  _
                    ByVal p23 As Global.System.Nullable(Of Date),  _
                    ByVal p24 As String,  _
                    ByVal p25 As String,  _
                    ByVal p26 As String,  _
                    ByVal p27 As String,  _
                    ByVal p28 As String,  _
                    ByVal p29 As String,  _
                    ByVal p30 As Global.System.Nullable(Of Decimal),  _
                    ByVal p31 As Global.System.Nullable(Of Date),  _
                    ByVal p32 As Global.System.Nullable(Of Date),  _
                    ByVal p33 As Global.System.Nullable(Of Decimal),  _
                    ByVal p34 As String,  _
                    ByVal p35 As Object,  _
                    ByVal p36 As Object,  _
                    ByVal p37 As String) As Integer
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(p1,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(p2,String)
            End If
            If (p3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(p3,String)
            End If
            If (p4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(p4.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(p5,String)
            End If
            If (p6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(p6,String)
            End If
            If (p7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(p7,String)
            End If
            If (p8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(p8,String)
            End If
            If (p9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p9,String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(p10,String)
            End If
            If (p11 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(p11,String)
            End If
            If (p12 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(p12,String)
            End If
            If (p13 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(p13,String)
            End If
            If (p14 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(p14,String)
            End If
            If (p15 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(p15,String)
            End If
            If (p16 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(p16,String)
            End If
            If (p17 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(p17,String)
            End If
            If (p18 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(p18,String)
            End If
            If (p19 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(p19,String)
            End If
            If (p20 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(p20,String)
            End If
            If (p21 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(p21,String)
            End If
            If (p22 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(p22,String)
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(p23.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (p24 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(p24,String)
            End If
            If (p25 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(p25,String)
            End If
            If (p26 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(p26,String)
            End If
            If (p27 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(p27,String)
            End If
            If (p28 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(p28,String)
            End If
            If (p29 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(p29,String)
            End If
            If (p30.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(p30.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (p31.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(p31.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (p32.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(p32.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (p33.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(p33.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (p34 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(p34,String)
            End If
            If (p35 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(p35,Object)
            End If
            If (p36 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(p36,Object)
            End If
            If (p37 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(p37,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal p1 As String,  _
                    ByVal p2 As String,  _
                    ByVal p3 As String,  _
                    ByVal p4 As Global.System.Nullable(Of Date),  _
                    ByVal p5 As String,  _
                    ByVal p6 As String,  _
                    ByVal p7 As String,  _
                    ByVal p8 As String,  _
                    ByVal p9 As String,  _
                    ByVal p10 As String,  _
                    ByVal p11 As String,  _
                    ByVal p12 As String,  _
                    ByVal p13 As String,  _
                    ByVal p14 As String,  _
                    ByVal p15 As String,  _
                    ByVal p16 As String,  _
                    ByVal p17 As String,  _
                    ByVal p18 As String,  _
                    ByVal p19 As String,  _
                    ByVal p20 As String,  _
                    ByVal p21 As String,  _
                    ByVal p22 As String,  _
                    ByVal p23 As Global.System.Nullable(Of Date),  _
                    ByVal p24 As String,  _
                    ByVal p25 As String,  _
                    ByVal p26 As String,  _
                    ByVal p27 As String,  _
                    ByVal p28 As String,  _
                    ByVal p29 As String,  _
                    ByVal p30 As Global.System.Nullable(Of Decimal),  _
                    ByVal p31 As Global.System.Nullable(Of Date),  _
                    ByVal p32 As Global.System.Nullable(Of Date),  _
                    ByVal p33 As Global.System.Nullable(Of Decimal),  _
                    ByVal p34 As String,  _
                    ByVal p35 As Object,  _
                    ByVal p36 As Object,  _
                    ByVal p37 As String,  _
                    ByVal p38 As Integer) As Integer
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(p1,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(p2,String)
            End If
            If (p3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(p3,String)
            End If
            If (p4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(p4.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(p5,String)
            End If
            If (p6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(p6,String)
            End If
            If (p7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(p7,String)
            End If
            If (p8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(p8,String)
            End If
            If (p9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p9,String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(p10,String)
            End If
            If (p11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(p11,String)
            End If
            If (p12 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(p12,String)
            End If
            If (p13 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(p13,String)
            End If
            If (p14 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(p14,String)
            End If
            If (p15 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(p15,String)
            End If
            If (p16 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(p16,String)
            End If
            If (p17 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(p17,String)
            End If
            If (p18 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(p18,String)
            End If
            If (p19 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(p19,String)
            End If
            If (p20 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(p20,String)
            End If
            If (p21 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(p21,String)
            End If
            If (p22 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(p22,String)
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(p23.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (p24 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(p24,String)
            End If
            If (p25 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(p25,String)
            End If
            If (p26 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(p26,String)
            End If
            If (p27 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(p27,String)
            End If
            If (p28 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(p28,String)
            End If
            If (p29 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(p29,String)
            End If
            If (p30.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(p30.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (p31.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(p31.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (p32.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(p32.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (p33.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(p33.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (p34 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(p34,String)
            End If
            If (p35 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(p35,Object)
            End If
            If (p36 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(p36,Object)
            End If
            If (p37 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(p37,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(p38,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vista_multi_loteTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vista_multi_lote"
            tableMapping.ColumnMappings.Add("ID_MULTI", "ID_MULTI")
            tableMapping.ColumnMappings.Add("NOMBRE_PRODUCTOR", "NOMBRE_PRODUCTOR")
            tableMapping.ColumnMappings.Add("REPRESENTANTE_LEGAL", "REPRESENTANTE_LEGAL")
            tableMapping.ColumnMappings.Add("IDENTIDAD_PRODUCTOR", "IDENTIDAD_PRODUCTOR")
            tableMapping.ColumnMappings.Add("EXTENDIDA", "EXTENDIDA")
            tableMapping.ColumnMappings.Add("RESIDENCIA_PRODUCTOR", "RESIDENCIA_PRODUCTOR")
            tableMapping.ColumnMappings.Add("TELEFONO_PRODUCTOR", "TELEFONO_PRODUCTOR")
            tableMapping.ColumnMappings.Add("NO_REGISTRO_PRODUCTOR", "NO_REGISTRO_PRODUCTOR")
            tableMapping.ColumnMappings.Add("NOMBRE_MULTIPLICADOR", "NOMBRE_MULTIPLICADOR")
            tableMapping.ColumnMappings.Add("CEDULA_MULTIPLICADOR", "CEDULA_MULTIPLICADOR")
            tableMapping.ColumnMappings.Add("TELEFONO_MULTIPLICADOR", "TELEFONO_MULTIPLICADOR")
            tableMapping.ColumnMappings.Add("NOMBRE_FINCA", "NOMBRE_FINCA")
            tableMapping.ColumnMappings.Add("NOMBRE_PERSONA_FINCA", "NOMBRE_PERSONA_FINCA")
            tableMapping.ColumnMappings.Add("DEPARTAMENTO", "DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO")
            tableMapping.ColumnMappings.Add("ALDEA", "ALDEA")
            tableMapping.ColumnMappings.Add("CASERIO", "CASERIO")
            tableMapping.ColumnMappings.Add("NOMBRE_LOTE", "NOMBRE_LOTE")
            tableMapping.ColumnMappings.Add("ESTADO_MULTI", "ESTADO_MULTI")
            tableMapping.ColumnMappings.Add("ID_LOTE", "ID_LOTE")
            tableMapping.ColumnMappings.Add("CATEGORIA_ORIGEN", "CATEGORIA_ORIGEN")
            tableMapping.ColumnMappings.Add("TIPO_CULTIVO", "TIPO_CULTIVO")
            tableMapping.ColumnMappings.Add("VARIEDAD", "VARIEDAD")
            tableMapping.ColumnMappings.Add("PRODUCTOR", "PRODUCTOR")
            tableMapping.ColumnMappings.Add("NO_LOTE", "NO_LOTE")
            tableMapping.ColumnMappings.Add("FECHA_ANALISIS", "FECHA_ANALISIS")
            tableMapping.ColumnMappings.Add("ANO_PRODU", "ANO_PRODU")
            tableMapping.ColumnMappings.Add("CATEGORIA_SEMILLA", "CATEGORIA_SEMILLA")
            tableMapping.ColumnMappings.Add("TIPO_SEMILLA", "TIPO_SEMILLA")
            tableMapping.ColumnMappings.Add("CULTIVO_SEMILLA", "CULTIVO_SEMILLA")
            tableMapping.ColumnMappings.Add("VARIEDAD_MAIZ", "VARIEDAD_MAIZ")
            tableMapping.ColumnMappings.Add("VARIEDAD_FRIJOL", "VARIEDAD_FRIJOL")
            tableMapping.ColumnMappings.Add("SUPERFICIE_HECTAREA", "SUPERFICIE_HECTAREA")
            tableMapping.ColumnMappings.Add("FECHA_APROX_SIEMBRA", "FECHA_APROX_SIEMBRA")
            tableMapping.ColumnMappings.Add("FECHA_APROX_COSECHA", "FECHA_APROX_COSECHA")
            tableMapping.ColumnMappings.Add("PRODUCCION_EST_HECTAREAS", "PRODUCCION_EST_HECTAREAS")
            tableMapping.ColumnMappings.Add("DESTINO", "DESTINO")
            tableMapping.ColumnMappings.Add("CERTIFICADO_ORIGEN_SEMILLA", "CERTIFICADO_ORIGEN_SEMILLA")
            tableMapping.ColumnMappings.Add("FACTURA_COMERCIO", "FACTURA_COMERCIO")
            tableMapping.ColumnMappings.Add("ESTADO_LOTE", "ESTADO_LOTE")
            tableMapping.ColumnMappings.Add("ID2", "ID2")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("sag_dictaConnectionString1").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `ID_MULTI`, `NOMBRE_PRODUCTOR`, `REPRESENTANTE_LEGAL`, `IDENTIDAD_PRODUCTO"& _ 
                "R`, `EXTENDIDA`, `RESIDENCIA_PRODUCTOR`, `TELEFONO_PRODUCTOR`, `NO_REGISTRO_PROD"& _ 
                "UCTOR`, `NOMBRE_MULTIPLICADOR`, `CEDULA_MULTIPLICADOR`, `TELEFONO_MULTIPLICADOR`"& _ 
                ", `NOMBRE_FINCA`, `NOMBRE_PERSONA_FINCA`, `DEPARTAMENTO`, `MUNICIPIO`, `ALDEA`, "& _ 
                "`CASERIO`, `NOMBRE_LOTE`, `ESTADO_MULTI`, `ID_LOTE`, `CATEGORIA_ORIGEN`, `TIPO_C"& _ 
                "ULTIVO`, `VARIEDAD`, `PRODUCTOR`, `NO_LOTE`, `FECHA_ANALISIS`, `ANO_PRODU`, `CAT"& _ 
                "EGORIA_SEMILLA`, `TIPO_SEMILLA`, `CULTIVO_SEMILLA`, `VARIEDAD_MAIZ`, `VARIEDAD_F"& _ 
                "RIJOL`, `SUPERFICIE_HECTAREA`, `FECHA_APROX_SIEMBRA`, `FECHA_APROX_COSECHA`, `PR"& _ 
                "ODUCCION_EST_HECTAREAS`, `DESTINO`, `CERTIFICADO_ORIGEN_SEMILLA`, `FACTURA_COMER"& _ 
                "CIO`, `ESTADO_LOTE`, `ID2` FROM `sag_dicta`.`vista_multi_lote`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetMultiplicador.vista_multi_loteDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetMultiplicador.vista_multi_loteDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetMultiplicador.vista_multi_loteDataTable = New DataSetMultiplicador.vista_multi_loteDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vista_acta_lote_multiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vista_acta_lote_multi"
            tableMapping.ColumnMappings.Add("ID_MULTI", "ID_MULTI")
            tableMapping.ColumnMappings.Add("NOMBRE_MULTIPLICADOR", "NOMBRE_MULTIPLICADOR")
            tableMapping.ColumnMappings.Add("REPRESENTANTE_LEGAL", "REPRESENTANTE_LEGAL")
            tableMapping.ColumnMappings.Add("TELEFONO_MULTIPLICADOR", "TELEFONO_MULTIPLICADOR")
            tableMapping.ColumnMappings.Add("DEPARTAMENTO", "DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO")
            tableMapping.ColumnMappings.Add("ALDEA", "ALDEA")
            tableMapping.ColumnMappings.Add("CASERIO", "CASERIO")
            tableMapping.ColumnMappings.Add("ESTADO_MULTI", "ESTADO_MULTI")
            tableMapping.ColumnMappings.Add("ID_LOTE", "ID_LOTE")
            tableMapping.ColumnMappings.Add("CATEGORIA_ORIGEN", "CATEGORIA_ORIGEN")
            tableMapping.ColumnMappings.Add("TIPO_CULTIVO", "TIPO_CULTIVO")
            tableMapping.ColumnMappings.Add("VARIEDAD", "VARIEDAD")
            tableMapping.ColumnMappings.Add("PRODUCTOR", "PRODUCTOR")
            tableMapping.ColumnMappings.Add("NO_LOTE", "NO_LOTE")
            tableMapping.ColumnMappings.Add("ESTADO_LOTE", "ESTADO_LOTE")
            tableMapping.ColumnMappings.Add("ID_ACTA", "ID_ACTA")
            tableMapping.ColumnMappings.Add("FECHA_ACTA", "FECHA_ACTA")
            tableMapping.ColumnMappings.Add("PORCENTAJE_HUMEDAD", "PORCENTAJE_HUMEDAD")
            tableMapping.ColumnMappings.Add("ESTADO_SENA", "ESTADO_SENA")
            tableMapping.ColumnMappings.Add("NO_SACOS", "NO_SACOS")
            tableMapping.ColumnMappings.Add("PESO_HUMEDO_QQ", "PESO_HUMEDO_QQ")
            tableMapping.ColumnMappings.Add("PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD", "PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD")
            tableMapping.ColumnMappings.Add("SEMILLA_QQ_ORO", "SEMILLA_QQ_ORO")
            tableMapping.ColumnMappings.Add("SEMILLA_QQ_CONSUMO", "SEMILLA_QQ_CONSUMO")
            tableMapping.ColumnMappings.Add("SEMILLA_QQ_BASURA", "SEMILLA_QQ_BASURA")
            tableMapping.ColumnMappings.Add("SEMILLA_QQ_TOTAL", "SEMILLA_QQ_TOTAL")
            tableMapping.ColumnMappings.Add("OBSERVACIONES", "OBSERVACIONES")
            tableMapping.ColumnMappings.Add("TARA", "TARA")
            tableMapping.ColumnMappings.Add("CICLO_ACTA", "CICLO_ACTA")
            tableMapping.ColumnMappings.Add("PESO_NETO", "PESO_NETO")
            tableMapping.ColumnMappings.Add("PESO_LB", "PESO_LB")
            tableMapping.ColumnMappings.Add("LOTE_REGISTRADO", "LOTE_REGISTRADO")
            tableMapping.ColumnMappings.Add("CATEGORIA_REGISTRADO", "CATEGORIA_REGISTRADO")
            tableMapping.ColumnMappings.Add("ACTA_FIRMADA", "ACTA_FIRMADA")
            tableMapping.ColumnMappings.Add("RENDIMIETO_ORO_PESO", "RENDIMIETO_ORO_PESO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("sag_dictaConnectionString1").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_MULTI, NOMBRE_MULTIPLICADOR, REPRESENTANTE_LEGAL, TELEFONO_MULTIPLICADO"& _ 
                "R, DEPARTAMENTO, MUNICIPIO, ALDEA, CASERIO, ESTADO_MULTI, ID_LOTE, CATEGORIA_ORI"& _ 
                "GEN, TIPO_CULTIVO, VARIEDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  PRODUCTOR, NO_LOTE, ESTADO_LOTE"& _ 
                ", ID_ACTA, FECHA_ACTA, PORCENTAJE_HUMEDAD, ESTADO_SENA, NO_SACOS, PESO_HUMEDO_QQ"& _ 
                ", PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD, SEMILLA_QQ_ORO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  SEMIL"& _ 
                "LA_QQ_CONSUMO, SEMILLA_QQ_BASURA, SEMILLA_QQ_TOTAL, OBSERVACIONES, TARA, CICLO_A"& _ 
                "CTA, PESO_NETO, PESO_LB, LOTE_REGISTRADO, CATEGORIA_REGISTRADO, ACTA_FIRMADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                  RENDIMIETO_ORO_PESO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     vista_acta_lote_multi"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetMultiplicador.vista_acta_lote_multiDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetMultiplicador.vista_acta_lote_multiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetMultiplicador.vista_acta_lote_multiDataTable = New DataSetMultiplicador.vista_acta_lote_multiDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vista_ficha_informeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vista_ficha_informe"
            tableMapping.ColumnMappings.Add("ID_MULTI", "ID_MULTI")
            tableMapping.ColumnMappings.Add("NOMBRE_MULTIPLICADOR", "NOMBRE_MULTIPLICADOR")
            tableMapping.ColumnMappings.Add("REPRESENTANTE_LEGAL", "REPRESENTANTE_LEGAL")
            tableMapping.ColumnMappings.Add("TELEFONO_MULTIPLICADOR", "TELEFONO_MULTIPLICADOR")
            tableMapping.ColumnMappings.Add("DEPARTAMENTO", "DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO")
            tableMapping.ColumnMappings.Add("ALDEA", "ALDEA")
            tableMapping.ColumnMappings.Add("CASERIO", "CASERIO")
            tableMapping.ColumnMappings.Add("ESTADO_MULTI", "ESTADO_MULTI")
            tableMapping.ColumnMappings.Add("ID_LOTE", "ID_LOTE")
            tableMapping.ColumnMappings.Add("CATEGORIA_ORIGEN", "CATEGORIA_ORIGEN")
            tableMapping.ColumnMappings.Add("TIPO_CULTIVO", "TIPO_CULTIVO")
            tableMapping.ColumnMappings.Add("VARIEDAD", "VARIEDAD")
            tableMapping.ColumnMappings.Add("PRODUCTOR", "PRODUCTOR")
            tableMapping.ColumnMappings.Add("NO_LOTE", "NO_LOTE")
            tableMapping.ColumnMappings.Add("ESTADO_LOTE", "ESTADO_LOTE")
            tableMapping.ColumnMappings.Add("ID_ACTA", "ID_ACTA")
            tableMapping.ColumnMappings.Add("FECHA_ACTA", "FECHA_ACTA")
            tableMapping.ColumnMappings.Add("PORCENTAJE_HUMEDAD", "PORCENTAJE_HUMEDAD")
            tableMapping.ColumnMappings.Add("ESTADO_SENA", "ESTADO_SENA")
            tableMapping.ColumnMappings.Add("NO_SACOS", "NO_SACOS")
            tableMapping.ColumnMappings.Add("PESO_HUMEDO_QQ", "PESO_HUMEDO_QQ")
            tableMapping.ColumnMappings.Add("PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD", "PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD")
            tableMapping.ColumnMappings.Add("SEMILLA_QQ_ORO", "SEMILLA_QQ_ORO")
            tableMapping.ColumnMappings.Add("SEMILLA_QQ_CONSUMO", "SEMILLA_QQ_CONSUMO")
            tableMapping.ColumnMappings.Add("SEMILLA_QQ_BASURA", "SEMILLA_QQ_BASURA")
            tableMapping.ColumnMappings.Add("SEMILLA_QQ_TOTAL", "SEMILLA_QQ_TOTAL")
            tableMapping.ColumnMappings.Add("OBSERVACIONES", "OBSERVACIONES")
            tableMapping.ColumnMappings.Add("TARA", "TARA")
            tableMapping.ColumnMappings.Add("CICLO_ACTA", "CICLO_ACTA")
            tableMapping.ColumnMappings.Add("PESO_NETO", "PESO_NETO")
            tableMapping.ColumnMappings.Add("PESO_LB", "PESO_LB")
            tableMapping.ColumnMappings.Add("LOTE_REGISTRADO", "LOTE_REGISTRADO")
            tableMapping.ColumnMappings.Add("CATEGORIA_REGISTRADO", "CATEGORIA_REGISTRADO")
            tableMapping.ColumnMappings.Add("ACTA_FIRMADA", "ACTA_FIRMADA")
            tableMapping.ColumnMappings.Add("RENDIMIETO_ORO_PESO", "RENDIMIETO_ORO_PESO")
            tableMapping.ColumnMappings.Add("cantidad_qq_ficha", "cantidad_qq_ficha")
            tableMapping.ColumnMappings.Add("estado", "estado")
            tableMapping.ColumnMappings.Add("peso_lb_ficha", "peso_lb_ficha")
            tableMapping.ColumnMappings.Add("cantidad_sacos_ficha", "cantidad_sacos_ficha")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("sag_dictaConnectionString1").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `ID_MULTI`, `NOMBRE_MULTIPLICADOR`, `REPRESENTANTE_LEGAL`, `TELEFONO_MULTI"& _ 
                "PLICADOR`, `DEPARTAMENTO`, `MUNICIPIO`, `ALDEA`, `CASERIO`, `ESTADO_MULTI`, `ID_"& _ 
                "LOTE`, `CATEGORIA_ORIGEN`, `TIPO_CULTIVO`, `VARIEDAD`, `PRODUCTOR`, `NO_LOTE`, `"& _ 
                "ESTADO_LOTE`, `ID_ACTA`, `FECHA_ACTA`, `PORCENTAJE_HUMEDAD`, `ESTADO_SENA`, `NO_"& _ 
                "SACOS`, `PESO_HUMEDO_QQ`, `PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD`, `SEMILLA_QQ_ORO"& _ 
                "`, `SEMILLA_QQ_CONSUMO`, `SEMILLA_QQ_BASURA`, `SEMILLA_QQ_TOTAL`, `OBSERVACIONES"& _ 
                "`, `TARA`, `CICLO_ACTA`, `PESO_NETO`, `PESO_LB`, `LOTE_REGISTRADO`, `CATEGORIA_R"& _ 
                "EGISTRADO`, `ACTA_FIRMADA`, `RENDIMIETO_ORO_PESO`, `cantidad_qq_ficha`, `estado`"& _ 
                ", `peso_lb_ficha`, `cantidad_sacos_ficha` FROM `sag_dicta`.`vista_ficha_informe`"& _ 
                ""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetMultiplicador.vista_ficha_informeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetMultiplicador.vista_ficha_informeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetMultiplicador.vista_ficha_informeDataTable = New DataSetMultiplicador.vista_ficha_informeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vista_acta_lote_multi_germTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vista_acta_lote_multi_germ"
            tableMapping.ColumnMappings.Add("ID_MULTI", "ID_MULTI")
            tableMapping.ColumnMappings.Add("NOMBRE_MULTIPLICADOR", "NOMBRE_MULTIPLICADOR")
            tableMapping.ColumnMappings.Add("REPRESENTANTE_LEGAL", "REPRESENTANTE_LEGAL")
            tableMapping.ColumnMappings.Add("TELEFONO_MULTIPLICADOR", "TELEFONO_MULTIPLICADOR")
            tableMapping.ColumnMappings.Add("DEPARTAMENTO", "DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO")
            tableMapping.ColumnMappings.Add("ALDEA", "ALDEA")
            tableMapping.ColumnMappings.Add("CASERIO", "CASERIO")
            tableMapping.ColumnMappings.Add("ESTADO_MULTI", "ESTADO_MULTI")
            tableMapping.ColumnMappings.Add("ID_LOTE", "ID_LOTE")
            tableMapping.ColumnMappings.Add("CATEGORIA_ORIGEN", "CATEGORIA_ORIGEN")
            tableMapping.ColumnMappings.Add("TIPO_CULTIVO", "TIPO_CULTIVO")
            tableMapping.ColumnMappings.Add("VARIEDAD", "VARIEDAD")
            tableMapping.ColumnMappings.Add("PRODUCTOR", "PRODUCTOR")
            tableMapping.ColumnMappings.Add("NO_LOTE", "NO_LOTE")
            tableMapping.ColumnMappings.Add("ESTADO_LOTE", "ESTADO_LOTE")
            tableMapping.ColumnMappings.Add("ANO_PRODU", "ANO_PRODU")
            tableMapping.ColumnMappings.Add("TIPO_SEMILLA", "TIPO_SEMILLA")
            tableMapping.ColumnMappings.Add("ID_ACTA", "ID_ACTA")
            tableMapping.ColumnMappings.Add("FECHA_ACTA", "FECHA_ACTA")
            tableMapping.ColumnMappings.Add("PORCENTAJE_HUMEDAD", "PORCENTAJE_HUMEDAD")
            tableMapping.ColumnMappings.Add("ESTADO_SENA", "ESTADO_SENA")
            tableMapping.ColumnMappings.Add("NO_SACOS", "NO_SACOS")
            tableMapping.ColumnMappings.Add("PESO_HUMEDO_QQ", "PESO_HUMEDO_QQ")
            tableMapping.ColumnMappings.Add("PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD", "PESO_MATERIA_PRIMA_QQ_PORCE_HUMEDAD")
            tableMapping.ColumnMappings.Add("SEMILLA_QQ_ORO", "SEMILLA_QQ_ORO")
            tableMapping.ColumnMappings.Add("SEMILLA_QQ_CONSUMO", "SEMILLA_QQ_CONSUMO")
            tableMapping.ColumnMappings.Add("SEMILLA_QQ_BASURA", "SEMILLA_QQ_BASURA")
            tableMapping.ColumnMappings.Add("SEMILLA_QQ_TOTAL", "SEMILLA_QQ_TOTAL")
            tableMapping.ColumnMappings.Add("OBSERVACIONES", "OBSERVACIONES")
            tableMapping.ColumnMappings.Add("TARA", "TARA")
            tableMapping.ColumnMappings.Add("CICLO_ACTA", "CICLO_ACTA")
            tableMapping.ColumnMappings.Add("PESO_NETO", "PESO_NETO")
            tableMapping.ColumnMappings.Add("PESO_LB", "PESO_LB")
            tableMapping.ColumnMappings.Add("LOTE_REGISTRADO", "LOTE_REGISTRADO")
            tableMapping.ColumnMappings.Add("CATEGORIA_REGISTRADO", "CATEGORIA_REGISTRADO")
            tableMapping.ColumnMappings.Add("ACTA_FIRMADA", "ACTA_FIRMADA")
            tableMapping.ColumnMappings.Add("FICHA_FIRMADO", "FICHA_FIRMADO")
            tableMapping.ColumnMappings.Add("CUADRO_FIRMADO", "CUADRO_FIRMADO")
            tableMapping.ColumnMappings.Add("archivo_lote_senasa", "archivo_lote_senasa")
            tableMapping.ColumnMappings.Add("RENDIMIETO_ORO_PESO", "RENDIMIETO_ORO_PESO")
            tableMapping.ColumnMappings.Add("id", "id")
            tableMapping.ColumnMappings.Add("decha_elaboracion_g", "decha_elaboracion_g")
            tableMapping.ColumnMappings.Add("no_envase", "no_envase")
            tableMapping.ColumnMappings.Add("peso_inicial_g", "peso_inicial_g")
            tableMapping.ColumnMappings.Add("tipo_granel", "tipo_granel")
            tableMapping.ColumnMappings.Add("fecha_recibo_g", "fecha_recibo_g")
            tableMapping.ColumnMappings.Add("fecha_muestreo_g", "fecha_muestreo_g")
            tableMapping.ColumnMappings.Add("humedad_final", "humedad_final")
            tableMapping.ColumnMappings.Add("fecha_evaluacion_g", "fecha_evaluacion_g")
            tableMapping.ColumnMappings.Add("tipo_envase", "tipo_envase")
            tableMapping.ColumnMappings.Add("fase_g", "fase_g")
            tableMapping.ColumnMappings.Add("tamano_maiz", "tamano_maiz")
            tableMapping.ColumnMappings.Add("cantidad_inicial", "cantidad_inicial")
            tableMapping.ColumnMappings.Add("cantidad_existente", "cantidad_existente")
            tableMapping.ColumnMappings.Add("no_camara", "no_camara")
            tableMapping.ColumnMappings.Add("perimetro", "perimetro")
            tableMapping.ColumnMappings.Add("certisem", "certisem")
            tableMapping.ColumnMappings.Add("fecha_certisem", "fecha_certisem")
            tableMapping.ColumnMappings.Add("planta_g", "planta_g")
            tableMapping.ColumnMappings.Add("fecha_planta_g", "fecha_planta_g")
            tableMapping.ColumnMappings.Add("semilla_pura", "semilla_pura")
            tableMapping.ColumnMappings.Add("semilla_otro_cultivo", "semilla_otro_cultivo")
            tableMapping.ColumnMappings.Add("semilla_maleza", "semilla_maleza")
            tableMapping.ColumnMappings.Add("materia_inerte", "materia_inerte")
            tableMapping.ColumnMappings.Add("plantulas_normales_1", "plantulas_normales_1")
            tableMapping.ColumnMappings.Add("plantulas_anormales_1", "plantulas_anormales_1")
            tableMapping.ColumnMappings.Add("semilla_muerta_1", "semilla_muerta_1")
            tableMapping.ColumnMappings.Add("semillas_duras_1", "semillas_duras_1")
            tableMapping.ColumnMappings.Add("semillas_debiles_1", "semillas_debiles_1")
            tableMapping.ColumnMappings.Add("semilla_mezcla_1", "semilla_mezcla_1")
            tableMapping.ColumnMappings.Add("no_dias_1", "no_dias_1")
            tableMapping.ColumnMappings.Add("plantulas_normales_2", "plantulas_normales_2")
            tableMapping.ColumnMappings.Add("plantulas_anormales_2", "plantulas_anormales_2")
            tableMapping.ColumnMappings.Add("semilla_muerta_2", "semilla_muerta_2")
            tableMapping.ColumnMappings.Add("semillas_duras_2", "semillas_duras_2")
            tableMapping.ColumnMappings.Add("semillas_debiles_2", "semillas_debiles_2")
            tableMapping.ColumnMappings.Add("semilla_mezcla_2", "semilla_mezcla_2")
            tableMapping.ColumnMappings.Add("no_dias_2", "no_dias_2")
            tableMapping.ColumnMappings.Add("plantulas_normales_3", "plantulas_normales_3")
            tableMapping.ColumnMappings.Add("plantulas_anormales_3", "plantulas_anormales_3")
            tableMapping.ColumnMappings.Add("semilla_muerta_3", "semilla_muerta_3")
            tableMapping.ColumnMappings.Add("semillas_duras_3", "semillas_duras_3")
            tableMapping.ColumnMappings.Add("semillas_debiles_3", "semillas_debiles_3")
            tableMapping.ColumnMappings.Add("semilla_mezcla_3", "semilla_mezcla_3")
            tableMapping.ColumnMappings.Add("no_dias_3", "no_dias_3")
            tableMapping.ColumnMappings.Add("plantulas_normales_4", "plantulas_normales_4")
            tableMapping.ColumnMappings.Add("plantulas_anormales_4", "plantulas_anormales_4")
            tableMapping.ColumnMappings.Add("semilla_muerta_4", "semilla_muerta_4")
            tableMapping.ColumnMappings.Add("semillas_duras_4", "semillas_duras_4")
            tableMapping.ColumnMappings.Add("semillas_debiles_4", "semillas_debiles_4")
            tableMapping.ColumnMappings.Add("semilla_mezcla_4", "semilla_mezcla_4")
            tableMapping.ColumnMappings.Add("no_dias_4", "no_dias_4")
            tableMapping.ColumnMappings.Add("plantulas_normales_total", "plantulas_normales_total")
            tableMapping.ColumnMappings.Add("plantulas_anormales_total", "plantulas_anormales_total")
            tableMapping.ColumnMappings.Add("semilla_muerta_total", "semilla_muerta_total")
            tableMapping.ColumnMappings.Add("semillas_duras_total", "semillas_duras_total")
            tableMapping.ColumnMappings.Add("semillas_debiles_total", "semillas_debiles_total")
            tableMapping.ColumnMappings.Add("semilla_mezcla_total", "semilla_mezcla_total")
            tableMapping.ColumnMappings.Add("no_dias_total", "no_dias_total")
            tableMapping.ColumnMappings.Add("porcentaje_germnimacion", "porcentaje_germnimacion")
            tableMapping.ColumnMappings.Add("observaciones_g", "observaciones_g")
            tableMapping.ColumnMappings.Add("responsable_muestreo", "responsable_muestreo")
            tableMapping.ColumnMappings.Add("responsable_analisis", "responsable_analisis")
            tableMapping.ColumnMappings.Add("estado", "estado")
            tableMapping.ColumnMappings.Add("decision", "decision")
            tableMapping.ColumnMappings.Add("id_2", "id_2")
            tableMapping.ColumnMappings.Add("germinacion_firmada", "germinacion_firmada")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("sag_dictaConnectionString1").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `ID_MULTI`, `NOMBRE_MULTIPLICADOR`, `REPRESENTANTE_LEGAL`, `TELEFONO_MULTI"& _ 
                "PLICADOR`, `DEPARTAMENTO`, `MUNICIPIO`, `ALDEA`, `CASERIO`, `ESTADO_MULTI`, `ID_"& _ 
                "LOTE`, `CATEGORIA_ORIGEN`, `TIPO_CULTIVO`, `VARIEDAD`, `PRODUCTOR`, `NO_LOTE`, `"& _ 
                "ESTADO_LOTE`, `ANO_PRODU`, `TIPO_SEMILLA`, `ID_ACTA`, `FECHA_ACTA`, `PORCENTAJE_"& _ 
                "HUMEDAD`, `ESTADO_SENA`, `NO_SACOS`, `PESO_HUMEDO_QQ`, `PESO_MATERIA_PRIMA_QQ_PO"& _ 
                "RCE_HUMEDAD`, `SEMILLA_QQ_ORO`, `SEMILLA_QQ_CONSUMO`, `SEMILLA_QQ_BASURA`, `SEMI"& _ 
                "LLA_QQ_TOTAL`, `OBSERVACIONES`, `TARA`, `CICLO_ACTA`, `PESO_NETO`, `PESO_LB`, `L"& _ 
                "OTE_REGISTRADO`, `CATEGORIA_REGISTRADO`, `ACTA_FIRMADA`, `FICHA_FIRMADO`, `CUADR"& _ 
                "O_FIRMADO`, `archivo_lote_senasa`, `RENDIMIETO_ORO_PESO`, `id`, `decha_elaboraci"& _ 
                "on_g`, `no_envase`, `peso_inicial_g`, `tipo_granel`, `fecha_recibo_g`, `fecha_mu"& _ 
                "estreo_g`, `humedad_final`, `fecha_evaluacion_g`, `tipo_envase`, `fase_g`, `tama"& _ 
                "no_maiz`, `cantidad_inicial`, `cantidad_existente`, `no_camara`, `perimetro`, `c"& _ 
                "ertisem`, `fecha_certisem`, `planta_g`, `fecha_planta_g`, `semilla_pura`, `semil"& _ 
                "la_otro_cultivo`, `semilla_maleza`, `materia_inerte`, `plantulas_normales_1`, `p"& _ 
                "lantulas_anormales_1`, `semilla_muerta_1`, `semillas_duras_1`, `semillas_debiles"& _ 
                "_1`, `semilla_mezcla_1`, `no_dias_1`, `plantulas_normales_2`, `plantulas_anormal"& _ 
                "es_2`, `semilla_muerta_2`, `semillas_duras_2`, `semillas_debiles_2`, `semilla_me"& _ 
                "zcla_2`, `no_dias_2`, `plantulas_normales_3`, `plantulas_anormales_3`, `semilla_"& _ 
                "muerta_3`, `semillas_duras_3`, `semillas_debiles_3`, `semilla_mezcla_3`, `no_dia"& _ 
                "s_3`, `plantulas_normales_4`, `plantulas_anormales_4`, `semilla_muerta_4`, `semi"& _ 
                "llas_duras_4`, `semillas_debiles_4`, `semilla_mezcla_4`, `no_dias_4`, `plantulas"& _ 
                "_normales_total`, `plantulas_anormales_total`, `semilla_muerta_total`, `semillas"& _ 
                "_duras_total`, `semillas_debiles_total`, `semilla_mezcla_total`, `no_dias_total`"& _ 
                ", `porcentaje_germnimacion`, `observaciones_g`, `responsable_muestreo`, `respons"& _ 
                "able_analisis`, `estado`, `decision`, `id_2`, `germinacion_firmada` FROM `sag_di"& _ 
                "cta`.`vista_acta_lote_multi_germ`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetMultiplicador.vista_acta_lote_multi_germDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetMultiplicador.vista_acta_lote_multi_germDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetMultiplicador.vista_acta_lote_multi_germDataTable = New DataSetMultiplicador.vista_acta_lote_multi_germDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vista_inventarioTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vista_inventario"
            tableMapping.ColumnMappings.Add("fecha_acta", "fecha_acta")
            tableMapping.ColumnMappings.Add("categoria_registrado", "categoria_registrado")
            tableMapping.ColumnMappings.Add("tipo_cultivo", "tipo_cultivo")
            tableMapping.ColumnMappings.Add("lote_registrado", "lote_registrado")
            tableMapping.ColumnMappings.Add("procedencia", "procedencia")
            tableMapping.ColumnMappings.Add("nombre_multiplicador", "nombre_multiplicador")
            tableMapping.ColumnMappings.Add("humedad_final", "humedad_final")
            tableMapping.ColumnMappings.Add("fase_g", "fase_g")
            tableMapping.ColumnMappings.Add("variedad", "variedad")
            tableMapping.ColumnMappings.Add("peso_neto_resta", "peso_neto_resta")
            tableMapping.ColumnMappings.Add("entrada", "entrada")
            tableMapping.ColumnMappings.Add("salida", "salida")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("sag_dictaConnectionString1").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `fecha_acta`, `categoria_registrado`, `tipo_cultivo`, `lote_registrado`, `"& _ 
                "procedencia`, `nombre_multiplicador`, `humedad_final`, `fase_g`, `variedad`, `pe"& _ 
                "so_neto_resta`, `entrada`, `salida` FROM `sag_dicta`.`vista_inventario`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetMultiplicador.vista_inventarioDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetMultiplicador.vista_inventarioDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetMultiplicador.vista_inventarioDataTable = New DataSetMultiplicador.vista_inventarioDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vista_inventario_informeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vista_inventario_informe"
            tableMapping.ColumnMappings.Add("categoria_registrado", "categoria_registrado")
            tableMapping.ColumnMappings.Add("tipo_cultivo", "tipo_cultivo")
            tableMapping.ColumnMappings.Add("variedad", "variedad")
            tableMapping.ColumnMappings.Add("peso_neto_resta", "peso_neto_resta")
            tableMapping.ColumnMappings.Add("entrada", "entrada")
            tableMapping.ColumnMappings.Add("salida", "salida")
            tableMapping.ColumnMappings.Add("precio", "precio")
            tableMapping.ColumnMappings.Add("valor_neto_resta", "valor_neto_resta")
            tableMapping.ColumnMappings.Add("fase_g", "fase_g")
            tableMapping.ColumnMappings.Add("nombre_multiplicador", "nombre_multiplicador")
            tableMapping.ColumnMappings.Add("procedencia", "procedencia")
            tableMapping.ColumnMappings.Add("lote_registrado", "lote_registrado")
            tableMapping.ColumnMappings.Add("fecha_acta", "fecha_acta")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("sag_dictaConnectionString1").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT categoria_registrado, tipo_cultivo, variedad, peso_neto_resta, entrada, sa"& _ 
                "lida, precio, valor_neto_resta, fase_g, nombre_multiplicador, procedencia, lote_"& _ 
                "registrado, fecha_acta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     vista_inventario_informe"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetMultiplicador.vista_inventario_informeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetMultiplicador.vista_inventario_informeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetMultiplicador.vista_inventario_informeDataTable = New DataSetMultiplicador.vista_inventario_informeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _sag_registro_senasaTableAdapter As sag_registro_senasaTableAdapter
        
        Private _sag_registro_senasa1TableAdapter As sag_registro_senasa1TableAdapter
        
        Private _sag_registro_multiplicadorTableAdapter As sag_registro_multiplicadorTableAdapter
        
        Private _sag_registro_loteTableAdapter As sag_registro_loteTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property sag_registro_senasaTableAdapter() As sag_registro_senasaTableAdapter
            Get
                Return Me._sag_registro_senasaTableAdapter
            End Get
            Set
                Me._sag_registro_senasaTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property sag_registro_senasa1TableAdapter() As sag_registro_senasa1TableAdapter
            Get
                Return Me._sag_registro_senasa1TableAdapter
            End Get
            Set
                Me._sag_registro_senasa1TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property sag_registro_multiplicadorTableAdapter() As sag_registro_multiplicadorTableAdapter
            Get
                Return Me._sag_registro_multiplicadorTableAdapter
            End Get
            Set
                Me._sag_registro_multiplicadorTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property sag_registro_loteTableAdapter() As sag_registro_loteTableAdapter
            Get
                Return Me._sag_registro_loteTableAdapter
            End Get
            Set
                Me._sag_registro_loteTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._sag_registro_senasaTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._sag_registro_senasaTableAdapter.Connection) Is Nothing)) Then
                    Return Me._sag_registro_senasaTableAdapter.Connection
                End If
                If ((Not (Me._sag_registro_senasa1TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._sag_registro_senasa1TableAdapter.Connection) Is Nothing)) Then
                    Return Me._sag_registro_senasa1TableAdapter.Connection
                End If
                If ((Not (Me._sag_registro_multiplicadorTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._sag_registro_multiplicadorTableAdapter.Connection) Is Nothing)) Then
                    Return Me._sag_registro_multiplicadorTableAdapter.Connection
                End If
                If ((Not (Me._sag_registro_loteTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._sag_registro_loteTableAdapter.Connection) Is Nothing)) Then
                    Return Me._sag_registro_loteTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._sag_registro_senasaTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._sag_registro_senasa1TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._sag_registro_multiplicadorTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._sag_registro_loteTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSetMultiplicador, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._sag_registro_senasaTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.sag_registro_senasa.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._sag_registro_senasaTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._sag_registro_senasa1TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.sag_registro_senasa1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._sag_registro_senasa1TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._sag_registro_multiplicadorTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.sag_registro_multiplicador.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._sag_registro_multiplicadorTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._sag_registro_loteTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.sag_registro_lote.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._sag_registro_loteTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSetMultiplicador, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._sag_registro_senasaTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.sag_registro_senasa.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._sag_registro_senasaTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._sag_registro_senasa1TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.sag_registro_senasa1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._sag_registro_senasa1TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._sag_registro_multiplicadorTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.sag_registro_multiplicador.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._sag_registro_multiplicadorTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._sag_registro_loteTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.sag_registro_lote.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._sag_registro_loteTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSetMultiplicador, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._sag_registro_loteTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.sag_registro_lote.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._sag_registro_loteTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._sag_registro_multiplicadorTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.sag_registro_multiplicador.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._sag_registro_multiplicadorTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._sag_registro_senasa1TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.sag_registro_senasa1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._sag_registro_senasa1TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._sag_registro_senasaTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.sag_registro_senasa.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._sag_registro_senasaTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSetMultiplicador) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._sag_registro_senasaTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._sag_registro_senasaTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._sag_registro_senasa1TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._sag_registro_senasa1TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._sag_registro_multiplicadorTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._sag_registro_multiplicadorTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._sag_registro_loteTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._sag_registro_loteTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._sag_registro_senasaTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._sag_registro_senasaTableAdapter, Me._sag_registro_senasaTableAdapter.Connection)
                    Me._sag_registro_senasaTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._sag_registro_senasaTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._sag_registro_senasaTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._sag_registro_senasaTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._sag_registro_senasaTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._sag_registro_senasa1TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._sag_registro_senasa1TableAdapter, Me._sag_registro_senasa1TableAdapter.Connection)
                    Me._sag_registro_senasa1TableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._sag_registro_senasa1TableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._sag_registro_senasa1TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._sag_registro_senasa1TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._sag_registro_senasa1TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._sag_registro_multiplicadorTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._sag_registro_multiplicadorTableAdapter, Me._sag_registro_multiplicadorTableAdapter.Connection)
                    Me._sag_registro_multiplicadorTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._sag_registro_multiplicadorTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._sag_registro_multiplicadorTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._sag_registro_multiplicadorTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._sag_registro_multiplicadorTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._sag_registro_loteTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._sag_registro_loteTableAdapter, Me._sag_registro_loteTableAdapter.Connection)
                    Me._sag_registro_loteTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._sag_registro_loteTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._sag_registro_loteTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._sag_registro_loteTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._sag_registro_loteTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._sag_registro_senasaTableAdapter) Is Nothing) Then
                    Me._sag_registro_senasaTableAdapter.Connection = CType(revertConnections(Me._sag_registro_senasaTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._sag_registro_senasaTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._sag_registro_senasa1TableAdapter) Is Nothing) Then
                    Me._sag_registro_senasa1TableAdapter.Connection = CType(revertConnections(Me._sag_registro_senasa1TableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._sag_registro_senasa1TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._sag_registro_multiplicadorTableAdapter) Is Nothing) Then
                    Me._sag_registro_multiplicadorTableAdapter.Connection = CType(revertConnections(Me._sag_registro_multiplicadorTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._sag_registro_multiplicadorTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._sag_registro_loteTableAdapter) Is Nothing) Then
                    Me._sag_registro_loteTableAdapter.Connection = CType(revertConnections(Me._sag_registro_loteTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._sag_registro_loteTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
